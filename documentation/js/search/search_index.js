var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Amenity.html",[0,0.225,1,3.082]],["body/classes/Amenity.html",[0,0.303,1,4.161,2,0.819,3,0.093,4,0.081,5,0.081,6,3.597,7,1.506,8,2.802,9,0.479,10,1.692,11,4.451,12,1.452,13,3.597,14,2.308,15,1.232,16,2.308,17,1.06,18,0.011,19,1.658,20,1.96,21,2.178,22,3.888,23,3.005,24,2.818,25,1.155,26,4.102,27,2.652,28,4.102,29,2.989,30,2.511,31,1.793,32,4.102,33,1.965,34,1.673,35,2.832,36,1.793,37,0.946,38,1.673,39,1.793,40,1.673,41,1.793,42,0.321,43,3.441,44,1.673,45,1.673,46,2.832,47,2.308,48,3.142,49,1.34,50,3.265,51,0.093,52,1.859,53,4.102,54,0.005,55,0.007,56,0.005]],["title/controllers/AppController.html",[57,1.329,58,3.082]],["body/controllers/AppController.html",[0,0.229,3,0.096,4,0.085,5,0.085,9,0.499,12,1.303,18,0.011,19,1.38,20,1.71,25,1.008,42,0.342,51,0.096,54,0.005,55,0.007,56,0.005,57,1.843,58,4.274,59,1.352,60,3.741,61,1.38,62,6.229,63,5.814,64,3.234,65,5.098,66,4.266,67,1.615,68,4.266,69,4.266,70,4.266,71,1.547,72,1.503,73,6.229,74,4.266,75,4.266,76,4.266,77,2.086,78,4.266,79,4.266,80,0.713,81,4.276,82,3.741,83,3.849,84,4.266,85,3.136,86,4.266,87,5.814,88,3.136,89,4.266,90,2.265,91,3.559,92,2.541,93,4.266,94,4.266,95,4.266,96,1.569,97,4.266,98,4.266,99,4.266,100,4.266,101,4.266,102,4.266]],["title/modules/AppModule.html",[103,1.253,104,3.082]],["body/modules/AppModule.html",[0,0.171,3,0.072,4,0.063,5,0.063,18,0.011,42,0.378,51,0.072,52,1.446,54,0.004,55,0.006,56,0.004,58,4.141,59,1.499,80,0.533,81,4.504,82,2.797,103,1.683,104,6.318,105,1.346,106,1.346,107,1.446,108,1.446,109,1.346,110,2.552,111,1.446,112,2.797,113,2.797,114,2.797,115,4.784,116,4.784,117,4.784,118,4.784,119,4.784,120,4.784,121,4.784,122,4.784,123,4.784,124,4.784,125,4.784,126,4.504,127,2.142,128,1.446,129,1.446,130,3.19,131,3.057,132,3.19,133,2.797,134,2.191,135,1.694,136,3.19,137,3.19,138,3.19,139,3.19,140,3.19,141,3.19,142,3.19,143,3.19,144,3.19,145,3.19,146,3.19,147,3.19,148,3.19,149,3.19,150,3.19,151,3.19]],["title/injectables/AppService.html",[81,2.711,152,0.995]],["body/injectables/AppService.html",[0,0.312,3,0.131,4,0.115,5,0.115,9,0.68,18,0.011,19,1.686,25,0.886,42,0.268,51,0.131,54,0.007,55,0.009,56,0.007,61,1.686,62,7.006,67,1.42,80,0.972,81,4.594,96,1.38,152,1.686,153,2.294,154,5.101,155,5.817,156,5.817,157,5.817]],["title/modules/AuthModule.html",[103,1.253,115,2.88]],["body/modules/AuthModule.html",[0,0.225,3,0.095,4,0.083,5,0.083,18,0.011,42,0.366,51,0.095,54,0.005,55,0.007,56,0.005,80,0.7,83,4.835,103,1.958,105,1.768,106,1.768,107,1.898,108,1.898,109,1.768,110,2.969,111,2.969,115,5.747,126,4.932,127,2.602,128,1.898,129,1.898,131,3.713,158,3.673,159,3.673,160,3.673,161,4.189,162,5.239,163,5.239,164,4.189,165,4.189,166,3.333,167,5.742,168,2.708,169,4.189,170,3.333,171,3.08,172,3.673,173,4.189,174,4.189,175,4.189,176,3.673,177,3.673,178,4.189,179,4.189,180,4.189,181,4.189]],["title/injectables/AuthService.html",[83,2.44,152,0.995]],["body/injectables/AuthService.html",[0,0.199,3,0.084,4,0.074,5,0.074,9,0.433,12,1.498,17,0.895,18,0.011,19,1.742,25,1.018,42,0.307,51,0.084,54,0.008,55,0.007,56,0.005,61,1.252,64,3.839,65,4.625,67,1.499,71,1.779,72,1.729,80,0.62,83,3.069,90,2.8,91,3.228,96,1.586,152,1.252,153,1.463,166,2.951,182,3.252,183,5.274,184,5.274,185,3.709,186,4.492,187,7.551,188,3.709,189,5.274,190,3.709,191,4.625,192,3.549,193,5.274,194,3.709,195,2.611,196,5.274,197,4.591,198,3.709,199,3.622,200,2.727,201,1.888,202,3.709,203,2.503,204,3.407,205,3.709,206,3.709,207,3.252,208,3.709,209,3.709,210,3.709,211,3.709,212,3.709,213,3.709]],["title/classes/Conversation.html",[0,0.225,214,2.711]],["body/classes/Conversation.html",[0,0.215,2,0.8,3,0.091,4,0.079,5,0.079,7,1.482,8,2.782,9,0.468,10,1.664,14,2.271,15,1.213,16,2.271,17,1.054,18,0.011,20,1.946,25,1.146,30,2.453,31,1.752,33,1.934,34,1.634,35,2.798,36,1.752,37,0.924,38,1.634,39,1.752,40,1.634,41,1.752,42,0.334,45,1.634,47,2.271,48,3.092,49,1.309,51,0.091,54,0.005,55,0.007,56,0.005,195,2.687,201,2.04,214,3.601,215,3.514,216,5.613,217,6.401,218,3.929,219,4.993,220,2.947,221,4.008,222,3.189,223,4.008,224,4.008,225,4.008,226,2.591,227,4.397,228,3.825,229,3.514,230,4.008,231,3.514,232,4.008,233,4.008]],["title/controllers/ConversationsController.html",[57,1.329,234,3.082]],["body/controllers/ConversationsController.html",[0,0.197,3,0.083,4,0.073,5,0.073,9,0.429,12,1.491,15,1.592,17,0.891,18,0.011,19,1.859,20,1.819,25,1.072,42,0.306,51,0.083,54,0.005,55,0.007,56,0.005,57,1.163,59,1.163,61,1.242,67,1.718,71,1.77,72,1.72,77,2.983,80,0.613,92,1.604,96,1.669,234,3.848,235,3.218,236,1.868,237,2.92,238,1.434,239,2.459,240,2.065,241,1.935,242,2.065,243,3.218,244,4.729,245,3.67,246,3.67,247,1.447,248,2.779,249,3.67,250,1.357,251,2.664,252,3.67,253,1.447,254,5.286,255,2.906,256,3.67,257,2.664,258,2.037,259,1.868,260,1.868,261,3.945,262,3.218,263,1.199,264,4.166,265,1.357,266,3.67,267,1.726,268,1.948,269,3.67,270,3.67,271,2.037,272,3.67,273,2.037,274,3.67,275,1.948,276,3.67]],["title/modules/ConversationsModule.html",[103,1.253,116,2.88]],["body/modules/ConversationsModule.html",[0,0.287,3,0.121,4,0.106,5,0.106,18,0.011,42,0.34,51,0.121,54,0.007,55,0.009,56,0.007,59,2.138,80,0.894,103,2.207,105,2.257,106,2.257,107,2.423,108,2.423,109,2.257,110,3.347,111,2.423,116,5.608,127,3.056,128,2.423,129,2.423,234,5.431,261,5.279,262,4.689,277,4.689,278,4.689,279,5.348,280,5.348]],["title/injectables/ConversationsService.html",[152,0.995,261,2.711]],["body/injectables/ConversationsService.html",[0,0.209,3,0.088,4,0.077,5,0.077,9,0.455,12,1.531,15,1.624,17,0.915,18,0.011,19,1.707,25,1.096,37,1.831,42,0.29,51,0.088,54,0.005,55,0.007,56,0.005,61,1.296,67,1.87,71,1.818,72,1.767,80,0.651,96,1.707,152,1.296,153,1.536,214,4.418,237,3.1,238,1.496,239,2.526,240,2.154,241,2.019,242,2.154,243,4.788,244,4.651,247,2.154,250,2.019,253,2.154,254,5.259,261,3.53,263,1.273,264,4.345,265,1.44,281,3.416,282,3.896,283,3.896,284,3.896,285,3.896,286,3.896,287,3.993,288,2.267,289,1.536,290,2.162,291,2.162]],["title/classes/CoreEntity.html",[0,0.225,8,1.55]],["body/classes/CoreEntity.html",[0,0.282,2,1.051,3,0.119,4,0.104,5,0.104,8,2.469,9,0.616,10,1.996,14,2.991,15,1.597,16,2.991,17,0.982,18,0.011,20,1.897,25,1.117,33,2.678,34,2.991,37,1.54,38,2.991,40,2.991,42,0.242,49,1.721,51,0.119,54,0.007,55,0.008,56,0.007,292,4.618,293,5.267,294,5.267,295,5.267]],["title/controllers/CountriesController.html",[57,1.329,296,3.082]],["body/controllers/CountriesController.html",[0,0.239,3,0.101,4,0.088,5,0.088,9,0.521,12,1.342,15,1.304,17,0.802,18,0.011,19,1.605,20,1.749,25,1.03,42,0.311,51,0.101,54,0.006,55,0.008,56,0.006,57,1.413,59,1.413,61,1.421,67,1.652,71,1.594,72,1.549,77,3.307,80,0.745,92,1.948,96,1.605,236,2.269,238,1.64,239,2.673,241,2.214,250,1.648,251,3.049,257,2.269,259,2.269,260,2.269,263,1.456,267,2.096,268,2.366,275,2.366,296,4.403,297,3.908,298,4.457,299,3.908,300,5.336,301,4.457,302,4.457,303,4.457,304,4.373,305,3.908,306,3.908,307,4.457,308,4.457,309,4.457,310,4.457]],["title/modules/CountriesModule.html",[103,1.253,117,2.88]],["body/modules/CountriesModule.html",[0,0.274,3,0.116,4,0.101,5,0.101,18,0.011,42,0.363,51,0.116,54,0.007,55,0.008,56,0.007,59,2.078,80,0.854,103,2.162,105,2.157,106,2.157,107,2.316,108,2.316,109,2.157,110,3.278,111,2.316,117,5.543,127,2.969,128,2.316,129,2.316,131,3.305,134,3.511,135,2.714,296,5.318,304,5.218,305,4.483,311,4.483,312,4.483,313,5.112,314,5.112,315,3.305,316,3.758,317,5.112]],["title/injectables/CountriesService.html",[152,0.995,304,2.711]],["body/injectables/CountriesService.html",[0,0.223,3,0.094,4,0.083,5,0.083,9,0.487,12,1.464,15,0.907,17,0.875,18,0.011,25,1.071,37,1.506,42,0.339,49,1.36,51,0.094,54,0.005,55,0.007,56,0.005,61,1.357,64,3.94,67,1.595,71,1.738,72,1.689,80,0.696,90,3.036,91,2.548,92,1.82,96,1.55,135,2.211,152,1.357,153,1.642,204,3.625,238,1.566,239,2.599,241,2.114,250,2.114,263,1.36,299,5.014,300,5.062,304,3.697,306,3.651,315,2.692,316,3.061,318,3.651,319,4.164,320,4.829,321,4.164,322,5.719,323,4.164,324,4.164,325,4.164,326,3.061,327,4.164,328,4.164,329,4.164,330,4.164]],["title/classes/Country.html",[0,0.225,315,2.711]],["body/classes/Country.html",[0,0.25,2,0.625,3,0.071,4,0.062,5,0.062,7,1.241,8,2.558,9,0.366,10,1.394,12,1.383,13,3.093,14,1.902,15,1.016,16,1.902,17,0.987,18,0.011,20,1.707,21,1.663,25,1.054,29,3.069,31,1.369,33,1.62,34,1.278,35,2.436,36,1.369,37,1.793,38,1.278,39,1.369,40,1.278,41,1.369,42,0.304,44,1.278,45,1.278,46,2.039,47,1.902,49,1.023,51,0.105,54,0.008,55,0.006,56,0.004,61,1.107,67,0.765,71,0.834,72,0.81,96,0.743,203,1.278,220,2.303,228,3.204,315,3.016,331,2.493,332,3.712,333,4.539,334,4.268,335,3.133,336,3.133,337,3.133,338,4.664,339,3.427,340,4.268,341,3.991,342,3.133,343,1.917,344,1.739,345,2.303,346,2.303,347,3.429,348,3.429,349,3.429,350,3.429,351,3.429,352,3.429,353,3.429,354,3.429,355,3.429,356,3.429,357,3.429,358,3.429,359,3.429,360,3.429,361,3.429,362,2.747,363,3.133,364,3.133,365,3.133,366,1.917,367,3.133,368,2.747,369,3.133]],["title/classes/CreateConversationDto.html",[0,0.225,244,2.711]],["body/classes/CreateConversationDto.html",[0,0.347,2,1.291,3,0.146,4,0.128,5,0.128,18,0.01,51,0.146,54,0.008,55,0.01,56,0.008,244,4.894,370,5.67,371,5.145]],["title/classes/CreateCountryDto.html",[0,0.225,300,2.88]],["body/classes/CreateCountryDto.html",[0,0.376,2,1.138,3,0.129,4,0.113,5,0.113,9,0.666,10,2.097,12,1.703,17,0.763,18,0.011,20,1.473,25,0.868,42,0.323,44,2.324,51,0.129,54,0.007,55,0.009,56,0.007,300,4.819,316,4.189,333,5.589,343,3.487,362,6.152,372,6.152,373,4.997,374,5.698]],["title/classes/CreateDiscountDto.html",[0,0.225,375,2.711]],["body/classes/CreateDiscountDto.html",[0,0.347,2,1.291,3,0.146,4,0.128,5,0.128,18,0.01,51,0.146,54,0.008,55,0.01,56,0.008,375,4.894,376,5.67,377,5.145]],["title/classes/CreateListDto.html",[0,0.225,378,2.711]],["body/classes/CreateListDto.html",[0,0.347,2,1.291,3,0.146,4,0.128,5,0.128,18,0.01,51,0.146,54,0.008,55,0.01,56,0.008,378,4.894,379,5.67,380,5.145]],["title/classes/CreatePaymentDto.html",[0,0.225,381,2.711]],["body/classes/CreatePaymentDto.html",[0,0.347,2,1.291,3,0.146,4,0.128,5,0.128,18,0.01,51,0.146,54,0.008,55,0.01,56,0.008,381,4.894,382,5.67,383,5.145]],["title/classes/CreatePhotoDto.html",[0,0.225,384,2.711]],["body/classes/CreatePhotoDto.html",[0,0.347,2,1.291,3,0.146,4,0.128,5,0.128,18,0.01,51,0.146,54,0.008,55,0.01,56,0.008,384,4.894,385,5.67,386,5.145]],["title/classes/CreateReservationDto.html",[0,0.225,387,2.44]],["body/classes/CreateReservationDto.html",[0,0.226,2,0.841,3,0.095,4,0.084,5,0.084,9,0.493,10,1.723,17,1.048,18,0.011,25,1.231,33,2.454,37,1.918,42,0.194,51,0.095,54,0.005,55,0.007,56,0.005,61,1.368,67,1.408,96,1.368,289,1.662,339,3.648,341,4.249,387,3.355,388,7.167,389,3.354,390,4.249,391,4.832,392,6.573,393,5.763,394,5.23,395,7.067,396,5.624,397,4.214,398,4.214,399,4.214,400,4.214,401,4.214,402,4.214,403,4.214,404,4.214,405,3.824,406,4.214,407,2.579,408,2.894,409,3.354,410,4.588,411,3.354]],["title/classes/CreateReviewDto.html",[0,0.225,412,2.711]],["body/classes/CreateReviewDto.html",[0,0.347,2,1.291,3,0.146,4,0.128,5,0.128,18,0.01,51,0.146,54,0.008,55,0.01,56,0.008,412,4.894,413,5.67,414,5.145]],["title/classes/CreateRoomDto.html",[0,0.225,415,2.711]],["body/classes/CreateRoomDto.html",[0,0.347,2,1.291,3,0.146,4,0.128,5,0.128,18,0.01,51,0.146,54,0.008,55,0.01,56,0.008,415,4.894,416,5.67,417,4.754]],["title/classes/CreateTodoDTO.html",[0,0.225,418,2.711]],["body/classes/CreateTodoDTO.html",[0,0.346,2,0.999,3,0.113,4,0.099,5,0.099,9,0.585,10,1.931,17,0.959,18,0.011,19,1.795,20,1.851,25,1.09,42,0.23,43,3.801,44,2.04,51,0.113,54,0.006,55,0.008,56,0.006,418,4.178,419,6.635,420,3.98,421,6.277,422,6.277,423,6.277,424,3.76,425,5.002,426,5.002,427,5.002,428,6.462,429,5.002,430,5.002,431,5.666,432,5.002,433,5.142,434,7.159,435,3.677,436,6.462]],["title/classes/CreateUserDto.html",[0,0.225,437,2.711]],["body/classes/CreateUserDto.html",[0,0.343,2,0.984,3,0.111,4,0.098,5,0.098,9,0.576,10,1.913,17,1.008,18,0.011,19,1.957,20,1.946,25,1.146,42,0.227,43,4.32,44,2.011,51,0.111,54,0.006,55,0.008,56,0.006,197,4.883,199,4.883,437,4.14,438,6.839,439,3.924,440,6.235,441,6.235,442,6.235,443,4.931,444,4.931,445,4.931,446,4.931]],["title/classes/DateRange.html",[0,0.225,405,2.44]],["body/classes/DateRange.html",[0,0.193,2,0.719,3,0.081,4,0.071,5,0.071,9,0.421,10,1.544,12,1.158,17,0.884,18,0.011,25,1.005,33,2.92,51,0.117,54,0.005,55,0.007,56,0.005,61,1.226,67,0.88,71,1.375,72,1.336,90,1.913,96,1.566,203,3.18,405,4.064,407,2.205,424,3.006,447,2.867,448,6.565,449,6.985,450,5.167,451,5.167,452,3.603,453,3.603,454,3.603,455,5.167,456,3.603,457,3.16,458,5.786,459,5.786,460,4.53,461,4.53,462,5.786,463,4.53,464,4.53,465,4.53,466,4.53,467,4.53,468,3.16,469,2.867,470,3.16,471,4.53,472,4.53,473,4.53,474,4.53,475,4.53,476,3.16,477,4.53,478,3.16,479,4.111,480,3.16,481,3.603,482,3.603,483,3.603]],["title/classes/Discount.html",[0,0.225,484,2.88]],["body/classes/Discount.html",[0,0.256,2,0.644,3,0.073,4,0.064,5,0.064,7,1.269,8,2.586,9,0.377,10,1.425,12,0.723,13,3.148,14,1.944,15,1.038,16,1.944,17,1.09,18,0.011,20,1.871,21,3.011,23,3.326,25,1.132,29,2.725,31,1.41,33,2.32,34,1.316,35,2.479,36,1.41,37,1.805,38,1.316,39,1.41,40,1.316,41,1.41,42,0.307,44,1.316,45,1.316,46,2.738,47,1.944,49,1.054,51,0.108,52,2.161,54,0.006,55,0.006,56,0.004,61,1.131,67,0.788,71,0.859,72,0.834,203,1.316,207,2.83,289,1.273,334,4.321,339,1.791,340,3.667,343,1.975,344,1.791,366,1.975,448,4.973,484,3.275,485,2.568,486,4.513,487,4.768,488,4.181,489,3.227,490,3.227,491,3.275,492,3.227,493,3.227,494,1.878,495,3.227,496,4.985,497,3.227,498,3.227,499,4.181,500,3.227,501,3.506,502,3.275,503,2.532,504,2.373,505,2.373,506,3.506,507,3.506,508,3.506,509,3.227,510,3.227,511,3.227,512,4.768]],["title/interfaces/DiscountStrategy.html",[505,3.082,513,2.226]],["body/interfaces/DiscountStrategy.html",[3,0.114,4,0.1,5,0.1,9,0.591,10,1.945,17,0.677,18,0.011,37,1.166,42,0.233,51,0.147,52,3.261,54,0.006,55,0.008,56,0.006,203,2.062,340,5.082,424,2.942,469,4.024,496,4.024,504,3.717,505,4.784,506,3.717,507,3.717,508,3.717,513,2.685,514,3.473,515,4.024,516,7.177,517,5.178,518,5.056,519,4.024,520,4.207,521,4.434,522,4.434]],["title/controllers/DiscountsController.html",[57,1.329,523,3.082]],["body/controllers/DiscountsController.html",[0,0.197,3,0.083,4,0.073,5,0.073,9,0.429,12,1.491,15,1.592,17,0.891,18,0.011,19,1.859,20,1.819,25,1.072,42,0.306,51,0.083,54,0.005,55,0.007,56,0.005,57,1.163,59,1.163,61,1.242,67,1.718,71,1.77,72,1.72,77,2.983,80,0.613,92,1.604,96,1.669,236,1.868,238,1.434,239,2.459,240,2.065,241,1.935,242,2.065,247,1.447,248,2.779,250,1.357,251,2.664,253,1.447,255,2.906,257,2.664,258,2.037,259,1.868,260,1.868,263,1.199,265,1.357,267,1.726,268,1.948,271,2.037,273,2.037,275,1.948,375,4.729,523,3.848,524,3.218,525,2.92,526,3.218,527,3.67,528,3.67,529,3.67,530,3.67,531,5.286,532,3.67,533,3.945,534,3.218,535,4.166,536,3.67,537,3.67,538,3.67,539,3.67,540,3.67,541,3.67]],["title/modules/DiscountsModule.html",[103,1.253,118,2.88]],["body/modules/DiscountsModule.html",[0,0.287,3,0.121,4,0.106,5,0.106,18,0.011,42,0.34,51,0.121,54,0.007,55,0.009,56,0.007,59,2.138,80,0.894,103,2.207,105,2.257,106,2.257,107,2.423,108,2.423,109,2.257,110,3.347,111,2.423,118,5.608,127,3.056,128,2.423,129,2.423,523,5.431,533,5.279,534,4.689,542,4.689,543,4.689,544,5.348,545,5.348]],["title/injectables/DiscountsService.html",[152,0.995,533,2.711]],["body/injectables/DiscountsService.html",[0,0.209,3,0.088,4,0.077,5,0.077,9,0.455,12,1.531,15,1.624,17,0.915,18,0.011,19,1.707,25,1.096,37,1.831,42,0.29,51,0.088,54,0.005,55,0.007,56,0.005,61,1.296,67,1.87,71,1.818,72,1.767,80,0.651,96,1.707,152,1.296,153,1.536,238,1.496,239,2.526,240,2.154,241,2.019,242,2.154,247,2.154,250,2.019,253,2.154,263,1.273,265,1.44,287,3.993,288,2.267,289,1.536,290,2.162,291,2.162,375,4.651,484,4.693,525,3.1,526,4.788,531,5.259,533,3.53,535,4.345,546,3.416,547,3.896,548,3.896,549,3.896,550,3.896,551,3.896]],["title/classes/Facility.html",[0,0.225,552,3.082]],["body/classes/Facility.html",[0,0.303,2,0.819,3,0.093,4,0.081,5,0.081,7,1.506,8,2.802,9,0.479,10,1.692,11,4.451,12,1.452,13,3.597,14,2.308,15,1.232,16,2.308,17,1.06,18,0.011,19,1.658,20,1.96,21,2.178,22,3.888,23,3.005,24,2.818,25,1.155,27,2.652,29,2.989,30,2.511,31,1.793,33,1.965,34,1.673,35,2.832,36,1.793,37,0.946,38,1.673,39,1.793,40,1.673,41,1.793,42,0.321,43,3.441,44,1.673,45,1.673,46,2.832,47,2.308,48,3.142,49,1.34,50,3.265,51,0.093,52,1.859,54,0.005,55,0.007,56,0.005,552,4.161,553,3.597,554,4.102,555,4.102,556,4.102,557,4.102]],["title/interfaces/IPriceDetail.html",[513,2.226,558,3.336]],["body/interfaces/IPriceDetail.html",[0,0.157,1,3.254,3,0.039,4,0.034,5,0.034,7,0.463,8,1.08,9,0.203,10,0.873,11,1.194,17,1.025,18,0.011,19,1.348,22,1.194,23,1.551,29,1.191,37,1.893,42,0.332,43,3.165,44,0.709,45,0.709,46,3.108,47,1.191,48,2.739,49,0.568,51,0.066,52,1.712,54,0.002,55,0.004,56,0.002,61,0.413,80,0.291,91,3.02,96,1.415,195,1.824,200,2.777,201,0.885,203,2.528,218,3.156,226,1.124,228,3.389,289,2.107,315,3.19,334,2.442,339,2.457,340,3.672,341,3.19,343,1.064,366,1.788,368,1.525,405,1.7,408,1.194,424,1.7,484,3.04,491,2.595,499,1.525,502,3.04,503,2.006,513,0.923,514,1.194,525,1.384,552,3.628,558,3.006,559,1.384,560,5.961,561,6.2,562,5.961,563,5.68,564,5.68,565,5.961,566,3.254,567,2.325,568,1.739,569,1.739,570,2.862,571,1.525,572,3.04,573,1.739,574,2.709,575,1.525,576,2.442,577,1.384,578,1.279,579,1.739,580,1.739,581,2.777,582,1.739,583,3.881,584,2.562,585,2.562,586,2.562,587,2.562,588,2.562,589,2.562,590,1.739,591,1.739,592,1.739,593,1.739,594,1.739,595,1.739,596,1.739,597,1.739,598,1.739,599,1.739,600,1.739,601,1.384,602,1.739,603,1.739,604,1.739,605,1.739,606,1.739,607,1.739,608,1.739,609,1.739,610,2.922,611,1.739,612,1.739,613,1.739,614,1.739,615,1.384,616,1.194,617,1.279,618,1.739,619,1.739,620,1.739,621,1.279,622,1.739,623,1.384,624,1.739,625,1.739,626,2.007,627,1.739,628,1.739,629,1.739,630,3.389,631,1.739,632,1.739,633,1.739,634,1.739,635,1.739,636,2.922,637,1.739,638,1.739,639,1.739,640,1.739,641,1.739,642,1.739,643,1.739,644,1.739,645,1.739,646,1.739,647,1.384,648,1.739,649,1.739,650,1.739,651,1.739,652,2.922,653,1.739,654,1.739,655,1.739,656,2.922,657,1.739,658,1.739,659,1.064,660,1.739,661,1.739,662,1.739,663,2.922,664,1.739,665,1.739,666,1.739,667,1.739]],["title/interfaces/IReservationConstructor.html",[513,2.226,668,3.082]],["body/interfaces/IReservationConstructor.html",[0,0.232,3,0.064,4,0.056,5,0.056,7,0.757,8,1.603,9,0.332,10,1.296,17,1.045,18,0.011,23,1.51,29,3.215,33,2.639,37,1.69,42,0.329,44,1.16,45,1.16,46,2.916,47,1.769,48,2.407,49,0.929,51,0.098,52,1.289,54,0.004,55,0.006,56,0.004,80,0.475,96,1.247,195,2.565,201,1.448,203,1.769,218,1.448,227,2.979,263,0.929,289,1.711,334,3.399,339,3.851,341,4.486,343,1.741,344,1.579,387,1.655,390,4.486,391,5.101,396,2.264,405,2.524,407,1.741,408,1.954,409,2.264,410,3.452,411,2.264,424,1.655,491,2.979,501,3.865,502,2.979,503,2.303,513,1.51,514,1.954,566,2.091,567,3.452,626,4.582,647,2.264,668,3.865,669,2.091,670,2.494,671,1.954,672,4.183,673,3.452,674,3.452,675,3.452,676,3.452,677,3.452,678,3.452,679,3.452,680,2.494,681,2.494,682,2.494,683,2.494,684,2.494,685,2.494,686,3.803,687,2.494,688,2.494,689,2.494,690,3.803,691,2.494,692,2.494,693,2.494,694,2.091,695,3.803,696,2.494,697,2.494,698,2.494,699,2.494]],["title/injectables/JwtAuthGuard.html",[85,3.082,152,0.995]],["body/injectables/JwtAuthGuard.html",[0,0.327,3,0.138,4,0.121,5,0.121,7,1.623,18,0.011,42,0.336,51,0.138,54,0.008,55,0.009,56,0.008,80,1.019,85,5.375,152,1.735,153,2.405,168,3.942,700,5.347,701,4.852,702,5.347,703,6.098]],["title/injectables/JwtStrategy.html",[152,0.995,162,2.88]],["body/injectables/JwtStrategy.html",[0,0.237,3,0.1,4,0.088,5,0.088,7,1.179,9,0.518,12,1.336,17,0.799,18,0.011,25,0.908,42,0.357,51,0.1,54,0.006,55,0.008,56,0.006,61,1.415,64,3.296,67,1.081,71,1.587,72,1.542,80,0.74,83,4.513,90,2.351,96,1.051,152,1.415,153,1.747,162,4.096,168,2.863,170,3.524,171,3.256,172,3.884,177,3.884,191,3.884,192,3.166,195,2.783,200,4.384,201,2.254,203,1.806,204,2.458,267,2.083,289,1.747,520,2.863,630,3.042,694,3.256,704,3.884,705,5.229,706,3.884,707,4.429,708,5.964,709,4.429,710,3.884,711,4.429,712,3.884,713,3.524,714,3.884,715,3.884,716,4.429,717,4.429,718,4.429,719,4.429,720,4.429]],["title/classes/List.html",[0,0.225,570,2.711]],["body/classes/List.html",[0,0.299,2,0.802,3,0.091,4,0.08,5,0.08,7,1.485,8,2.784,9,0.47,10,1.668,12,1.437,13,3.559,14,2.276,15,1.215,16,2.276,17,1.055,18,0.011,19,1.324,20,1.947,25,1.147,27,2.599,29,2.968,30,2.46,31,1.757,33,1.938,34,1.639,35,2.802,36,1.757,37,0.927,38,1.639,39,1.757,40,1.639,41,1.757,42,0.335,43,2.963,44,1.639,45,1.639,46,2.439,47,2.276,48,3.098,49,1.313,51,0.091,54,0.005,55,0.007,56,0.005,195,2.69,201,2.046,222,3.199,227,3.833,344,2.231,494,2.339,503,2.963,570,3.608,721,3.525,722,6.411,723,4.02,724,4.02,725,4.02,726,4.02,727,4.02]],["title/controllers/ListsController.html",[57,1.329,728,3.082]],["body/controllers/ListsController.html",[0,0.197,3,0.083,4,0.073,5,0.073,9,0.429,12,1.491,15,1.592,17,0.891,18,0.011,19,1.859,20,1.819,25,1.072,42,0.306,51,0.083,54,0.005,55,0.007,56,0.005,57,1.163,59,1.163,61,1.242,67,1.718,71,1.77,72,1.72,77,2.983,80,0.613,92,1.604,96,1.669,236,1.868,238,1.434,239,2.459,240,2.065,241,1.935,242,2.065,247,1.447,248,2.779,250,1.357,251,2.664,253,1.447,255,2.906,257,2.664,258,2.037,259,1.868,260,1.868,263,1.199,265,1.357,267,1.726,268,1.948,271,2.037,273,2.037,275,1.948,378,4.729,623,2.92,728,3.848,729,3.218,730,3.218,731,3.67,732,3.67,733,3.67,734,3.67,735,5.286,736,3.67,737,3.945,738,3.218,739,4.166,740,3.67,741,3.67,742,3.67,743,3.67,744,3.67,745,3.67]],["title/modules/ListsModule.html",[103,1.253,119,2.88]],["body/modules/ListsModule.html",[0,0.287,3,0.121,4,0.106,5,0.106,18,0.011,42,0.34,51,0.121,54,0.007,55,0.009,56,0.007,59,2.138,80,0.894,103,2.207,105,2.257,106,2.257,107,2.423,108,2.423,109,2.257,110,3.347,111,2.423,119,5.608,127,3.056,128,2.423,129,2.423,728,5.431,737,5.279,738,4.689,746,4.689,747,4.689,748,5.348,749,5.348]],["title/injectables/ListsService.html",[152,0.995,737,2.711]],["body/injectables/ListsService.html",[0,0.209,3,0.088,4,0.077,5,0.077,9,0.455,12,1.531,15,1.624,17,0.915,18,0.011,19,1.707,25,1.096,37,1.831,42,0.29,51,0.088,54,0.005,55,0.007,56,0.005,61,1.296,67,1.87,71,1.818,72,1.767,80,0.651,96,1.707,152,1.296,153,1.536,238,1.496,239,2.526,240,2.154,241,2.019,242,2.154,247,2.154,250,2.019,253,2.154,263,1.273,265,1.44,287,3.993,288,2.267,289,1.536,290,2.162,291,2.162,378,4.651,570,4.418,623,3.1,730,4.788,735,5.259,737,3.53,739,4.345,750,3.416,751,3.896,752,3.896,753,3.896,754,3.896,755,3.896]],["title/injectables/LocalAuthGuard.html",[88,3.082,152,0.995]],["body/injectables/LocalAuthGuard.html",[0,0.327,3,0.138,4,0.121,5,0.121,7,1.623,18,0.011,42,0.336,51,0.138,54,0.008,55,0.009,56,0.008,80,1.019,88,5.375,152,1.735,153,2.405,168,3.942,701,4.852,702,5.347,756,5.347,757,6.098]],["title/injectables/LocalStrategy.html",[152,0.995,163,2.88]],["body/injectables/LocalStrategy.html",[0,0.24,3,0.101,4,0.089,5,0.089,7,1.194,9,0.524,12,1.348,17,0.806,18,0.011,19,1.847,25,0.916,42,0.333,51,0.101,54,0.006,55,0.008,56,0.006,61,1.427,64,3.318,67,1.095,71,1.601,72,1.555,80,0.75,83,4.529,90,2.382,96,1.064,152,1.427,153,1.769,163,4.131,168,2.9,170,3.57,192,3.194,195,2.509,197,5.194,199,4.131,203,1.829,204,2.49,267,2.11,289,1.769,630,3.081,694,3.298,705,5.275,706,3.934,710,3.934,712,3.934,713,3.57,715,3.934,758,3.934,759,4.486,760,6.015,761,4.486,762,6.015,763,3.934,764,4.486,765,4.486,766,4.486]],["title/classes/Message.html",[0,0.225,219,2.88]],["body/classes/Message.html",[0,0.219,2,0.814,3,0.092,4,0.081,5,0.081,7,1.5,8,2.797,9,0.477,10,1.685,14,2.299,15,1.227,16,2.299,17,1.075,18,0.011,19,1.338,20,1.956,21,2.165,22,3.872,25,1.152,31,2.464,33,1.957,34,1.663,35,2.824,36,1.782,37,0.94,38,1.663,39,1.782,40,1.663,41,1.782,42,0.321,45,1.663,46,2.464,47,2.299,49,1.332,51,0.092,54,0.005,55,0.007,56,0.005,195,2.704,201,2.076,214,5.11,219,3.872,227,2.801,494,3.28,503,3.43,767,3.576,768,6.461,769,6.461,770,4.078,771,4.078,772,4.078,773,4.078,774,4.078,775,4.078]],["title/classes/Payment.html",[0,0.225,776,2.88]],["body/classes/Payment.html",[0,0.252,2,0.938,3,0.106,4,0.093,5,0.093,7,1.651,8,2.916,9,0.549,10,1.854,14,2.529,15,1.351,16,2.529,17,1.029,18,0.011,20,1.91,25,1.125,31,2.053,33,2.154,34,1.916,35,3.035,36,2.053,37,1.083,38,1.916,39,2.053,40,1.916,41,2.053,42,0.319,45,1.916,47,2.529,49,1.535,51,0.106,54,0.006,55,0.008,56,0.006,195,3.018,201,2.391,494,2.734,503,3.293,776,4.26,777,4.119,778,4.698,779,4.698]],["title/controllers/PaymentsController.html",[57,1.329,780,3.082]],["body/controllers/PaymentsController.html",[0,0.197,3,0.083,4,0.073,5,0.073,9,0.429,12,1.491,15,1.592,17,0.891,18,0.011,19,1.859,20,1.819,25,1.072,42,0.306,51,0.083,54,0.005,55,0.007,56,0.005,57,1.163,59,1.163,61,1.242,67,1.718,71,1.77,72,1.72,77,2.983,80,0.613,92,1.604,96,1.669,236,1.868,238,1.434,239,2.459,240,2.065,241,1.935,242,2.065,247,1.447,248,2.779,250,1.357,251,2.664,253,1.447,255,2.906,257,2.664,258,2.037,259,1.868,260,1.868,263,1.199,265,1.357,267,1.726,268,1.948,271,2.037,273,2.037,275,1.948,381,4.729,780,3.848,781,3.218,782,2.92,783,3.218,784,3.67,785,3.67,786,3.67,787,3.67,788,5.286,789,3.67,790,3.945,791,3.218,792,4.166,793,3.67,794,3.67,795,3.67,796,3.67,797,3.67,798,3.67]],["title/modules/PaymentsModule.html",[103,1.253,120,2.88]],["body/modules/PaymentsModule.html",[0,0.287,3,0.121,4,0.106,5,0.106,18,0.011,42,0.34,51,0.121,54,0.007,55,0.009,56,0.007,59,2.138,80,0.894,103,2.207,105,2.257,106,2.257,107,2.423,108,2.423,109,2.257,110,3.347,111,2.423,120,5.608,127,3.056,128,2.423,129,2.423,780,5.431,790,5.279,791,4.689,799,4.689,800,4.689,801,5.348,802,5.348]],["title/injectables/PaymentsService.html",[152,0.995,790,2.711]],["body/injectables/PaymentsService.html",[0,0.209,3,0.088,4,0.077,5,0.077,9,0.455,12,1.531,15,1.624,17,0.915,18,0.011,19,1.707,25,1.096,37,1.831,42,0.29,51,0.088,54,0.005,55,0.007,56,0.005,61,1.296,67,1.87,71,1.818,72,1.767,80,0.651,96,1.707,152,1.296,153,1.536,238,1.496,239,2.526,240,2.154,241,2.019,242,2.154,247,2.154,250,2.019,253,2.154,263,1.273,265,1.44,287,3.993,288,2.267,289,1.536,290,2.162,291,2.162,381,4.651,776,4.693,782,3.1,783,4.788,788,5.259,790,3.53,792,4.345,803,3.416,804,3.896,805,3.896,806,3.896,807,3.896,808,3.896]],["title/classes/Photo.html",[0,0.225,572,2.88]],["body/classes/Photo.html",[0,0.3,2,0.805,3,0.091,4,0.08,5,0.08,7,1.488,8,2.787,9,0.471,10,1.671,14,2.28,15,1.218,16,2.28,17,1.036,18,0.011,19,1.646,20,1.949,23,3.409,24,2.769,25,1.148,27,2.606,29,3.214,31,1.762,33,1.942,34,1.644,35,2.806,36,1.762,37,0.93,38,1.644,39,1.762,40,1.644,41,1.762,42,0.319,43,3.409,44,1.644,45,1.644,46,2.806,47,2.28,49,1.317,51,0.091,52,2.91,54,0.005,55,0.007,56,0.005,344,2.238,494,2.346,503,2.969,572,3.841,616,2.769,617,2.964,809,3.535,810,6.421,811,6.421,812,3.208,813,4.031,814,4.031,815,4.031,816,4.031,817,4.031]],["title/controllers/PhotosController.html",[57,1.329,818,3.082]],["body/controllers/PhotosController.html",[0,0.197,3,0.083,4,0.073,5,0.073,9,0.429,12,1.491,15,1.592,17,0.891,18,0.011,19,1.859,20,1.819,25,1.072,42,0.306,51,0.083,54,0.005,55,0.007,56,0.005,57,1.163,59,1.163,61,1.242,67,1.718,71,1.77,72,1.72,77,2.983,80,0.613,92,1.604,96,1.669,236,1.868,238,1.434,239,2.459,240,2.065,241,1.935,242,2.065,247,1.447,248,2.779,250,1.357,251,2.664,253,1.447,255,2.906,257,2.664,258,2.037,259,1.868,260,1.868,263,1.199,265,1.357,267,1.726,268,1.948,271,2.037,273,2.037,275,1.948,384,4.729,601,2.92,818,3.848,819,3.218,820,3.218,821,3.67,822,3.67,823,3.67,824,3.67,825,5.286,826,3.67,827,3.945,828,3.218,829,4.166,830,3.67,831,3.67,832,3.67,833,3.67,834,3.67,835,3.67]],["title/modules/PhotosModule.html",[103,1.253,121,2.88]],["body/modules/PhotosModule.html",[0,0.287,3,0.121,4,0.106,5,0.106,18,0.011,42,0.34,51,0.121,54,0.007,55,0.009,56,0.007,59,2.138,80,0.894,103,2.207,105,2.257,106,2.257,107,2.423,108,2.423,109,2.257,110,3.347,111,2.423,121,5.608,127,3.056,128,2.423,129,2.423,818,5.431,827,5.279,828,4.689,836,4.689,837,4.689,838,5.348,839,5.348]],["title/injectables/PhotosService.html",[152,0.995,827,2.711]],["body/injectables/PhotosService.html",[0,0.209,3,0.088,4,0.077,5,0.077,9,0.455,12,1.531,15,1.624,17,0.915,18,0.011,19,1.707,25,1.096,37,1.831,42,0.29,51,0.088,54,0.005,55,0.007,56,0.005,61,1.296,67,1.87,71,1.818,72,1.767,80,0.651,96,1.707,152,1.296,153,1.536,238,1.496,239,2.526,240,2.154,241,2.019,242,2.154,247,2.154,250,2.019,253,2.154,263,1.273,265,1.44,287,3.993,288,2.267,289,1.536,290,2.162,291,2.162,384,4.651,572,4.693,601,3.1,820,4.788,825,5.259,827,3.53,829,4.345,840,3.416,841,3.896,842,3.896,843,3.896,844,3.896,845,3.896]],["title/classes/Rating.html",[0,0.225,846,3.082]],["body/classes/Rating.html",[0,0.281,2,0.733,3,0.083,4,0.073,5,0.073,7,1.393,8,2.704,9,0.429,10,1.564,12,0.822,14,2.135,15,1.14,16,2.135,17,1.049,18,0.011,20,1.891,21,2.779,25,1.114,31,1.604,33,1.818,34,1.496,35,2.667,36,1.604,37,1.407,38,1.496,39,1.604,40,1.496,41,1.604,42,0.306,44,1.496,45,1.496,46,2.667,47,2.135,49,1.199,51,0.118,54,0.005,55,0.007,56,0.005,334,4.548,339,2.906,343,2.246,366,2.246,390,3.384,491,2.52,494,2.135,502,3.595,503,2.779,574,4.71,846,3.848,847,2.92,848,6.102,849,6.102,850,6.168,851,3.67,852,3.67,853,3.67,854,3.218,855,3.67,856,3.67,857,3.67,858,4.59,859,4.59,860,4.59,861,4.59,862,3.67,863,3.67,864,3.67,865,3.67,866,2.92,867,3.67,868,3.67]],["title/classes/Reservation.html",[0,0.225,218,2.134]],["body/classes/Reservation.html",[0,0.197,2,0.459,3,0.052,4,0.046,5,0.046,7,0.977,8,2.257,9,0.269,10,1.098,12,0.515,14,1.498,15,0.8,16,1.498,17,1.049,18,0.011,20,1.82,21,3.04,23,1.95,25,1.147,29,2.984,30,1.407,31,1.005,33,2.495,34,0.938,35,2.005,36,1.005,37,1.582,38,0.938,39,1.005,40,0.938,41,1.005,42,0.306,44,0.938,45,0.938,46,2.668,47,1.498,48,2.039,49,0.751,51,0.083,52,1.042,54,0.003,55,0.005,56,0.003,61,0.872,67,1.12,71,0.612,72,0.595,80,0.384,90,1.221,96,1.088,195,2.257,201,1.17,203,1.498,218,1.87,222,1.83,227,2.523,263,0.751,289,1.449,334,3.702,339,3.389,341,3.947,343,1.407,344,1.276,387,1.338,390,3.947,391,4.489,396,4.168,405,2.669,407,1.407,408,1.579,409,1.83,410,2.923,411,1.83,424,2.137,491,2.523,494,1.338,501,3.372,502,2.523,503,1.95,513,1.221,566,1.691,567,2.923,626,3.15,647,1.83,668,3.851,669,1.691,670,2.016,671,1.579,672,4.557,673,2.923,674,2.923,675,2.923,676,2.923,677,2.923,678,2.923,679,2.923,680,2.016,681,2.016,682,4.022,683,2.016,684,4.022,685,4.593,686,3.221,687,2.016,688,2.016,689,4.593,690,3.221,691,2.016,692,2.016,693,3.221,694,1.691,695,4.022,696,2.016,697,2.016,698,2.016,699,2.016,854,2.016,869,2.299,870,2.299,871,3.673,872,2.299,873,2.299,874,2.299,875,2.299,876,2.299,877,2.299,878,2.299,879,2.299,880,2.299,881,2.299,882,2.299,883,2.299]],["title/controllers/ReservationsController.html",[57,1.329,884,3.082]],["body/controllers/ReservationsController.html",[0,0.197,3,0.083,4,0.073,5,0.073,9,0.429,12,1.491,15,1.592,17,0.891,18,0.011,19,1.859,20,1.819,25,1.072,42,0.306,51,0.083,54,0.005,55,0.007,56,0.005,57,1.163,59,1.163,61,1.242,67,1.718,71,1.77,72,1.72,77,2.983,80,0.613,92,1.604,96,1.669,236,1.868,238,1.434,239,2.459,240,2.065,241,1.935,242,2.065,247,1.447,248,2.779,250,1.357,251,2.664,253,1.447,255,2.906,257,2.664,258,2.037,259,1.868,260,1.868,263,1.199,265,1.357,267,1.726,268,1.948,271,2.037,273,2.037,275,1.948,387,4.256,671,3.595,884,3.848,885,3.218,886,2.92,887,3.218,888,3.67,889,3.67,890,3.67,891,3.67,892,5.286,893,3.67,894,3.945,895,3.218,896,3.67,897,3.67,898,3.67,899,3.67,900,3.67,901,3.67]],["title/modules/ReservationsModule.html",[103,1.253,122,2.88]],["body/modules/ReservationsModule.html",[0,0.287,3,0.121,4,0.106,5,0.106,18,0.011,42,0.34,51,0.121,54,0.007,55,0.009,56,0.007,59,2.138,80,0.894,103,2.207,105,2.257,106,2.257,107,2.423,108,2.423,109,2.257,110,3.347,111,2.423,122,5.608,127,3.056,128,2.423,129,2.423,884,5.431,894,5.279,895,4.689,902,4.689,903,4.689,904,5.348,905,5.348]],["title/injectables/ReservationsService.html",[152,0.995,894,2.711]],["body/injectables/ReservationsService.html",[0,0.209,3,0.088,4,0.077,5,0.077,9,0.455,12,1.531,15,1.624,17,0.915,18,0.011,19,1.707,25,1.096,37,1.831,42,0.29,51,0.088,54,0.005,55,0.007,56,0.005,61,1.296,67,1.87,71,1.818,72,1.767,80,0.651,96,1.707,152,1.296,153,1.536,218,3.478,238,1.496,239,2.526,240,2.154,241,2.019,242,2.154,247,2.154,250,2.019,253,2.154,263,1.273,265,1.44,287,3.993,288,2.267,289,1.536,290,2.162,291,2.162,387,4.186,671,3.75,886,3.1,887,4.788,892,5.259,894,3.53,906,3.416,907,3.896,908,3.896,909,3.896,910,3.896,911,3.896]],["title/classes/ReserveRoomDTO.html",[0,0.225,576,2.711]],["body/classes/ReserveRoomDTO.html",[0,0.271,2,1.009,3,0.114,4,0.1,5,0.1,9,0.591,10,1.945,17,1.053,18,0.011,25,1.197,33,2.638,37,1.856,42,0.233,51,0.114,54,0.006,55,0.008,56,0.006,339,3.994,341,4.652,390,4.652,391,5.29,393,6.31,405,2.942,407,3.095,408,3.473,417,3.717,576,4.207,912,7.056,913,5.056,914,5.056,915,5.056,916,5.056,917,5.056]],["title/classes/Review.html",[0,0.225,574,2.566]],["body/classes/Review.html",[0,0.211,2,0.787,3,0.089,4,0.078,5,0.078,7,1.465,8,2.767,9,0.46,10,1.645,14,2.244,15,1.198,16,2.244,17,1.066,18,0.011,20,1.935,25,1.14,29,3.196,31,2.772,33,1.911,34,1.607,35,2.772,36,1.722,37,0.908,38,1.607,39,1.722,40,1.607,41,1.722,42,0.332,45,1.607,47,2.244,49,1.287,51,0.089,54,0.005,55,0.007,56,0.005,195,2.67,201,2.005,220,2.897,228,3.78,344,2.187,494,3.202,503,3.368,574,3.369,615,3.135,616,2.706,617,2.897,626,4.356,846,5.311,918,3.455,919,6.343,920,3.94,921,3.94,922,3.94,923,3.94,924,3.94,925,3.94,926,3.94]],["title/controllers/ReviewsController.html",[57,1.329,927,3.082]],["body/controllers/ReviewsController.html",[0,0.197,3,0.083,4,0.073,5,0.073,9,0.429,12,1.491,15,1.592,17,0.891,18,0.011,19,1.859,20,1.819,25,1.072,42,0.306,51,0.083,54,0.005,55,0.007,56,0.005,57,1.163,59,1.163,61,1.242,67,1.718,71,1.77,72,1.72,77,2.983,80,0.613,92,1.604,96,1.669,236,1.868,238,1.434,239,2.459,240,2.065,241,1.935,242,2.065,247,1.447,248,2.779,250,1.357,251,2.664,253,1.447,255,2.906,257,2.664,258,2.037,259,1.868,260,1.868,263,1.199,265,1.357,267,1.726,268,1.948,271,2.037,273,2.037,275,1.948,412,4.729,621,2.698,927,3.848,928,3.218,929,3.218,930,3.67,931,3.67,932,3.67,933,3.67,934,5.286,935,3.67,936,3.945,937,3.218,938,4.166,939,3.67,940,3.67,941,3.67,942,3.67,943,3.67,944,3.67]],["title/modules/ReviewsModule.html",[103,1.253,123,2.88]],["body/modules/ReviewsModule.html",[0,0.287,3,0.121,4,0.106,5,0.106,18,0.011,42,0.34,51,0.121,54,0.007,55,0.009,56,0.007,59,2.138,80,0.894,103,2.207,105,2.257,106,2.257,107,2.423,108,2.423,109,2.257,110,3.347,111,2.423,123,5.608,127,3.056,128,2.423,129,2.423,927,5.431,936,5.279,937,4.689,945,4.689,946,4.689,947,5.348,948,5.348]],["title/injectables/ReviewsService.html",[152,0.995,936,2.711]],["body/injectables/ReviewsService.html",[0,0.209,3,0.088,4,0.077,5,0.077,9,0.455,12,1.531,15,1.624,17,0.915,18,0.011,19,1.707,25,1.096,37,1.831,42,0.29,51,0.088,54,0.005,55,0.007,56,0.005,61,1.296,67,1.87,71,1.818,72,1.767,80,0.651,96,1.707,152,1.296,153,1.536,238,1.496,239,2.526,240,2.154,241,2.019,242,2.154,247,2.154,250,2.019,253,2.154,263,1.273,265,1.44,287,3.993,288,2.267,289,1.536,290,2.162,291,2.162,412,4.651,574,4.182,621,2.864,929,4.788,934,5.259,936,3.53,938,4.345,949,3.416,950,3.896,951,3.896,952,3.896,953,3.896,954,3.896]],["title/controllers/RoomsController.html",[57,1.329,955,3.082]],["body/controllers/RoomsController.html",[0,0.17,3,0.072,4,0.063,5,0.063,9,0.371,12,1.488,13,1.763,15,1.514,17,0.889,18,0.011,19,1.792,20,1.798,25,1.059,31,1.388,37,1.295,42,0.32,51,0.072,54,0.004,55,0.006,56,0.004,57,1.007,59,1.007,61,1.118,64,2.746,67,1.698,71,1.767,72,1.717,73,4.132,77,2.746,80,0.531,92,1.388,96,1.65,192,2.502,195,1.742,218,1.616,226,2.053,236,1.616,238,1.29,239,2.297,240,1.858,241,1.742,242,1.858,247,1.252,248,2.502,250,1.174,251,2.398,253,1.252,255,2.615,257,2.859,258,1.763,259,1.616,260,1.616,263,1.037,265,1.174,267,1.494,268,1.686,271,1.763,273,1.763,275,1.686,394,3.749,415,4.496,576,4.781,577,2.527,578,4.13,955,3.464,956,2.785,957,4.926,958,2.785,959,3.176,960,3.176,961,3.176,962,3.176,963,2.785,964,4.712,965,3.176,966,5.079,967,3.176,968,3.632,969,2.785,970,3.176,971,3.176,972,3.176,973,3.176,974,3.176,975,3.176,976,2.785,977,3.176]],["title/modules/RoomsModule.html",[103,1.253,124,2.88]],["body/modules/RoomsModule.html",[0,0.268,3,0.113,4,0.099,5,0.099,18,0.011,29,2.04,42,0.369,51,0.113,54,0.006,55,0.008,56,0.006,59,2.049,80,0.836,103,2.139,105,2.111,106,2.111,107,2.266,108,2.266,109,2.111,110,3.244,111,2.266,124,5.511,127,2.928,128,2.266,129,2.266,131,3.234,134,3.435,135,2.656,218,3.289,226,3.234,955,5.263,968,5.188,969,4.386,978,4.386,979,4.386,980,5.002,981,5.002,982,4.386,983,5.002]],["title/injectables/RoomsService.html",[152,0.995,968,2.711]],["body/injectables/RoomsService.html",[0,0.159,3,0.067,4,0.059,5,0.059,9,0.347,12,1.52,13,1.65,15,1.477,17,0.909,18,0.011,19,1.531,25,1.073,29,2.767,37,1.795,42,0.341,49,0.971,51,0.067,54,0.004,55,0.006,56,0.004,61,1.064,64,2.64,67,1.77,71,1.805,72,1.754,80,0.497,90,2.381,91,2.744,92,1.96,96,1.61,135,1.578,152,1.064,153,1.172,192,2.381,195,2.223,201,1.513,203,1.829,204,2.489,218,2.282,226,1.922,238,1.228,239,2.223,240,1.769,241,1.658,242,1.769,247,1.769,250,1.658,253,1.769,263,0.971,265,1.099,287,3.582,288,1.729,289,1.172,290,1.65,291,1.65,320,4.837,326,2.185,394,3.568,415,4.173,576,4.554,577,2.365,578,3.97,626,4.13,957,4.735,958,3.932,963,2.606,966,4.837,968,2.899,982,2.606,984,2.606,985,2.972,986,5.4,987,2.972,988,4.484,989,2.972,990,2.972,991,2.972,992,2.972,993,2.972,994,2.972,995,2.972,996,2.972,997,2.972,998,2.972,999,2.972]],["title/classes/Rule.html",[0,0.225,581,3.082]],["body/classes/Rule.html",[0,0.303,2,0.819,3,0.093,4,0.081,5,0.081,7,1.506,8,2.802,9,0.479,10,1.692,11,4.451,12,1.452,13,3.597,14,2.308,15,1.232,16,2.308,17,1.06,18,0.011,19,1.658,20,1.96,21,2.178,22,3.888,23,3.005,24,2.818,25,1.155,27,2.652,29,2.989,30,2.511,31,1.793,33,1.965,34,1.673,35,2.832,36,1.793,37,0.946,38,1.673,39,1.793,40,1.673,41,1.793,42,0.321,43,3.441,44,1.673,45,1.673,46,2.832,47,2.308,48,3.142,49,1.34,50,3.265,51,0.093,52,1.859,54,0.005,55,0.007,56,0.005,581,4.161,1000,3.597,1001,4.102,1002,4.102,1003,4.102,1004,4.102]],["title/interfaces/TaxStrategy.html",[346,3.082,513,2.226]],["body/interfaces/TaxStrategy.html",[3,0.07,4,0.061,5,0.061,9,0.361,10,1.38,17,0.414,18,0.011,29,3.357,37,1.275,42,0.212,51,0.07,54,0.004,55,0.006,56,0.004,203,1.261,316,2.272,332,6.586,333,2.272,340,5.259,344,1.716,345,2.272,346,3.395,347,2.272,348,2.272,349,2.272,350,2.272,351,2.272,352,2.272,353,2.272,354,2.272,355,2.272,356,2.272,357,2.272,358,2.272,359,2.272,360,2.272,361,2.272,366,4.942,486,6.473,513,1.641,514,2.123,517,3.675,519,2.46,866,6.374,1005,2.46,1006,7.132,1007,2.46]],["title/classes/Todo.html",[0,0.225,659,2.566]],["body/classes/Todo.html",[0,0.23,2,0.857,3,0.097,4,0.085,5,0.085,9,0.502,10,1.745,14,2.706,15,1.445,16,2.706,17,1.053,18,0.011,19,1.69,20,1.987,21,2.279,23,2.279,25,1.17,33,2.473,34,2.706,37,1.346,38,2.706,40,2.706,42,0.197,46,3.112,47,1.75,49,1.402,51,0.097,52,2.646,54,0.005,55,0.007,56,0.005,72,1.51,421,5.818,422,5.818,423,5.818,424,4.144,431,5.12,435,3.156,520,3.775,659,3.573,812,3.416,1008,3.764,1009,4.292,1010,4.292,1011,4.646,1012,4.292,1013,4.292,1014,3.764,1015,4.292,1016,4.292,1017,4.292]],["title/controllers/TodoController.html",[57,1.329,1018,3.082]],["body/controllers/TodoController.html",[0,0.182,3,0.077,4,0.067,5,0.067,9,0.396,12,1.438,17,0.859,18,0.011,20,1.764,25,1.039,37,1.772,42,0.314,51,0.077,54,0.004,55,0.006,56,0.004,57,1.076,59,1.076,61,1.174,64,4.01,67,1.665,71,1.707,72,1.659,77,2.854,80,0.567,92,1.483,96,1.618,192,4,236,1.727,248,2.626,251,2.518,257,2.518,259,1.727,260,1.727,263,1.108,265,1.254,267,1.596,418,4.604,659,3.027,976,2.975,1018,3.636,1019,2.975,1020,4.337,1021,4.337,1022,5.119,1023,4.337,1024,5.626,1025,2.975,1026,3.392,1027,3.392,1028,3.392,1029,7.351,1030,3.392,1031,5.049,1032,4.946,1033,3.392,1034,3.392,1035,3.392,1036,3.392,1037,3.392,1038,3.936,1039,2.7,1040,3.774,1041,2.975,1042,3.392,1043,3.392,1044,3.392,1045,3.392,1046,3.392,1047,3.392,1048,3.392,1049,3.392,1050,3.392]],["title/modules/TodoModule.html",[103,1.253,125,2.88]],["body/modules/TodoModule.html",[0,0.274,3,0.116,4,0.101,5,0.101,18,0.011,42,0.363,51,0.116,54,0.007,55,0.008,56,0.007,59,2.078,80,0.854,103,2.162,105,2.157,106,2.157,107,2.316,108,2.316,109,2.157,110,3.278,111,2.316,125,5.543,127,2.969,128,2.316,129,2.316,131,3.305,134,3.511,135,2.714,659,3.129,1018,5.318,1039,4.068,1040,5.218,1041,4.483,1051,4.483,1052,4.483,1053,5.112,1054,5.112,1055,5.112]],["title/injectables/TodoService.html",[152,0.995,1040,2.711]],["body/injectables/TodoService.html",[0,0.178,3,0.075,4,0.066,5,0.066,9,0.387,12,1.514,15,1.537,17,0.905,18,0.011,25,1.075,37,1.761,42,0.325,49,1.082,51,0.075,54,0.004,55,0.006,56,0.004,61,1.153,64,3.994,67,1.649,71,1.797,72,1.747,80,0.553,90,2.58,91,2.027,96,1.603,135,1.758,152,1.153,153,1.306,192,3.973,203,1.982,204,3.919,263,1.082,265,1.224,320,4.356,326,2.435,418,4.367,659,2.974,1020,4.262,1021,4.262,1022,4.262,1023,4.262,1024,5.561,1025,4.262,1031,5.14,1038,3.867,1039,2.635,1040,3.142,1056,2.904,1057,3.312,1058,3.312,1059,4.86,1060,3.312,1061,4.86,1062,3.312,1063,4.86,1064,3.312,1065,4.86,1066,3.312,1067,3.312,1068,3.312,1069,3.312,1070,3.312,1071,4.86,1072,3.312,1073,3.312,1074,3.312,1075,3.312,1076,3.312]],["title/classes/UpdateConversationDto.html",[0,0.225,254,2.88]],["body/classes/UpdateConversationDto.html",[0,0.325,2,1.212,3,0.137,4,0.12,5,0.12,7,1.615,18,0.011,42,0.335,51,0.137,54,0.008,55,0.009,56,0.008,238,1.663,244,3.925,254,5.008,264,4.831,371,4.831,1077,5.323,1078,3.223,1079,3.09,1080,3.09,1081,6.071]],["title/classes/UpdateDiscountDto.html",[0,0.225,531,2.88]],["body/classes/UpdateDiscountDto.html",[0,0.325,2,1.212,3,0.137,4,0.12,5,0.12,7,1.615,18,0.011,42,0.335,51,0.137,54,0.008,55,0.009,56,0.008,238,1.663,375,3.925,377,4.831,531,5.008,535,4.831,1078,3.223,1079,3.09,1080,3.09,1082,5.323,1083,6.071]],["title/classes/UpdateListDto.html",[0,0.225,735,2.88]],["body/classes/UpdateListDto.html",[0,0.325,2,1.212,3,0.137,4,0.12,5,0.12,7,1.615,18,0.011,42,0.335,51,0.137,54,0.008,55,0.009,56,0.008,238,1.663,378,3.925,380,4.831,735,5.008,739,4.831,1078,3.223,1079,3.09,1080,3.09,1084,5.323,1085,6.071]],["title/classes/UpdatePaymentDto.html",[0,0.225,788,2.88]],["body/classes/UpdatePaymentDto.html",[0,0.325,2,1.212,3,0.137,4,0.12,5,0.12,7,1.615,18,0.011,42,0.335,51,0.137,54,0.008,55,0.009,56,0.008,238,1.663,381,3.925,383,4.831,788,5.008,792,4.831,1078,3.223,1079,3.09,1080,3.09,1086,5.323,1087,6.071]],["title/classes/UpdatePhotoDto.html",[0,0.225,825,2.88]],["body/classes/UpdatePhotoDto.html",[0,0.325,2,1.212,3,0.137,4,0.12,5,0.12,7,1.615,18,0.011,42,0.335,51,0.137,54,0.008,55,0.009,56,0.008,238,1.663,384,3.925,386,4.831,825,5.008,829,4.831,1078,3.223,1079,3.09,1080,3.09,1088,5.323,1089,6.071]],["title/classes/UpdateReservationDto.html",[0,0.225,892,2.88]],["body/classes/UpdateReservationDto.html",[0,0.325,2,1.212,3,0.137,4,0.12,5,0.12,7,1.615,18,0.011,42,0.335,51,0.137,54,0.008,55,0.009,56,0.008,238,1.663,387,3.533,389,4.831,671,4.17,892,5.008,1078,3.223,1079,3.09,1080,3.09,1090,5.323,1091,6.071]],["title/classes/UpdateReviewDto.html",[0,0.225,934,2.88]],["body/classes/UpdateReviewDto.html",[0,0.325,2,1.212,3,0.137,4,0.12,5,0.12,7,1.615,18,0.011,42,0.335,51,0.137,54,0.008,55,0.009,56,0.008,238,1.663,412,3.925,414,4.831,934,5.008,938,4.831,1078,3.223,1079,3.09,1080,3.09,1092,5.323,1093,6.071]],["title/classes/UpdateRoomDto.html",[0,0.225,966,2.88]],["body/classes/UpdateRoomDto.html",[0,0.325,2,1.212,3,0.137,4,0.12,5,0.12,7,1.615,18,0.011,42,0.335,51,0.137,54,0.008,55,0.009,56,0.008,238,1.663,415,3.925,417,4.463,578,4.463,966,5.008,1078,3.223,1079,3.09,1080,3.09,1094,5.323,1095,6.071]],["title/classes/UpdateTodoDTO.html",[0,0.225,1031,2.88]],["body/classes/UpdateTodoDTO.html",[0,0.383,2,1.171,3,0.133,4,0.116,5,0.116,7,1.561,18,0.011,42,0.354,43,3.115,44,2.392,51,0.133,54,0.007,55,0.009,56,0.007,238,1.607,418,3.793,420,4.668,433,4.668,435,4.313,1031,4.905,1038,4.668,1078,3.115,1079,2.986,1080,2.986,1096,5.144,1097,5.866]],["title/classes/UpdateUserDto.html",[0,0.225,1098,2.88]],["body/classes/UpdateUserDto.html",[0,0.325,2,1.212,3,0.137,4,0.12,5,0.12,7,1.615,18,0.011,42,0.335,51,0.137,54,0.008,55,0.009,56,0.008,238,1.663,437,3.925,439,4.831,1078,3.223,1079,3.09,1080,3.09,1098,5.008,1099,5.323,1100,4.831,1101,6.071]],["title/classes/User.html",[0,0.225,195,1.55]],["body/classes/User.html",[0,0.168,2,0.377,3,0.043,4,0.037,5,0.037,7,0.833,8,2.06,9,0.221,10,0.936,12,0.424,13,2.226,14,1.277,15,0.682,16,1.277,17,1.075,18,0.011,19,1.725,20,1.981,21,1.004,23,2.129,24,2.151,25,1.176,27,2.025,29,2.108,30,1.917,31,2.579,33,1.619,34,0.771,35,1.752,36,0.826,37,0.436,38,0.771,39,0.826,40,0.771,41,0.826,42,0.318,43,2.958,44,0.771,45,0.771,46,2.884,47,1.277,48,2.226,49,0.618,51,0.043,52,1.817,54,0.002,55,0.004,56,0.002,61,0.951,64,2.724,67,0.765,71,0.503,72,0.489,80,0.316,96,0.449,192,2.476,195,1.158,197,2.754,199,2.754,203,0.771,204,1.738,214,3.342,216,3.516,218,2.631,219,3.55,220,3.8,226,1.222,228,3.827,237,3.191,289,1.235,344,1.049,424,2.714,433,3.191,435,1.39,440,3.516,441,3.516,442,2.746,488,2.746,501,2.303,520,2.593,566,2.948,570,3.342,571,1.658,574,3.164,575,1.658,615,1.504,616,1.298,617,1.39,621,2.948,630,2.151,776,3.55,782,3.191,812,1.504,886,3.191,1007,1.504,1011,3.711,1014,1.658,1102,1.658,1103,4.01,1104,4.01,1105,4.01,1106,4.01,1107,4.01,1108,4.01,1109,3.132,1110,4.664,1111,1.89,1112,3.132,1113,1.89,1114,1.89,1115,1.89,1116,1.89,1117,1.89,1118,1.89,1119,3.132,1120,3.132,1121,1.89,1122,1.89,1123,1.89,1124,1.89,1125,1.89,1126,1.89,1127,1.89,1128,1.89,1129,1.89,1130,1.89,1131,1.89,1132,1.89,1133,1.89,1134,1.89,1135,3.132,1136,1.89,1137,1.89,1138,1.89,1139,1.89,1140,1.89,1141,2.746,1142,3.132,1143,2.746,1144,1.89,1145,1.89,1146,1.89,1147,1.658,1148,1.89,1149,1.89,1150,1.89,1151,1.89,1152,1.89,1153,1.89,1154,1.89,1155,1.89,1156,1.89,1157,4.01,1158,3.132,1159,1.89,1160,3.132,1161,3.132,1162,3.132,1163,3.132,1164,1.89]],["title/controllers/UsersController.html",[57,1.329,1165,3.082]],["body/controllers/UsersController.html",[0,0.185,3,0.078,4,0.068,5,0.068,9,0.403,12,1.449,15,1.56,17,0.866,18,0.011,19,1.831,20,1.776,25,1.046,42,0.316,51,0.078,52,1.564,54,0.004,55,0.006,56,0.004,57,1.094,59,1.094,61,1.188,64,3.502,67,1.677,71,1.721,72,1.672,77,2.882,80,0.577,92,1.508,96,1.7,186,3.608,192,3.434,195,2.179,203,1.407,204,2.78,236,1.757,238,1.372,239,2.391,240,1.975,241,1.851,242,1.975,247,1.361,248,2.659,250,1.276,251,2.549,253,1.361,255,2.78,257,2.549,258,1.916,259,1.757,260,1.757,263,1.127,265,1.276,267,1.623,268,1.832,271,1.916,273,1.916,275,1.832,437,4.631,520,2.231,1098,5.199,1100,3.986,1165,3.682,1166,3.026,1167,3.451,1168,3.026,1169,3.451,1170,3.451,1171,3.451,1172,3.451,1173,3.451,1174,3.026,1175,2.746,1176,3.451,1177,3.451,1178,3.451,1179,3.451,1180,3.451,1181,3.451]],["title/modules/UsersModule.html",[103,1.253,126,2.711]],["body/modules/UsersModule.html",[0,0.263,3,0.111,4,0.097,5,0.097,18,0.011,42,0.358,51,0.111,54,0.006,55,0.008,56,0.006,59,2.025,80,0.821,103,2.121,105,2.073,106,2.073,107,2.226,108,2.226,109,2.073,110,3.216,111,3.216,126,5.257,127,2.895,128,2.226,129,2.226,131,3.177,134,3.375,135,2.609,186,5.213,195,1.816,1165,5.218,1174,4.309,1175,3.91,1182,4.309,1183,4.309,1184,4.309,1185,4.914,1186,4.914,1187,4.914]],["title/injectables/UsersService.html",[152,0.995,186,2.566]],["body/injectables/UsersService.html",[0,0.161,3,0.068,4,0.06,5,0.06,9,0.352,12,1.528,15,1.54,17,0.913,18,0.011,19,1.54,25,1.078,37,1.717,42,0.314,49,0.984,51,0.068,54,0.004,55,0.006,56,0.004,61,1.074,64,3.816,67,1.665,71,1.814,72,1.763,80,0.503,90,2.404,91,1.843,92,1.316,96,1.618,135,1.599,152,1.074,153,1.187,186,2.771,192,3.864,195,2.237,197,2.068,199,4.457,200,3.329,203,2.219,204,3.602,238,1.24,239,2.237,240,1.786,241,1.674,242,1.786,247,1.786,250,1.674,253,1.786,263,0.984,265,1.113,287,2.513,289,1.187,290,1.671,291,1.671,320,4.157,326,2.213,437,4.408,630,2.068,1098,4.858,1100,3.603,1147,2.64,1168,3.97,1175,2.396,1188,2.64,1189,4.528,1190,3.011,1191,3.011,1192,4.528,1193,3.011,1194,3.011,1195,3.011,1196,4.528,1197,3.011,1198,3.011,1199,3.011,1200,3.011,1201,4.528,1202,5.442,1203,3.011,1204,3.011,1205,3.011]],["title/classes/Verification.html",[0,0.225,1206,3.336]],["body/classes/Verification.html",[0,0.221,2,0.821,3,0.093,4,0.082,5,0.082,7,1.509,8,2.804,9,0.481,10,1.695,14,2.313,15,1.235,16,2.313,17,0.983,18,0.011,19,1.346,20,1.962,25,1.156,33,1.969,34,1.678,35,2.837,36,1.798,37,0.949,38,1.678,39,1.798,40,1.678,41,1.798,42,0.322,45,1.678,46,2.837,49,1.344,51,0.093,54,0.005,55,0.007,56,0.005,61,1.346,67,1.005,195,2.874,229,3.608,231,3.608,1141,5.692,1206,4.514,1207,3.608,1208,6.491,1209,6.996,1210,4.115,1211,4.115,1212,5.672,1213,4.115,1214,4.115,1215,4.115,1216,5.672,1217,5.672,1218,4.115,1219,4.115,1220,5.672,1221,3.608,1222,4.115,1223,4.115]],["title/coverage.html",[1224,4.572]],["body/coverage.html",[0,0.447,1,1.392,5,0.038,6,1.66,8,0.7,17,0.254,18,0.011,29,0.772,54,0.002,55,0.004,56,0.002,57,2.195,58,1.392,60,1.66,81,1.224,83,1.101,85,1.392,88,1.392,109,0.799,152,1.768,154,1.66,162,1.3,163,1.3,171,1.392,182,1.66,186,1.159,195,0.7,214,1.224,215,1.66,218,0.963,219,1.3,234,1.392,235,1.66,244,1.224,254,1.3,261,1.224,281,1.66,289,0.747,292,1.66,296,1.392,297,1.66,300,1.3,304,1.224,315,1.224,318,1.66,331,1.506,345,1.392,346,1.392,366,5.34,370,1.66,371,2.495,372,1.66,373,1.66,375,1.224,376,1.66,377,2.495,378,1.224,379,1.66,380,2.495,381,1.224,382,1.66,383,2.495,384,1.224,385,1.66,386,2.495,387,1.101,388,1.66,389,2.495,405,1.101,407,1.159,412,1.224,413,1.66,414,2.495,415,1.224,416,1.66,417,2.951,418,1.224,419,1.66,420,2.495,437,1.224,438,1.66,439,2.495,447,2.495,484,1.3,485,1.506,504,1.392,505,1.392,513,2.478,515,2.495,517,1.506,523,1.392,524,1.66,531,1.3,533,1.224,546,1.66,552,1.392,553,1.66,558,1.506,559,2.495,570,1.224,572,1.3,574,1.159,576,1.224,581,1.392,659,1.159,668,1.392,669,2.305,700,1.66,701,2.495,704,1.66,721,1.66,728,1.392,729,1.66,735,1.3,737,1.224,750,1.66,756,1.66,758,1.66,767,1.66,776,1.3,777,1.66,780,1.392,781,1.66,788,1.3,790,1.224,803,1.66,809,1.66,818,1.392,819,1.66,825,1.3,827,1.224,840,1.66,846,1.392,847,1.506,884,1.392,885,1.66,892,1.3,894,1.224,906,1.66,912,1.66,918,1.66,927,1.392,928,1.66,934,1.3,936,1.224,949,1.66,955,1.392,956,1.66,966,1.3,968,1.224,984,1.66,1000,1.66,1005,2.495,1008,1.66,1018,1.392,1019,1.66,1031,1.3,1040,1.224,1056,1.66,1077,1.66,1082,1.66,1084,1.66,1086,1.66,1088,1.66,1090,1.66,1092,1.66,1094,1.66,1096,1.66,1098,1.3,1099,1.66,1102,1.66,1165,1.392,1166,1.66,1188,1.66,1206,1.506,1207,1.66,1224,1.506,1225,1.893,1226,1.893,1227,1.893,1228,4.667,1229,4.667,1230,5.173,1231,1.66,1232,6.176,1233,8.031,1234,3.135,1235,4.093,1236,1.66,1237,1.66,1238,1.66,1239,1.66,1240,7.451,1241,7.367,1242,1.893,1243,1.66,1244,1.893,1245,1.893,1246,1.893,1247,3.135,1248,1.893,1249,1.893,1250,1.893]],["title/dependencies.html",[106,2.131,1251,3.49]],["body/dependencies.html",[0,0.342,18,0.011,44,2.004,49,1.605,54,0.006,55,0.008,56,0.006,80,0.821,106,2.073,133,4.309,135,2.609,166,3.91,168,3.177,713,5.648,714,4.309,763,4.309,1079,2.501,1080,2.501,1143,4.309,1221,4.309,1252,4.914,1253,4.914,1254,4.914,1255,6.388,1256,4.914,1257,4.914,1258,6.388,1259,4.914,1260,6.388,1261,4.914,1262,4.914,1263,4.914,1264,4.914,1265,4.914,1266,4.914,1267,4.914,1268,4.914,1269,4.914,1270,4.914,1271,4.914,1272,4.914,1273,4.914,1274,4.914,1275,4.914,1276,4.914,1277,4.914,1278,4.914,1279,4.914,1280,4.914,1281,4.914,1282,4.914,1283,4.914,1284,4.914,1285,4.914]],["title/miscellaneous/enumerations.html",[1286,2.256,1287,4.427]],["body/miscellaneous/enumerations.html",[9,0.433,18,0.011,54,0.005,55,0.007,56,0.005,331,2.951,333,3.878,339,2.928,347,3.878,348,3.878,349,3.878,350,3.878,351,3.878,352,3.878,353,3.878,354,3.878,355,3.878,356,3.878,357,3.878,358,3.878,359,3.878,360,3.878,361,3.878,390,3.41,485,2.951,496,4.197,506,3.878,507,3.878,508,3.878,559,2.951,583,4.625,584,4.625,585,4.625,586,4.625,587,4.625,588,4.625,589,4.625,669,2.727,672,4.197,673,4.197,674,4.197,675,4.197,676,4.197,677,4.197,678,4.197,679,4.197,847,2.951,850,4.625,858,4.625,859,4.625,860,4.625,861,4.625,1286,2.398,1287,3.252,1288,3.709,1289,3.709,1290,3.709,1291,3.709,1292,3.709,1293,7.699]],["title/miscellaneous/functions.html",[1286,2.256,1294,4.427]],["body/miscellaneous/functions.html",[9,0.766,18,0.01,54,0.008,55,0.01,56,0.008,109,3.406,1243,5.75,1286,4.239,1294,5.75,1295,6.557]],["title/index.html",[9,0.408,1296,3.49,1297,3.49]],["body/index.html",[4,0.092,11,3.194,18,0.011,54,0.006,55,0.008,56,0.006,320,3.194,616,3.194,1224,3.701,1298,4.651,1299,4.651,1300,6.162,1301,4.651,1302,4.651,1303,4.651,1304,4.651,1305,4.651,1306,4.651,1307,4.651,1308,4.651,1309,6.91,1310,4.651,1311,4.651,1312,4.651,1313,8.023,1314,4.651,1315,4.651,1316,4.651,1317,7.865,1318,4.651,1319,4.651,1320,6.162,1321,4.651,1322,4.651,1323,4.651,1324,4.651,1325,6.162,1326,6.162,1327,4.651,1328,4.651,1329,4.651,1330,6.162,1331,6.162,1332,4.651,1333,4.651,1334,4.651,1335,4.651,1336,4.651,1337,4.078,1338,4.651,1339,4.651,1340,4.651,1341,4.651,1342,4.651,1343,4.651,1344,4.651,1345,4.651,1346,4.651,1347,4.651,1348,4.651,1349,4.651,1350,4.651,1351,4.651,1352,4.651,1353,4.651,1354,4.651,1355,4.651]],["title/modules.html",[105,2.425]],["body/modules.html",[18,0.008,54,0.007,55,0.008,56,0.007,104,3.786,105,2.173,115,3.537,116,3.537,117,3.537,118,3.537,119,3.537,120,3.537,121,3.537,122,3.537,123,3.537,124,3.537,125,3.537,126,3.33,1337,7.554,1356,8.615,1357,8.615,1358,8.615]],["title/overview.html",[1359,5.038]],["body/overview.html",[2,0.638,18,0.011,54,0.004,55,0.006,56,0.004,59,1.014,81,3.647,83,4.198,103,0.956,104,6.293,105,1.349,106,1.349,107,1.449,108,1.449,109,1.349,110,1.449,111,1.449,112,2.804,113,2.804,114,2.804,115,5.429,116,4.572,117,4.572,118,4.572,119,4.572,120,4.572,121,4.572,122,4.572,123,4.572,124,4.572,125,4.572,126,4.665,127,2.146,128,1.449,129,1.449,153,1.261,158,2.804,159,2.804,160,2.804,162,3.874,163,3.874,186,4.416,261,3.647,277,2.804,278,2.804,304,3.647,311,2.804,312,2.804,479,2.545,514,2.196,533,3.647,542,2.804,543,2.804,737,3.647,746,2.804,747,2.804,790,3.647,799,2.804,800,2.804,827,3.647,836,2.804,837,2.804,894,3.647,902,2.804,903,2.804,936,3.647,945,2.804,946,2.804,968,3.647,978,2.804,979,2.804,1040,3.647,1051,2.804,1052,2.804,1182,2.804,1183,2.804,1184,2.804,1359,2.804,1360,3.198,1361,3.198,1362,3.198,1363,3.198]],["title/miscellaneous/variables.html",[1286,2.256,1364,4.427]],["body/miscellaneous/variables.html",[9,0.265,17,0.696,18,0.011,29,3.097,33,2.299,52,2.058,54,0.003,55,0.005,56,0.003,96,1.233,171,2.669,176,1.987,203,2.972,332,6.043,340,5.089,345,2.669,347,1.666,348,1.666,349,1.666,350,1.666,351,1.666,352,1.666,353,1.666,354,1.666,355,1.666,356,1.666,357,1.666,358,1.666,359,1.666,360,1.666,361,1.666,366,4.648,407,2.222,447,1.803,457,1.987,458,4.555,459,4.555,460,3.183,461,3.183,462,4.555,463,3.183,464,3.183,465,3.183,466,3.183,467,3.183,468,1.987,469,2.889,470,1.987,471,3.183,472,3.183,473,3.183,474,3.183,475,3.183,476,1.987,477,3.183,478,1.987,479,2.889,480,1.987,486,6.043,504,2.669,506,1.666,507,1.666,508,1.666,515,1.803,516,3.983,519,2.889,520,2.347,521,1.987,522,1.987,866,5.971,1005,1.803,1006,6.659,1007,1.803,1011,5.268,1231,1.987,1235,1.987,1236,3.983,1237,3.983,1238,3.983,1239,3.983,1286,1.465,1293,5.805,1364,1.987,1365,5.684,1366,2.266,1367,2.266,1368,2.266,1369,3.63,1370,2.266,1371,2.266]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"classes/Amenity.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Conversation.html":{},"controllers/ConversationsController.html":{},"modules/ConversationsModule.html":{},"injectables/ConversationsService.html":{},"classes/CoreEntity.html":{},"controllers/CountriesController.html":{},"modules/CountriesModule.html":{},"injectables/CountriesService.html":{},"classes/Country.html":{},"classes/CreateConversationDto.html":{},"classes/CreateCountryDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateListDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreatePhotoDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTodoDTO.html":{},"classes/CreateUserDto.html":{},"classes/DateRange.html":{},"classes/Discount.html":{},"interfaces/DiscountStrategy.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"classes/Facility.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/List.html":{},"controllers/ListsController.html":{},"modules/ListsModule.html":{},"injectables/ListsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"classes/Payment.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"classes/Photo.html":{},"controllers/PhotosController.html":{},"modules/PhotosModule.html":{},"injectables/PhotosService.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"controllers/ReservationsController.html":{},"modules/ReservationsModule.html":{},"injectables/ReservationsService.html":{},"classes/ReserveRoomDTO.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"classes/Rule.html":{},"interfaces/TaxStrategy.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateConversationDto.html":{},"classes/UpdateDiscountDto.html":{},"classes/UpdateListDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePhotoDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Verification.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":366,"title":{},"body":{"classes/Country.html":{},"classes/Discount.html":{},"interfaces/IPriceDetail.html":{},"classes/Rating.html":{},"interfaces/TaxStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.01",{"_index":368,"title":{},"body":{"classes/Country.html":{},"interfaces/IPriceDetail.html":{}}}],["0.1.1",{"_index":1257,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1276,"title":{},"body":{"dependencies.html":{}}}],["0.13.0",{"_index":1266,"title":{},"body":{"dependencies.html":{}}}],["0.2.30",{"_index":1284,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":1265,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1271,"title":{},"body":{"dependencies.html":{}}}],["0.6.1",{"_index":1253,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1233,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1244,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1245,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1229,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":1248,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1234,"title":{},"body":{"coverage.html":{}}}],["0/36",{"_index":1246,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1228,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1230,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1240,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1241,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1247,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1242,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":688,"title":{},"body":{"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{}}}],["1.0.0",{"_index":1273,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1007,"title":{},"body":{"interfaces/TaxStrategy.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":428,"title":{},"body":{"classes/CreateTodoDTO.html":{}}}],["1000",{"_index":467,"title":{},"body":{"classes/DateRange.html":{},"miscellaneous/variables.html":{}}}],["12",{"_index":479,"title":{},"body":{"classes/DateRange.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["13",{"_index":1360,"title":{},"body":{"overview.html":{}}}],["15",{"_index":664,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["17",{"_index":1361,"title":{},"body":{"overview.html":{}}}],["2.18.1",{"_index":1270,"title":{},"body":{"dependencies.html":{}}}],["24",{"_index":465,"title":{},"body":{"classes/DateRange.html":{},"miscellaneous/variables.html":{}}}],["28",{"_index":521,"title":{},"body":{"interfaces/DiscountStrategy.html":{},"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":1278,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{}}}],["3600",{"_index":466,"title":{},"body":{"classes/DateRange.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":1363,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":1272,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":1283,"title":{},"body":{"dependencies.html":{}}}],["4.7.10",{"_index":1262,"title":{},"body":{"dependencies.html":{}}}],["41",{"_index":1362,"title":{},"body":{"overview.html":{}}}],["5",{"_index":866,"title":{},"body":{"classes/Rating.html":{},"interfaces/TaxStrategy.html":{},"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":1263,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":431,"title":{},"body":{"classes/CreateTodoDTO.html":{},"classes/Todo.html":{}}}],["500",{"_index":1112,"title":{},"body":{"classes/User.html":{}}}],["6.5.4",{"_index":1280,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":469,"title":{},"body":{"classes/DateRange.html":{},"interfaces/DiscountStrategy.html":{},"miscellaneous/variables.html":{}}}],["7.0.0",{"_index":1255,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":1258,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1256,"title":{},"body":{"dependencies.html":{}}}],["7.6.5",{"_index":1252,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":1268,"title":{},"body":{"dependencies.html":{}}}],["8.3.2",{"_index":1285,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":522,"title":{},"body":{"interfaces/DiscountStrategy.html":{},"miscellaneous/variables.html":{}}}],["accepted",{"_index":674,"title":{},"body":{"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{},"miscellaneous/enumerations.html":{}}}],["access_token",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["accommodationfee",{"_index":560,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["accuracy",{"_index":859,"title":{},"body":{"classes/Rating.html":{},"miscellaneous/enumerations.html":{}}}],["action",{"_index":287,"title":{},"body":{"injectables/ConversationsService.html":{},"injectables/DiscountsService.html":{},"injectables/ListsService.html":{},"injectables/PaymentsService.html":{},"injectables/PhotosService.html":{},"injectables/ReservationsService.html":{},"injectables/ReviewsService.html":{},"injectables/RoomsService.html":{},"injectables/UsersService.html":{}}}],["address",{"_index":603,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["addresscity",{"_index":605,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["addressetc",{"_index":607,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["addressstate",{"_index":604,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["addressstreet",{"_index":606,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["addresszipcode",{"_index":608,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["adds",{"_index":288,"title":{},"body":{"injectables/ConversationsService.html":{},"injectables/DiscountsService.html":{},"injectables/ListsService.html":{},"injectables/PaymentsService.html":{},"injectables/PhotosService.html":{},"injectables/ReservationsService.html":{},"injectables/ReviewsService.html":{},"injectables/RoomsService.html":{}}}],["alreadyexist",{"_index":1201,"title":{},"body":{"injectables/UsersService.html":{}}}],["amazing",{"_index":1338,"title":{},"body":{"index.html":{}}}],["amenities",{"_index":614,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["amenity",{"_index":1,"title":{"classes/Amenity.html":{}},"body":{"classes/Amenity.html":{},"interfaces/IPriceDetail.html":{},"coverage.html":{}}}],["amenity.entity",{"_index":579,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["amenity.rooms",{"_index":613,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["amount",{"_index":1006,"title":{},"body":{"interfaces/TaxStrategy.html":{},"miscellaneous/variables.html":{}}}],["angular",{"_index":1308,"title":{},"body":{"index.html":{}}}],["apartment",{"_index":584,"title":{},"body":{"interfaces/IPriceDetail.html":{},"miscellaneous/enumerations.html":{}}}],["apassword",{"_index":1137,"title":{},"body":{"classes/User.html":{}}}],["app",{"_index":1315,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":82,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":58,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":1305,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":104,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":81,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":64,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/CountriesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["auth.guard",{"_index":87,"title":{},"body":{"controllers/AppController.html":{}}}],["auth.guard.ts",{"_index":701,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":170,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":84,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/guards/jwt",{"_index":86,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/guards/local",{"_index":89,"title":{},"body":{"controllers/AppController.html":{}}}],["authguard",{"_index":702,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":703,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":757,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":115,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1348,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":83,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["avatar",{"_index":1103,"title":{},"body":{"classes/User.html":{}}}],["await",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CountriesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/RoomsService.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":1339,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IPriceDetail.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["bathcnt",{"_index":597,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["bcrypt",{"_index":1143,"title":{},"body":{"classes/User.html":{},"dependencies.html":{}}}],["bcrypt.compare(apassword",{"_index":1164,"title":{},"body":{"classes/User.html":{}}}],["bcrypt.hash(this.password",{"_index":1159,"title":{},"body":{"classes/User.html":{}}}],["bedandbreakfast",{"_index":588,"title":{},"body":{"interfaces/IPriceDetail.html":{},"miscellaneous/enumerations.html":{}}}],["bedcnt",{"_index":595,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["beforeinsert",{"_index":1141,"title":{},"body":{"classes/User.html":{},"classes/Verification.html":{}}}],["beforeinsert()@beforeupdate",{"_index":1138,"title":{},"body":{"classes/User.html":{}}}],["beforeupdate",{"_index":1142,"title":{},"body":{"classes/User.html":{}}}],["bermuda",{"_index":349,"title":{},"body":{"classes/Country.html":{},"interfaces/TaxStrategy.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["between",{"_index":865,"title":{},"body":{"classes/Rating.html":{}}}],["billing",{"_index":661,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["bio",{"_index":1104,"title":{},"body":{"classes/User.html":{}}}],["body",{"_index":257,"title":{},"body":{"controllers/ConversationsController.html":{},"controllers/CountriesController.html":{},"controllers/DiscountsController.html":{},"controllers/ListsController.html":{},"controllers/PaymentsController.html":{},"controllers/PhotosController.html":{},"controllers/ReservationsController.html":{},"controllers/ReviewsController.html":{},"controllers/RoomsController.html":{},"controllers/TodoController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":424,"title":{},"body":{"classes/CreateTodoDTO.html":{},"classes/DateRange.html":{},"interfaces/DiscountStrategy.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{},"classes/Todo.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConversationsModule.html":{},"modules/CountriesModule.html":{},"modules/DiscountsModule.html":{},"modules/ListsModule.html":{},"modules/PaymentsModule.html":{},"modules/PhotosModule.html":{},"modules/ReservationsModule.html":{},"modules/ReviewsModule.html":{},"modules/RoomsModule.html":{},"modules/TodoModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["boutiquehotel",{"_index":589,"title":{},"body":{"interfaces/IPriceDetail.html":{},"miscellaneous/enumerations.html":{}}}],["brazil",{"_index":350,"title":{},"body":{"classes/Country.html":{},"interfaces/TaxStrategy.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["britishvirginislands",{"_index":351,"title":{},"body":{"classes/Country.html":{},"interfaces/TaxStrategy.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":1358,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1356,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1301,"title":{},"body":{"index.html":{}}}],["calculatediscountfee",{"_index":487,"title":{},"body":{"classes/Discount.html":{}}}],["calculatediscountfee(price",{"_index":499,"title":{},"body":{"classes/Discount.html":{},"interfaces/IPriceDetail.html":{}}}],["calculatepriceindetail(staydays",{"_index":646,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["calculateservicefee(price",{"_index":658,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["calculatetax",{"_index":332,"title":{},"body":{"classes/Country.html":{},"interfaces/TaxStrategy.html":{},"miscellaneous/variables.html":{}}}],["calculatetax(room",{"_index":338,"title":{},"body":{"classes/Country.html":{}}}],["calculatetaxfee",{"_index":665,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["calculatetotalprice(staydays",{"_index":643,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["canada",{"_index":352,"title":{},"body":{"classes/Country.html":{},"interfaces/TaxStrategy.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["canceled",{"_index":679,"title":{},"body":{"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{},"miscellaneous/enumerations.html":{}}}],["caption",{"_index":810,"title":{},"body":{"classes/Photo.html":{}}}],["cascade",{"_index":1222,"title":{},"body":{"classes/Verification.html":{}}}],["cascade'})@joincolumn",{"_index":1213,"title":{},"body":{"classes/Verification.html":{}}}],["catch",{"_index":1160,"title":{},"body":{"classes/User.html":{}}}],["category",{"_index":848,"title":{},"body":{"classes/Rating.html":{}}}],["check",{"_index":856,"title":{},"body":{"classes/Rating.html":{}}}],["check(`star",{"_index":864,"title":{},"body":{"classes/Rating.html":{}}}],["checkedin",{"_index":677,"title":{},"body":{"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{},"miscellaneous/enumerations.html":{}}}],["checkedout",{"_index":678,"title":{},"body":{"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{},"miscellaneous/enumerations.html":{}}}],["checkin",{"_index":390,"title":{},"body":{"classes/CreateReservationDto.html":{},"interfaces/IReservationConstructor.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"classes/ReserveRoomDTO.html":{},"miscellaneous/enumerations.html":{}}}],["checkout",{"_index":391,"title":{},"body":{"classes/CreateReservationDto.html":{},"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{},"classes/ReserveRoomDTO.html":{}}}],["checkpassword",{"_index":1109,"title":{},"body":{"classes/User.html":{}}}],["checkpassword(apassword",{"_index":1135,"title":{},"body":{"classes/User.html":{}}}],["class",{"_index":0,"title":{"classes/Amenity.html":{},"classes/Conversation.html":{},"classes/CoreEntity.html":{},"classes/Country.html":{},"classes/CreateConversationDto.html":{},"classes/CreateCountryDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateListDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreatePhotoDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTodoDTO.html":{},"classes/CreateUserDto.html":{},"classes/DateRange.html":{},"classes/Discount.html":{},"classes/Facility.html":{},"classes/List.html":{},"classes/Message.html":{},"classes/Payment.html":{},"classes/Photo.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"classes/ReserveRoomDTO.html":{},"classes/Review.html":{},"classes/Rule.html":{},"classes/Todo.html":{},"classes/UpdateConversationDto.html":{},"classes/UpdateDiscountDto.html":{},"classes/UpdateListDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePhotoDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/Verification.html":{}},"body":{"classes/Amenity.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Conversation.html":{},"controllers/ConversationsController.html":{},"modules/ConversationsModule.html":{},"injectables/ConversationsService.html":{},"classes/CoreEntity.html":{},"controllers/CountriesController.html":{},"modules/CountriesModule.html":{},"injectables/CountriesService.html":{},"classes/Country.html":{},"classes/CreateConversationDto.html":{},"classes/CreateCountryDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateListDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreatePhotoDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTodoDTO.html":{},"classes/CreateUserDto.html":{},"classes/DateRange.html":{},"classes/Discount.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"classes/Facility.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/List.html":{},"controllers/ListsController.html":{},"modules/ListsModule.html":{},"injectables/ListsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"classes/Payment.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"classes/Photo.html":{},"controllers/PhotosController.html":{},"modules/PhotosModule.html":{},"injectables/PhotosService.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"controllers/ReservationsController.html":{},"modules/ReservationsModule.html":{},"injectables/ReservationsService.html":{},"classes/ReserveRoomDTO.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"classes/Rule.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateConversationDto.html":{},"classes/UpdateDiscountDto.html":{},"classes/UpdateListDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePhotoDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Verification.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Amenity.html":{},"classes/Conversation.html":{},"classes/CoreEntity.html":{},"classes/Country.html":{},"classes/CreateConversationDto.html":{},"classes/CreateCountryDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateListDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreatePhotoDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTodoDTO.html":{},"classes/CreateUserDto.html":{},"classes/DateRange.html":{},"classes/Discount.html":{},"classes/Facility.html":{},"classes/List.html":{},"classes/Message.html":{},"classes/Payment.html":{},"classes/Photo.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"classes/ReserveRoomDTO.html":{},"classes/Review.html":{},"classes/Rule.html":{},"classes/Todo.html":{},"classes/UpdateConversationDto.html":{},"classes/UpdateDiscountDto.html":{},"classes/UpdateListDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePhotoDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/Verification.html":{},"overview.html":{}}}],["cleaningfee",{"_index":561,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["cleanness",{"_index":858,"title":{},"body":{"classes/Rating.html":{},"miscellaneous/enumerations.html":{}}}],["cluster_appmodule",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_conversationsmodule",{"_index":277,"title":{},"body":{"modules/ConversationsModule.html":{},"overview.html":{}}}],["cluster_conversationsmodule_providers",{"_index":278,"title":{},"body":{"modules/ConversationsModule.html":{},"overview.html":{}}}],["cluster_countriesmodule",{"_index":311,"title":{},"body":{"modules/CountriesModule.html":{},"overview.html":{}}}],["cluster_countriesmodule_providers",{"_index":312,"title":{},"body":{"modules/CountriesModule.html":{},"overview.html":{}}}],["cluster_discountsmodule",{"_index":542,"title":{},"body":{"modules/DiscountsModule.html":{},"overview.html":{}}}],["cluster_discountsmodule_providers",{"_index":543,"title":{},"body":{"modules/DiscountsModule.html":{},"overview.html":{}}}],["cluster_listsmodule",{"_index":746,"title":{},"body":{"modules/ListsModule.html":{},"overview.html":{}}}],["cluster_listsmodule_providers",{"_index":747,"title":{},"body":{"modules/ListsModule.html":{},"overview.html":{}}}],["cluster_paymentsmodule",{"_index":799,"title":{},"body":{"modules/PaymentsModule.html":{},"overview.html":{}}}],["cluster_paymentsmodule_providers",{"_index":800,"title":{},"body":{"modules/PaymentsModule.html":{},"overview.html":{}}}],["cluster_photosmodule",{"_index":836,"title":{},"body":{"modules/PhotosModule.html":{},"overview.html":{}}}],["cluster_photosmodule_providers",{"_index":837,"title":{},"body":{"modules/PhotosModule.html":{},"overview.html":{}}}],["cluster_reservationsmodule",{"_index":902,"title":{},"body":{"modules/ReservationsModule.html":{},"overview.html":{}}}],["cluster_reservationsmodule_providers",{"_index":903,"title":{},"body":{"modules/ReservationsModule.html":{},"overview.html":{}}}],["cluster_reviewsmodule",{"_index":945,"title":{},"body":{"modules/ReviewsModule.html":{},"overview.html":{}}}],["cluster_reviewsmodule_providers",{"_index":946,"title":{},"body":{"modules/ReviewsModule.html":{},"overview.html":{}}}],["cluster_roomsmodule",{"_index":978,"title":{},"body":{"modules/RoomsModule.html":{},"overview.html":{}}}],["cluster_roomsmodule_providers",{"_index":979,"title":{},"body":{"modules/RoomsModule.html":{},"overview.html":{}}}],["cluster_todomodule",{"_index":1051,"title":{},"body":{"modules/TodoModule.html":{},"overview.html":{}}}],["cluster_todomodule_providers",{"_index":1052,"title":{},"body":{"modules/TodoModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1182,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1183,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1184,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":1208,"title":{},"body":{"classes/Verification.html":{}}}],["column",{"_index":46,"title":{},"body":{"classes/Amenity.html":{},"classes/Country.html":{},"classes/Discount.html":{},"classes/Facility.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"classes/List.html":{},"classes/Message.html":{},"classes/Photo.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"classes/Rule.html":{},"classes/Todo.html":{},"classes/User.html":{},"classes/Verification.html":{}}}],["column()@isstring",{"_index":27,"title":{},"body":{"classes/Amenity.html":{},"classes/Facility.html":{},"classes/List.html":{},"classes/Photo.html":{},"classes/Rule.html":{},"classes/User.html":{}}}],["column({default",{"_index":1119,"title":{},"body":{"classes/User.html":{}}}],["column({length",{"_index":1014,"title":{},"body":{"classes/Todo.html":{},"classes/User.html":{}}}],["column({nullable",{"_index":812,"title":{},"body":{"classes/Photo.html":{},"classes/Todo.html":{},"classes/User.html":{}}}],["column({select",{"_index":1126,"title":{},"body":{"classes/User.html":{}}}],["column({type",{"_index":21,"title":{},"body":{"classes/Amenity.html":{},"classes/Country.html":{},"classes/Discount.html":{},"classes/Facility.html":{},"classes/Message.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"classes/Rule.html":{},"classes/Todo.html":{},"classes/User.html":{}}}],["column({unique",{"_index":1115,"title":{},"body":{"classes/User.html":{}}}],["commissionpercent",{"_index":663,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["communication",{"_index":860,"title":{},"body":{"classes/Rating.html":{},"miscellaneous/enumerations.html":{}}}],["configmodule",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(e",{"_index":1162,"title":{},"body":{"classes/User.html":{}}}],["const",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{},"classes/Country.html":{},"classes/DateRange.html":{},"classes/Discount.html":{},"interfaces/DiscountStrategy.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Reservation.html":{},"injectables/RoomsService.html":{},"interfaces/TaxStrategy.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":172,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["constructor",{"_index":90,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/CountriesService.html":{},"classes/DateRange.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Reservation.html":{},"injectables/RoomsService.html":{},"injectables/TodoService.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":706,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["constructor(contryrepository",{"_index":319,"title":{},"body":{"injectables/CountriesService.html":{}}}],["constructor(data",{"_index":693,"title":{},"body":{"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{}}}],["constructor(private",{"_index":267,"title":{},"body":{"controllers/ConversationsController.html":{},"controllers/CountriesController.html":{},"controllers/DiscountsController.html":{},"injectables/JwtStrategy.html":{},"controllers/ListsController.html":{},"injectables/LocalStrategy.html":{},"controllers/PaymentsController.html":{},"controllers/PhotosController.html":{},"controllers/ReservationsController.html":{},"controllers/ReviewsController.html":{},"controllers/RoomsController.html":{},"controllers/TodoController.html":{},"controllers/UsersController.html":{}}}],["constructor(roomrepository",{"_index":985,"title":{},"body":{"injectables/RoomsService.html":{}}}],["constructor(startdate",{"_index":451,"title":{},"body":{"classes/DateRange.html":{}}}],["constructor(todorepository",{"_index":1057,"title":{},"body":{"injectables/TodoService.html":{}}}],["constructor(userrepository",{"_index":1190,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["content",{"_index":768,"title":{},"body":{"classes/Message.html":{}}}],["controller",{"_index":57,"title":{"controllers/AppController.html":{},"controllers/ConversationsController.html":{},"controllers/CountriesController.html":{},"controllers/DiscountsController.html":{},"controllers/ListsController.html":{},"controllers/PaymentsController.html":{},"controllers/PhotosController.html":{},"controllers/ReservationsController.html":{},"controllers/ReviewsController.html":{},"controllers/RoomsController.html":{},"controllers/TodoController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ConversationsController.html":{},"controllers/CountriesController.html":{},"controllers/DiscountsController.html":{},"controllers/ListsController.html":{},"controllers/PaymentsController.html":{},"controllers/PhotosController.html":{},"controllers/ReservationsController.html":{},"controllers/ReviewsController.html":{},"controllers/RoomsController.html":{},"controllers/TodoController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('conversations",{"_index":266,"title":{},"body":{"controllers/ConversationsController.html":{}}}],["controller('countries",{"_index":307,"title":{},"body":{"controllers/CountriesController.html":{}}}],["controller('discounts",{"_index":536,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["controller('lists",{"_index":740,"title":{},"body":{"controllers/ListsController.html":{}}}],["controller('payments",{"_index":793,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["controller('photos",{"_index":830,"title":{},"body":{"controllers/PhotosController.html":{}}}],["controller('reservations",{"_index":896,"title":{},"body":{"controllers/ReservationsController.html":{}}}],["controller('reviews",{"_index":939,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["controller('rooms",{"_index":970,"title":{},"body":{"controllers/RoomsController.html":{}}}],["controller('todo",{"_index":1042,"title":{},"body":{"controllers/TodoController.html":{}}}],["controller('users",{"_index":1176,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":59,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ConversationsController.html":{},"modules/ConversationsModule.html":{},"controllers/CountriesController.html":{},"modules/CountriesModule.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"controllers/ListsController.html":{},"modules/ListsModule.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"controllers/PhotosController.html":{},"modules/PhotosModule.html":{},"controllers/ReservationsController.html":{},"modules/ReservationsModule.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["contryrepository",{"_index":322,"title":{},"body":{"injectables/CountriesService.html":{}}}],["conversation",{"_index":214,"title":{"classes/Conversation.html":{}},"body":{"classes/Conversation.html":{},"injectables/ConversationsService.html":{},"classes/Message.html":{},"classes/User.html":{},"coverage.html":{}}}],["conversation.dto",{"_index":264,"title":{},"body":{"controllers/ConversationsController.html":{},"injectables/ConversationsService.html":{},"classes/UpdateConversationDto.html":{}}}],["conversation.dto.ts",{"_index":371,"title":{},"body":{"classes/CreateConversationDto.html":{},"classes/UpdateConversationDto.html":{},"coverage.html":{}}}],["conversation.entity",{"_index":773,"title":{},"body":{"classes/Message.html":{}}}],["conversation.messages",{"_index":775,"title":{},"body":{"classes/Message.html":{}}}],["conversation.participants",{"_index":1153,"title":{},"body":{"classes/User.html":{}}}],["conversations",{"_index":237,"title":{},"body":{"controllers/ConversationsController.html":{},"injectables/ConversationsService.html":{},"classes/User.html":{}}}],["conversations.controller",{"_index":280,"title":{},"body":{"modules/ConversationsModule.html":{}}}],["conversations.service",{"_index":262,"title":{},"body":{"controllers/ConversationsController.html":{},"modules/ConversationsModule.html":{}}}],["conversations/conversations.module",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["conversationscontroller",{"_index":234,"title":{"controllers/ConversationsController.html":{}},"body":{"controllers/ConversationsController.html":{},"modules/ConversationsModule.html":{},"coverage.html":{}}}],["conversationsmodule",{"_index":116,"title":{"modules/ConversationsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConversationsModule.html":{},"modules.html":{},"overview.html":{}}}],["conversationsservice",{"_index":261,"title":{"injectables/ConversationsService.html":{}},"body":{"controllers/ConversationsController.html":{},"modules/ConversationsModule.html":{},"injectables/ConversationsService.html":{},"coverage.html":{},"overview.html":{}}}],["coreentity",{"_index":8,"title":{"classes/CoreEntity.html":{}},"body":{"classes/Amenity.html":{},"classes/Conversation.html":{},"classes/CoreEntity.html":{},"classes/Country.html":{},"classes/Discount.html":{},"classes/Facility.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"classes/List.html":{},"classes/Message.html":{},"classes/Payment.html":{},"classes/Photo.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"classes/Review.html":{},"classes/Rule.html":{},"classes/User.html":{},"classes/Verification.html":{},"coverage.html":{}}}],["coreentity:12",{"_index":36,"title":{},"body":{"classes/Amenity.html":{},"classes/Conversation.html":{},"classes/Country.html":{},"classes/Discount.html":{},"classes/Facility.html":{},"classes/List.html":{},"classes/Message.html":{},"classes/Payment.html":{},"classes/Photo.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"classes/Review.html":{},"classes/Rule.html":{},"classes/User.html":{},"classes/Verification.html":{}}}],["coreentity:15",{"_index":41,"title":{},"body":{"classes/Amenity.html":{},"classes/Conversation.html":{},"classes/Country.html":{},"classes/Discount.html":{},"classes/Facility.html":{},"classes/List.html":{},"classes/Message.html":{},"classes/Payment.html":{},"classes/Photo.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"classes/Review.html":{},"classes/Rule.html":{},"classes/User.html":{},"classes/Verification.html":{}}}],["coreentity:9",{"_index":39,"title":{},"body":{"classes/Amenity.html":{},"classes/Conversation.html":{},"classes/Country.html":{},"classes/Discount.html":{},"classes/Facility.html":{},"classes/List.html":{},"classes/Message.html":{},"classes/Payment.html":{},"classes/Photo.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"classes/Review.html":{},"classes/Rule.html":{},"classes/User.html":{},"classes/Verification.html":{}}}],["countries",{"_index":298,"title":{},"body":{"controllers/CountriesController.html":{}}}],["countries.controller",{"_index":314,"title":{},"body":{"modules/CountriesModule.html":{}}}],["countries.service",{"_index":305,"title":{},"body":{"controllers/CountriesController.html":{},"modules/CountriesModule.html":{}}}],["countries/countries.module",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["countriescontroller",{"_index":296,"title":{"controllers/CountriesController.html":{}},"body":{"controllers/CountriesController.html":{},"modules/CountriesModule.html":{},"coverage.html":{}}}],["countriesmodule",{"_index":117,"title":{"modules/CountriesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CountriesModule.html":{},"modules.html":{},"overview.html":{}}}],["countriesservice",{"_index":304,"title":{"injectables/CountriesService.html":{}},"body":{"controllers/CountriesController.html":{},"modules/CountriesModule.html":{},"injectables/CountriesService.html":{},"coverage.html":{},"overview.html":{}}}],["country",{"_index":315,"title":{"classes/Country.html":{}},"body":{"modules/CountriesModule.html":{},"injectables/CountriesService.html":{},"classes/Country.html":{},"interfaces/IPriceDetail.html":{},"coverage.html":{}}}],["country.dto",{"_index":306,"title":{},"body":{"controllers/CountriesController.html":{},"injectables/CountriesService.html":{}}}],["country.dto.ts",{"_index":373,"title":{},"body":{"classes/CreateCountryDto.html":{},"coverage.html":{}}}],["country.dto.ts:6",{"_index":374,"title":{},"body":{"classes/CreateCountryDto.html":{}}}],["country.rooms",{"_index":602,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["countryname",{"_index":333,"title":{},"body":{"classes/Country.html":{},"classes/CreateCountryDto.html":{},"interfaces/TaxStrategy.html":{},"miscellaneous/enumerations.html":{}}}],["countryname})@isenum(countryname",{"_index":335,"title":{},"body":{"classes/Country.html":{}}}],["coverage",{"_index":1224,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":238,"title":{},"body":{"controllers/ConversationsController.html":{},"injectables/ConversationsService.html":{},"controllers/CountriesController.html":{},"injectables/CountriesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/PhotosController.html":{},"injectables/PhotosService.html":{},"controllers/ReservationsController.html":{},"injectables/ReservationsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"classes/UpdateConversationDto.html":{},"classes/UpdateDiscountDto.html":{},"classes/UpdateListDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePhotoDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":268,"title":{},"body":{"controllers/ConversationsController.html":{},"controllers/CountriesController.html":{},"controllers/DiscountsController.html":{},"controllers/ListsController.html":{},"controllers/PaymentsController.html":{},"controllers/PhotosController.html":{},"controllers/ReservationsController.html":{},"controllers/ReviewsController.html":{},"controllers/RoomsController.html":{},"controllers/UsersController.html":{}}}],["create(createconversationdto",{"_index":243,"title":{},"body":{"controllers/ConversationsController.html":{},"injectables/ConversationsService.html":{}}}],["create(createcountrydto",{"_index":299,"title":{},"body":{"controllers/CountriesController.html":{},"injectables/CountriesService.html":{}}}],["create(creatediscountdto",{"_index":526,"title":{},"body":{"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{}}}],["create(createlistdto",{"_index":730,"title":{},"body":{"controllers/ListsController.html":{},"injectables/ListsService.html":{}}}],["create(createpaymentdto",{"_index":783,"title":{},"body":{"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{}}}],["create(createphotodto",{"_index":820,"title":{},"body":{"controllers/PhotosController.html":{},"injectables/PhotosService.html":{}}}],["create(createreservationdto",{"_index":887,"title":{},"body":{"controllers/ReservationsController.html":{},"injectables/ReservationsService.html":{}}}],["create(createreviewdto",{"_index":929,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["create(createroomdto",{"_index":958,"title":{},"body":{"controllers/RoomsController.html":{},"injectables/RoomsService.html":{}}}],["create(createuserdto",{"_index":1168,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createcode",{"_index":1209,"title":{},"body":{"classes/Verification.html":{}}}],["createconversationdto",{"_index":244,"title":{"classes/CreateConversationDto.html":{}},"body":{"controllers/ConversationsController.html":{},"injectables/ConversationsService.html":{},"classes/CreateConversationDto.html":{},"classes/UpdateConversationDto.html":{},"coverage.html":{}}}],["createcountrydto",{"_index":300,"title":{"classes/CreateCountryDto.html":{}},"body":{"controllers/CountriesController.html":{},"injectables/CountriesService.html":{},"classes/CreateCountryDto.html":{},"coverage.html":{}}}],["createdat",{"_index":14,"title":{},"body":{"classes/Amenity.html":{},"classes/Conversation.html":{},"classes/CoreEntity.html":{},"classes/Country.html":{},"classes/Discount.html":{},"classes/Facility.html":{},"classes/List.html":{},"classes/Message.html":{},"classes/Payment.html":{},"classes/Photo.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"classes/Review.html":{},"classes/Rule.html":{},"classes/Todo.html":{},"classes/User.html":{},"classes/Verification.html":{}}}],["createdatecolumn",{"_index":34,"title":{},"body":{"classes/Amenity.html":{},"classes/Conversation.html":{},"classes/CoreEntity.html":{},"classes/Country.html":{},"classes/Discount.html":{},"classes/Facility.html":{},"classes/List.html":{},"classes/Message.html":{},"classes/Payment.html":{},"classes/Photo.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"classes/Review.html":{},"classes/Rule.html":{},"classes/Todo.html":{},"classes/User.html":{},"classes/Verification.html":{}}}],["creatediscountdto",{"_index":375,"title":{"classes/CreateDiscountDto.html":{}},"body":{"classes/CreateDiscountDto.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"classes/UpdateDiscountDto.html":{},"coverage.html":{}}}],["createlistdto",{"_index":378,"title":{"classes/CreateListDto.html":{}},"body":{"classes/CreateListDto.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"classes/UpdateListDto.html":{},"coverage.html":{}}}],["createpaymentdto",{"_index":381,"title":{"classes/CreatePaymentDto.html":{}},"body":{"classes/CreatePaymentDto.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"classes/UpdatePaymentDto.html":{},"coverage.html":{}}}],["createphotodto",{"_index":384,"title":{"classes/CreatePhotoDto.html":{}},"body":{"classes/CreatePhotoDto.html":{},"controllers/PhotosController.html":{},"injectables/PhotosService.html":{},"classes/UpdatePhotoDto.html":{},"coverage.html":{}}}],["createreservationdto",{"_index":387,"title":{"classes/CreateReservationDto.html":{}},"body":{"classes/CreateReservationDto.html":{},"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{},"controllers/ReservationsController.html":{},"injectables/ReservationsService.html":{},"classes/UpdateReservationDto.html":{},"coverage.html":{}}}],["createreviewdto",{"_index":412,"title":{"classes/CreateReviewDto.html":{}},"body":{"classes/CreateReviewDto.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/UpdateReviewDto.html":{},"coverage.html":{}}}],["createroomdto",{"_index":415,"title":{"classes/CreateRoomDto.html":{}},"body":{"classes/CreateRoomDto.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"classes/UpdateRoomDto.html":{},"coverage.html":{}}}],["createtodo",{"_index":1020,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["createtodo(@body",{"_index":1044,"title":{},"body":{"controllers/TodoController.html":{}}}],["createtodo(createtododto",{"_index":1025,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["createtododto",{"_index":418,"title":{"classes/CreateTodoDTO.html":{}},"body":{"classes/CreateTodoDTO.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"classes/UpdateTodoDTO.html":{},"coverage.html":{}}}],["createuserdto",{"_index":437,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["cur",{"_index":656,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["current_timestamp",{"_index":1148,"title":{},"body":{"classes/User.html":{}}}],["d1.getfullyear",{"_index":472,"title":{},"body":{"classes/DateRange.html":{},"miscellaneous/variables.html":{}}}],["d1.getmonth",{"_index":476,"title":{},"body":{"classes/DateRange.html":{},"miscellaneous/variables.html":{}}}],["d1.gettime",{"_index":463,"title":{},"body":{"classes/DateRange.html":{},"miscellaneous/variables.html":{}}}],["d1m",{"_index":475,"title":{},"body":{"classes/DateRange.html":{},"miscellaneous/variables.html":{}}}],["d1y",{"_index":471,"title":{},"body":{"classes/DateRange.html":{},"miscellaneous/variables.html":{}}}],["d2",{"_index":459,"title":{},"body":{"classes/DateRange.html":{},"miscellaneous/variables.html":{}}}],["d2.getfullyear",{"_index":474,"title":{},"body":{"classes/DateRange.html":{},"miscellaneous/variables.html":{}}}],["d2.getmonth",{"_index":478,"title":{},"body":{"classes/DateRange.html":{},"miscellaneous/variables.html":{}}}],["d2.gettime",{"_index":461,"title":{},"body":{"classes/DateRange.html":{},"miscellaneous/variables.html":{}}}],["d2m",{"_index":477,"title":{},"body":{"classes/DateRange.html":{},"miscellaneous/variables.html":{}}}],["d2y",{"_index":473,"title":{},"body":{"classes/DateRange.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":695,"title":{},"body":{"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{}}}],["database_connection_dev",{"_index":1236,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["database_connection_prod",{"_index":1237,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["database_connection_test",{"_index":1238,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":33,"title":{},"body":{"classes/Amenity.html":{},"classes/Conversation.html":{},"classes/CoreEntity.html":{},"classes/Country.html":{},"classes/CreateReservationDto.html":{},"classes/DateRange.html":{},"classes/Discount.html":{},"classes/Facility.html":{},"interfaces/IReservationConstructor.html":{},"classes/List.html":{},"classes/Message.html":{},"classes/Payment.html":{},"classes/Photo.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"classes/ReserveRoomDTO.html":{},"classes/Review.html":{},"classes/Rule.html":{},"classes/Todo.html":{},"classes/User.html":{},"classes/Verification.html":{},"miscellaneous/variables.html":{}}}],["date'})@isdate",{"_index":871,"title":{},"body":{"classes/Reservation.html":{}}}],["datediff",{"_index":407,"title":{},"body":{"classes/CreateReservationDto.html":{},"classes/DateRange.html":{},"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{},"classes/ReserveRoomDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datediff.indays(this.checkin",{"_index":409,"title":{},"body":{"classes/CreateReservationDto.html":{},"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{}}}],["daterange",{"_index":405,"title":{"classes/DateRange.html":{}},"body":{"classes/CreateReservationDto.html":{},"classes/DateRange.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{},"classes/ReserveRoomDTO.html":{},"coverage.html":{}}}],["daterange(this.checkin",{"_index":411,"title":{},"body":{"classes/CreateReservationDto.html":{},"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{}}}],["datetime",{"_index":488,"title":{},"body":{"classes/Discount.html":{},"classes/User.html":{}}}],["days",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{}}}],["declarations",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConversationsModule.html":{},"modules/CountriesModule.html":{},"modules/DiscountsModule.html":{},"modules/ListsModule.html":{},"modules/PaymentsModule.html":{},"modules/PhotosModule.html":{},"modules/ReservationsModule.html":{},"modules/ReviewsModule.html":{},"modules/RoomsModule.html":{},"modules/TodoModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":20,"title":{},"body":{"classes/Amenity.html":{},"controllers/AppController.html":{},"classes/Conversation.html":{},"controllers/ConversationsController.html":{},"classes/CoreEntity.html":{},"controllers/CountriesController.html":{},"classes/Country.html":{},"classes/CreateCountryDto.html":{},"classes/CreateTodoDTO.html":{},"classes/CreateUserDto.html":{},"classes/Discount.html":{},"controllers/DiscountsController.html":{},"classes/Facility.html":{},"classes/List.html":{},"controllers/ListsController.html":{},"classes/Message.html":{},"classes/Payment.html":{},"controllers/PaymentsController.html":{},"classes/Photo.html":{},"controllers/PhotosController.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"controllers/ReservationsController.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"controllers/RoomsController.html":{},"classes/Rule.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"classes/Verification.html":{}}}],["deeppartial",{"_index":670,"title":{},"body":{"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{}}}],["default",{"_index":1011,"title":{},"body":{"classes/Todo.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":25,"title":{},"body":{"classes/Amenity.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/Conversation.html":{},"controllers/ConversationsController.html":{},"injectables/ConversationsService.html":{},"classes/CoreEntity.html":{},"controllers/CountriesController.html":{},"injectables/CountriesService.html":{},"classes/Country.html":{},"classes/CreateCountryDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateTodoDTO.html":{},"classes/CreateUserDto.html":{},"classes/DateRange.html":{},"classes/Discount.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"classes/Facility.html":{},"injectables/JwtStrategy.html":{},"classes/List.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"classes/Payment.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"classes/Photo.html":{},"controllers/PhotosController.html":{},"injectables/PhotosService.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"controllers/ReservationsController.html":{},"injectables/ReservationsService.html":{},"classes/ReserveRoomDTO.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"classes/Rule.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Verification.html":{}}}],["delete",{"_index":260,"title":{},"body":{"controllers/ConversationsController.html":{},"controllers/CountriesController.html":{},"controllers/DiscountsController.html":{},"controllers/ListsController.html":{},"controllers/PaymentsController.html":{},"controllers/PhotosController.html":{},"controllers/ReservationsController.html":{},"controllers/ReviewsController.html":{},"controllers/RoomsController.html":{},"controllers/TodoController.html":{},"controllers/UsersController.html":{}}}],["delete(':id",{"_index":251,"title":{},"body":{"controllers/ConversationsController.html":{},"controllers/CountriesController.html":{},"controllers/DiscountsController.html":{},"controllers/ListsController.html":{},"controllers/PaymentsController.html":{},"controllers/PhotosController.html":{},"controllers/ReservationsController.html":{},"controllers/ReviewsController.html":{},"controllers/RoomsController.html":{},"controllers/TodoController.html":{},"controllers/UsersController.html":{}}}],["deletetodo",{"_index":1021,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["deletetodo(@param('id",{"_index":1049,"title":{},"body":{"controllers/TodoController.html":{}}}],["deletetodo(id",{"_index":1061,"title":{},"body":{"injectables/TodoService.html":{}}}],["deletetodo(todoid",{"_index":1027,"title":{},"body":{"controllers/TodoController.html":{}}}],["dependencies",{"_index":106,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConversationsModule.html":{},"modules/CountriesModule.html":{},"modules/DiscountsModule.html":{},"modules/ListsModule.html":{},"modules/PaymentsModule.html":{},"modules/PhotosModule.html":{},"modules/ReservationsModule.html":{},"modules/ReviewsModule.html":{},"modules/RoomsModule.html":{},"modules/TodoModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":11,"title":{},"body":{"classes/Amenity.html":{},"classes/Facility.html":{},"interfaces/IPriceDetail.html":{},"classes/Rule.html":{},"index.html":{}}}],["development",{"_index":1316,"title":{},"body":{"index.html":{}}}],["discount",{"_index":484,"title":{"classes/Discount.html":{}},"body":{"classes/Discount.html":{},"injectables/DiscountsService.html":{},"interfaces/IPriceDetail.html":{},"coverage.html":{}}}],["discount.calculatediscountfee(price",{"_index":654,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["discount.dto",{"_index":535,"title":{},"body":{"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"classes/UpdateDiscountDto.html":{}}}],["discount.dto.ts",{"_index":377,"title":{},"body":{"classes/CreateDiscountDto.html":{},"classes/UpdateDiscountDto.html":{},"coverage.html":{}}}],["discount.rooms",{"_index":593,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["discountfee",{"_index":562,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["discounts",{"_index":525,"title":{},"body":{"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"interfaces/IPriceDetail.html":{}}}],["discounts.controller",{"_index":545,"title":{},"body":{"modules/DiscountsModule.html":{}}}],["discounts.service",{"_index":534,"title":{},"body":{"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{}}}],["discounts/discounts.module",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["discountscontroller",{"_index":523,"title":{"controllers/DiscountsController.html":{}},"body":{"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"coverage.html":{}}}],["discountsmodule",{"_index":118,"title":{"modules/DiscountsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DiscountsModule.html":{},"modules.html":{},"overview.html":{}}}],["discountsservice",{"_index":533,"title":{"injectables/DiscountsService.html":{}},"body":{"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"coverage.html":{},"overview.html":{}}}],["discountstrategies",{"_index":504,"title":{},"body":{"classes/Discount.html":{},"interfaces/DiscountStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["discountstrategy",{"_index":505,"title":{"interfaces/DiscountStrategy.html":{}},"body":{"classes/Discount.html":{},"interfaces/DiscountStrategy.html":{},"coverage.html":{}}}],["discounttype",{"_index":496,"title":{},"body":{"classes/Discount.html":{},"interfaces/DiscountStrategy.html":{},"miscellaneous/enumerations.html":{}}}],["discounttype})@isenum(discounttype",{"_index":497,"title":{},"body":{"classes/Discount.html":{}}}],["documentation",{"_index":1225,"title":{},"body":{"coverage.html":{}}}],["domain",{"_index":624,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["dotenv",{"_index":1267,"title":{},"body":{"dependencies.html":{}}}],["dto/create",{"_index":263,"title":{},"body":{"controllers/ConversationsController.html":{},"injectables/ConversationsService.html":{},"controllers/CountriesController.html":{},"injectables/CountriesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"interfaces/IReservationConstructor.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/PhotosController.html":{},"injectables/PhotosService.html":{},"classes/Reservation.html":{},"controllers/ReservationsController.html":{},"injectables/ReservationsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/reserve",{"_index":577,"title":{},"body":{"interfaces/IPriceDetail.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{}}}],["dto/update",{"_index":265,"title":{},"body":{"controllers/ConversationsController.html":{},"injectables/ConversationsService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/PhotosController.html":{},"injectables/PhotosService.html":{},"controllers/ReservationsController.html":{},"injectables/ReservationsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e",{"_index":1161,"title":{},"body":{"classes/User.html":{}}}],["e2e",{"_index":1327,"title":{},"body":{"index.html":{}}}],["edittodo",{"_index":1022,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["edittodo(id",{"_index":1063,"title":{},"body":{"injectables/TodoService.html":{}}}],["edittodo(updatetododto",{"_index":1030,"title":{},"body":{"controllers/TodoController.html":{}}}],["efficient",{"_index":1302,"title":{},"body":{"index.html":{}}}],["email",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["enddate",{"_index":448,"title":{},"body":{"classes/DateRange.html":{},"classes/Discount.html":{}}}],["entities/country.entity",{"_index":316,"title":{},"body":{"modules/CountriesModule.html":{},"injectables/CountriesService.html":{},"classes/CreateCountryDto.html":{},"interfaces/TaxStrategy.html":{}}}],["entities/discount.entity",{"_index":518,"title":{},"body":{"interfaces/DiscountStrategy.html":{}}}],["entities/room.entity",{"_index":982,"title":{},"body":{"modules/RoomsModule.html":{},"injectables/RoomsService.html":{}}}],["entities/todo.entity",{"_index":1039,"title":{},"body":{"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{}}}],["entities/user.entity",{"_index":1175,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["entity",{"_index":47,"title":{},"body":{"classes/Amenity.html":{},"classes/Conversation.html":{},"classes/Country.html":{},"classes/Discount.html":{},"classes/Facility.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"classes/List.html":{},"classes/Message.html":{},"classes/Payment.html":{},"classes/Photo.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"classes/Review.html":{},"classes/Rule.html":{},"classes/Todo.html":{},"classes/User.html":{}}}],["entity('todo",{"_index":1017,"title":{},"body":{"classes/Todo.html":{}}}],["enum",{"_index":334,"title":{},"body":{"classes/Country.html":{},"classes/Discount.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"classes/Rating.html":{},"classes/Reservation.html":{}}}],["enumerations",{"_index":1287,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["expiresin",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":51,"title":{},"body":{"classes/Amenity.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Conversation.html":{},"controllers/ConversationsController.html":{},"modules/ConversationsModule.html":{},"injectables/ConversationsService.html":{},"classes/CoreEntity.html":{},"controllers/CountriesController.html":{},"modules/CountriesModule.html":{},"injectables/CountriesService.html":{},"classes/Country.html":{},"classes/CreateConversationDto.html":{},"classes/CreateCountryDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateListDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreatePhotoDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTodoDTO.html":{},"classes/CreateUserDto.html":{},"classes/DateRange.html":{},"classes/Discount.html":{},"interfaces/DiscountStrategy.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"classes/Facility.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/List.html":{},"controllers/ListsController.html":{},"modules/ListsModule.html":{},"injectables/ListsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"classes/Payment.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"classes/Photo.html":{},"controllers/PhotosController.html":{},"modules/PhotosModule.html":{},"injectables/PhotosService.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"controllers/ReservationsController.html":{},"modules/ReservationsModule.html":{},"injectables/ReservationsService.html":{},"classes/ReserveRoomDTO.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"classes/Rule.html":{},"interfaces/TaxStrategy.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateConversationDto.html":{},"classes/UpdateDiscountDto.html":{},"classes/UpdateListDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePhotoDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Verification.html":{}}}],["exports",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConversationsModule.html":{},"modules/CountriesModule.html":{},"modules/DiscountsModule.html":{},"modules/ListsModule.html":{},"modules/PaymentsModule.html":{},"modules/PhotosModule.html":{},"modules/ReservationsModule.html":{},"modules/ReviewsModule.html":{},"modules/RoomsModule.html":{},"modules/TodoModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":1260,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":7,"title":{},"body":{"classes/Amenity.html":{},"classes/Conversation.html":{},"classes/Country.html":{},"classes/Discount.html":{},"classes/Facility.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/List.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"classes/Payment.html":{},"classes/Photo.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"classes/Review.html":{},"classes/Rule.html":{},"classes/UpdateConversationDto.html":{},"classes/UpdateDiscountDto.html":{},"classes/UpdateListDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePhotoDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/Verification.html":{}}}],["extractjwt",{"_index":711,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":717,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["facilities",{"_index":611,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["facility",{"_index":552,"title":{"classes/Facility.html":{}},"body":{"classes/Facility.html":{},"interfaces/IPriceDetail.html":{},"coverage.html":{}}}],["facility.entity",{"_index":580,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["facility.rooms",{"_index":610,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["faeiled",{"_index":676,"title":{},"body":{"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{},"miscellaneous/enumerations.html":{}}}],["false",{"_index":520,"title":{},"body":{"interfaces/DiscountStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/Todo.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["false})@isboolean",{"_index":1120,"title":{},"body":{"classes/User.html":{}}}],["false})@isstring",{"_index":1127,"title":{},"body":{"classes/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Amenity.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Conversation.html":{},"controllers/ConversationsController.html":{},"modules/ConversationsModule.html":{},"injectables/ConversationsService.html":{},"classes/CoreEntity.html":{},"controllers/CountriesController.html":{},"modules/CountriesModule.html":{},"injectables/CountriesService.html":{},"classes/Country.html":{},"classes/CreateConversationDto.html":{},"classes/CreateCountryDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateListDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreatePhotoDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTodoDTO.html":{},"classes/CreateUserDto.html":{},"classes/DateRange.html":{},"classes/Discount.html":{},"interfaces/DiscountStrategy.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"classes/Facility.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/List.html":{},"controllers/ListsController.html":{},"modules/ListsModule.html":{},"injectables/ListsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"classes/Payment.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"classes/Photo.html":{},"controllers/PhotosController.html":{},"modules/PhotosModule.html":{},"injectables/PhotosService.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"controllers/ReservationsController.html":{},"modules/ReservationsModule.html":{},"injectables/ReservationsService.html":{},"classes/ReserveRoomDTO.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"classes/Rule.html":{},"interfaces/TaxStrategy.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateConversationDto.html":{},"classes/UpdateDiscountDto.html":{},"classes/UpdateListDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePhotoDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Verification.html":{},"coverage.html":{}}}],["filter(reservation",{"_index":637,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["findall",{"_index":239,"title":{},"body":{"controllers/ConversationsController.html":{},"injectables/ConversationsService.html":{},"controllers/CountriesController.html":{},"injectables/CountriesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/PhotosController.html":{},"injectables/PhotosService.html":{},"controllers/ReservationsController.html":{},"injectables/ReservationsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findbyid",{"_index":1023,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["findbyid(@param('id",{"_index":1046,"title":{},"body":{"controllers/TodoController.html":{}}}],["findbyid(id",{"_index":1065,"title":{},"body":{"injectables/TodoService.html":{}}}],["findbyid(todoid",{"_index":1034,"title":{},"body":{"controllers/TodoController.html":{}}}],["findone",{"_index":240,"title":{},"body":{"controllers/ConversationsController.html":{},"injectables/ConversationsService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/PhotosController.html":{},"injectables/PhotosService.html":{},"controllers/ReservationsController.html":{},"injectables/ReservationsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":271,"title":{},"body":{"controllers/ConversationsController.html":{},"controllers/DiscountsController.html":{},"controllers/ListsController.html":{},"controllers/PaymentsController.html":{},"controllers/PhotosController.html":{},"controllers/ReservationsController.html":{},"controllers/ReviewsController.html":{},"controllers/RoomsController.html":{},"controllers/UsersController.html":{}}}],["findone(id",{"_index":247,"title":{},"body":{"controllers/ConversationsController.html":{},"injectables/ConversationsService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/PhotosController.html":{},"injectables/PhotosService.html":{},"controllers/ReservationsController.html":{},"injectables/ReservationsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findonebyemail",{"_index":1189,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyemail(email",{"_index":1196,"title":{},"body":{"injectables/UsersService.html":{}}}],["firstname",{"_index":440,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["float",{"_index":596,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["framework",{"_index":1300,"title":{},"body":{"index.html":{}}}],["france",{"_index":353,"title":{},"body":{"classes/Country.html":{},"interfaces/TaxStrategy.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":517,"title":{},"body":{"interfaces/DiscountStrategy.html":{},"interfaces/TaxStrategy.html":{},"coverage.html":{}}}],["function(d1",{"_index":458,"title":{},"body":{"classes/DateRange.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":1294,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["germany",{"_index":354,"title":{},"body":{"classes/Country.html":{},"interfaces/TaxStrategy.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["get(':id",{"_index":248,"title":{},"body":{"controllers/ConversationsController.html":{},"controllers/DiscountsController.html":{},"controllers/ListsController.html":{},"controllers/PaymentsController.html":{},"controllers/PhotosController.html":{},"controllers/ReservationsController.html":{},"controllers/ReviewsController.html":{},"controllers/RoomsController.html":{},"controllers/TodoController.html":{},"controllers/UsersController.html":{}}}],["get('profile",{"_index":99,"title":{},"body":{"controllers/AppController.html":{}}}],["getdaterange",{"_index":395,"title":{},"body":{"classes/CreateReservationDto.html":{}}}],["getdurationindyas",{"_index":396,"title":{},"body":{"classes/CreateReservationDto.html":{},"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{}}}],["gethello",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getprofile",{"_index":63,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(@request",{"_index":100,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(req",{"_index":68,"title":{},"body":{"controllers/AppController.html":{}}}],["getstayterm",{"_index":685,"title":{},"body":{"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{}}}],["getting",{"_index":1296,"title":{"index.html":{}},"body":{}}],["gettodolist",{"_index":1024,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["getuserbypayload",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserbypayload(payload",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["graphql",{"_index":863,"title":{},"body":{"classes/Rating.html":{}}}],["grow",{"_index":1334,"title":{},"body":{"index.html":{}}}],["guest",{"_index":626,"title":{},"body":{"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{},"classes/Review.html":{},"injectables/RoomsService.html":{}}}],["guestcnt",{"_index":341,"title":{},"body":{"classes/Country.html":{},"classes/CreateReservationDto.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{},"classes/ReserveRoomDTO.html":{}}}],["guestcnt).totalprice",{"_index":645,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["guestid",{"_index":392,"title":{},"body":{"classes/CreateReservationDto.html":{}}}],["guests",{"_index":682,"title":{},"body":{"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{}}}],["hashpassword",{"_index":1110,"title":{},"body":{"classes/User.html":{}}}],["heavily",{"_index":1306,"title":{},"body":{"index.html":{}}}],["hello",{"_index":156,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":1345,"title":{},"body":{"index.html":{}}}],["host",{"_index":591,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["house",{"_index":585,"title":{},"body":{"interfaces/IPriceDetail.html":{},"miscellaneous/enumerations.html":{}}}],["https://nestjs.com",{"_index":1352,"title":{},"body":{"index.html":{}}}],["id",{"_index":15,"title":{},"body":{"classes/Amenity.html":{},"classes/Conversation.html":{},"controllers/ConversationsController.html":{},"injectables/ConversationsService.html":{},"classes/CoreEntity.html":{},"controllers/CountriesController.html":{},"injectables/CountriesService.html":{},"classes/Country.html":{},"classes/Discount.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"classes/Facility.html":{},"classes/List.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"classes/Message.html":{},"classes/Payment.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"classes/Photo.html":{},"controllers/PhotosController.html":{},"injectables/PhotosService.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"controllers/ReservationsController.html":{},"injectables/ReservationsService.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"classes/Rule.html":{},"classes/Todo.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Verification.html":{}}}],["identifier",{"_index":1226,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":718,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["import",{"_index":42,"title":{},"body":{"classes/Amenity.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Conversation.html":{},"controllers/ConversationsController.html":{},"modules/ConversationsModule.html":{},"injectables/ConversationsService.html":{},"classes/CoreEntity.html":{},"controllers/CountriesController.html":{},"modules/CountriesModule.html":{},"injectables/CountriesService.html":{},"classes/Country.html":{},"classes/CreateCountryDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateTodoDTO.html":{},"classes/CreateUserDto.html":{},"classes/Discount.html":{},"interfaces/DiscountStrategy.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"classes/Facility.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/List.html":{},"controllers/ListsController.html":{},"modules/ListsModule.html":{},"injectables/ListsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"classes/Payment.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"classes/Photo.html":{},"controllers/PhotosController.html":{},"modules/PhotosModule.html":{},"injectables/PhotosService.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"controllers/ReservationsController.html":{},"modules/ReservationsModule.html":{},"injectables/ReservationsService.html":{},"classes/ReserveRoomDTO.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"classes/Rule.html":{},"interfaces/TaxStrategy.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateConversationDto.html":{},"classes/UpdateDiscountDto.html":{},"classes/UpdateListDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePhotoDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Verification.html":{}}}],["imports",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CountriesModule.html":{},"modules/RoomsModule.html":{},"modules/TodoModule.html":{},"modules/UsersModule.html":{}}}],["indays",{"_index":457,"title":{},"body":{"classes/DateRange.html":{},"miscellaneous/variables.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/Amenity.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/Conversation.html":{},"controllers/ConversationsController.html":{},"injectables/ConversationsService.html":{},"classes/CoreEntity.html":{},"controllers/CountriesController.html":{},"injectables/CountriesService.html":{},"classes/Country.html":{},"classes/CreateCountryDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateTodoDTO.html":{},"classes/CreateUserDto.html":{},"classes/DateRange.html":{},"classes/Discount.html":{},"interfaces/DiscountStrategy.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"classes/Facility.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"injectables/JwtStrategy.html":{},"classes/List.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"classes/Payment.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"classes/Photo.html":{},"controllers/PhotosController.html":{},"injectables/PhotosService.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"controllers/ReservationsController.html":{},"injectables/ReservationsService.html":{},"classes/ReserveRoomDTO.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"classes/Rule.html":{},"interfaces/TaxStrategy.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Verification.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["india",{"_index":355,"title":{},"body":{"classes/Country.html":{},"interfaces/TaxStrategy.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Amenity.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Conversation.html":{},"controllers/ConversationsController.html":{},"modules/ConversationsModule.html":{},"injectables/ConversationsService.html":{},"classes/CoreEntity.html":{},"controllers/CountriesController.html":{},"modules/CountriesModule.html":{},"injectables/CountriesService.html":{},"classes/Country.html":{},"classes/CreateConversationDto.html":{},"classes/CreateCountryDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateListDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreatePhotoDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTodoDTO.html":{},"classes/CreateUserDto.html":{},"classes/DateRange.html":{},"classes/Discount.html":{},"interfaces/DiscountStrategy.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"classes/Facility.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/List.html":{},"controllers/ListsController.html":{},"modules/ListsModule.html":{},"injectables/ListsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"classes/Payment.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"classes/Photo.html":{},"controllers/PhotosController.html":{},"modules/PhotosModule.html":{},"injectables/PhotosService.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"controllers/ReservationsController.html":{},"modules/ReservationsModule.html":{},"injectables/ReservationsService.html":{},"classes/ReserveRoomDTO.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"classes/Rule.html":{},"interfaces/TaxStrategy.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateConversationDto.html":{},"classes/UpdateDiscountDto.html":{},"classes/UpdateListDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePhotoDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Verification.html":{}}}],["inherited",{"_index":35,"title":{},"body":{"classes/Amenity.html":{},"classes/Conversation.html":{},"classes/Country.html":{},"classes/Discount.html":{},"classes/Facility.html":{},"classes/List.html":{},"classes/Message.html":{},"classes/Payment.html":{},"classes/Photo.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"classes/Review.html":{},"classes/Rule.html":{},"classes/User.html":{},"classes/Verification.html":{}}}],["injectable",{"_index":152,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ConversationsService.html":{},"injectables/CountriesService.html":{},"injectables/DiscountsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ListsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PaymentsService.html":{},"injectables/PhotosService.html":{},"injectables/ReservationsService.html":{},"injectables/ReviewsService.html":{},"injectables/RoomsService.html":{},"injectables/TodoService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ConversationsService.html":{},"injectables/CountriesService.html":{},"injectables/DiscountsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ListsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PaymentsService.html":{},"injectables/PhotosService.html":{},"injectables/ReservationsService.html":{},"injectables/ReviewsService.html":{},"injectables/RoomsService.html":{},"injectables/TodoService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":153,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ConversationsService.html":{},"injectables/CountriesService.html":{},"injectables/DiscountsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ListsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PaymentsService.html":{},"injectables/PhotosService.html":{},"injectables/ReservationsService.html":{},"injectables/ReviewsService.html":{},"injectables/RoomsService.html":{},"injectables/TodoService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":326,"title":{},"body":{"injectables/CountriesService.html":{},"injectables/RoomsService.html":{},"injectables/TodoService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(country",{"_index":327,"title":{},"body":{"injectables/CountriesService.html":{}}}],["injectrepository(reservation",{"_index":996,"title":{},"body":{"injectables/RoomsService.html":{}}}],["injectrepository(room",{"_index":995,"title":{},"body":{"injectables/RoomsService.html":{}}}],["injectrepository(todo",{"_index":1068,"title":{},"body":{"injectables/TodoService.html":{}}}],["injectrepository(user",{"_index":1200,"title":{},"body":{"injectables/UsersService.html":{}}}],["inmonths",{"_index":470,"title":{},"body":{"classes/DateRange.html":{},"miscellaneous/variables.html":{}}}],["inspired",{"_index":1307,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1312,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1314,"title":{},"body":{"index.html":{}}}],["int",{"_index":491,"title":{},"body":{"classes/Discount.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"classes/Rating.html":{},"classes/Reservation.html":{}}}],["int'})@isint",{"_index":854,"title":{},"body":{"classes/Rating.html":{},"classes/Reservation.html":{}}}],["int'})@isnumber",{"_index":876,"title":{},"body":{"classes/Reservation.html":{}}}],["interface",{"_index":513,"title":{"interfaces/DiscountStrategy.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"interfaces/TaxStrategy.html":{}},"body":{"interfaces/DiscountStrategy.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{},"interfaces/TaxStrategy.html":{},"coverage.html":{}}}],["interfaces",{"_index":514,"title":{},"body":{"interfaces/DiscountStrategy.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"interfaces/TaxStrategy.html":{},"overview.html":{}}}],["internalservererrorexception",{"_index":566,"title":{},"body":{"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{},"classes/User.html":{}}}],["intersect",{"_index":450,"title":{},"body":{"classes/DateRange.html":{}}}],["intersect(other",{"_index":455,"title":{},"body":{"classes/DateRange.html":{}}}],["inver",{"_index":816,"title":{},"body":{"classes/Photo.html":{}}}],["inverse",{"_index":615,"title":{},"body":{"interfaces/IPriceDetail.html":{},"classes/Review.html":{},"classes/User.html":{}}}],["inweeks",{"_index":468,"title":{},"body":{"classes/DateRange.html":{},"miscellaneous/variables.html":{}}}],["inyears",{"_index":480,"title":{},"body":{"classes/DateRange.html":{},"miscellaneous/variables.html":{}}}],["ipricedetail",{"_index":558,"title":{"interfaces/IPriceDetail.html":{}},"body":{"interfaces/IPriceDetail.html":{},"coverage.html":{}}}],["ireservationconstructor",{"_index":668,"title":{"interfaces/IReservationConstructor.html":{}},"body":{"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{},"coverage.html":{}}}],["isaccommodable(stayterm",{"_index":635,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["isboolean",{"_index":433,"title":{},"body":{"classes/CreateTodoDTO.html":{},"classes/UpdateTodoDTO.html":{},"classes/User.html":{}}}],["isdate",{"_index":501,"title":{},"body":{"classes/Discount.html":{},"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{},"classes/User.html":{}}}],["isdone",{"_index":421,"title":{},"body":{"classes/CreateTodoDTO.html":{},"classes/Todo.html":{}}}],["isemail",{"_index":442,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["isenum",{"_index":343,"title":{},"body":{"classes/Country.html":{},"classes/CreateCountryDto.html":{},"classes/Discount.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"classes/Rating.html":{},"classes/Reservation.html":{}}}],["isenum(countryname",{"_index":362,"title":{},"body":{"classes/Country.html":{},"classes/CreateCountryDto.html":{}}}],["isenum(discounttype",{"_index":509,"title":{},"body":{"classes/Discount.html":{}}}],["isenum(ratingcategory",{"_index":868,"title":{},"body":{"classes/Rating.html":{}}}],["isenum(reservationstatus",{"_index":683,"title":{},"body":{"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{}}}],["isenum(roomtype",{"_index":592,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["isglobal",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":502,"title":{},"body":{"classes/Discount.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"classes/Rating.html":{},"classes/Reservation.html":{}}}],["isnumber",{"_index":567,"title":{},"body":{"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{}}}],["isoptional",{"_index":434,"title":{},"body":{"classes/CreateTodoDTO.html":{}}}],["isoptional()@isboolean",{"_index":425,"title":{},"body":{"classes/CreateTodoDTO.html":{}}}],["issatisfied",{"_index":516,"title":{},"body":{"interfaces/DiscountStrategy.html":{},"miscellaneous/variables.html":{}}}],["isscheduled",{"_index":689,"title":{},"body":{"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{}}}],["isstaff",{"_index":1105,"title":{},"body":{"classes/User.html":{}}}],["isstring",{"_index":43,"title":{},"body":{"classes/Amenity.html":{},"classes/CreateTodoDTO.html":{},"classes/CreateUserDto.html":{},"classes/Facility.html":{},"interfaces/IPriceDetail.html":{},"classes/List.html":{},"classes/Photo.html":{},"classes/Rule.html":{},"classes/UpdateTodoDTO.html":{},"classes/User.html":{}}}],["isstring()@isoptional()@length(1",{"_index":427,"title":{},"body":{"classes/CreateTodoDTO.html":{}}}],["isstring()@length(1",{"_index":430,"title":{},"body":{"classes/CreateTodoDTO.html":{}}}],["italy",{"_index":356,"title":{},"body":{"classes/Country.html":{},"interfaces/TaxStrategy.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["japan",{"_index":348,"title":{},"body":{"classes/Country.html":{},"interfaces/TaxStrategy.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["join",{"_index":1341,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":1217,"title":{},"body":{"classes/Verification.html":{}}}],["jointable",{"_index":227,"title":{},"body":{"classes/Conversation.html":{},"interfaces/IReservationConstructor.html":{},"classes/List.html":{},"classes/Message.html":{},"classes/Reservation.html":{}}}],["jwt",{"_index":714,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":85,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtconstants",{"_index":171,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":177,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":716,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":175,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":162,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":1349,"title":{},"body":{"index.html":{}}}],["key",{"_index":1072,"title":{},"body":{"injectables/TodoService.html":{}}}],["lastlogin",{"_index":1106,"title":{},"body":{"classes/User.html":{}}}],["lastname",{"_index":441,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["lastnight",{"_index":686,"title":{},"body":{"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{}}}],["lastnight.setdate(this.checkout.getdate",{"_index":687,"title":{},"body":{"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{}}}],["legend",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConversationsModule.html":{},"modules/CountriesModule.html":{},"modules/DiscountsModule.html":{},"modules/ListsModule.html":{},"modules/PaymentsModule.html":{},"modules/PhotosModule.html":{},"modules/ReservationsModule.html":{},"modules/ReviewsModule.html":{},"modules/RoomsModule.html":{},"modules/TodoModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":435,"title":{},"body":{"classes/CreateTodoDTO.html":{},"classes/Todo.html":{},"classes/UpdateTodoDTO.html":{},"classes/User.html":{}}}],["length(1",{"_index":436,"title":{},"body":{"classes/CreateTodoDTO.html":{}}}],["license",{"_index":1355,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":1331,"title":{},"body":{"index.html":{}}}],["list",{"_index":570,"title":{"classes/List.html":{}},"body":{"interfaces/IPriceDetail.html":{},"classes/List.html":{},"injectables/ListsService.html":{},"classes/User.html":{},"coverage.html":{}}}],["list.dto",{"_index":739,"title":{},"body":{"controllers/ListsController.html":{},"injectables/ListsService.html":{},"classes/UpdateListDto.html":{}}}],["list.dto.ts",{"_index":380,"title":{},"body":{"classes/CreateListDto.html":{},"classes/UpdateListDto.html":{},"coverage.html":{}}}],["list.owner",{"_index":1149,"title":{},"body":{"classes/User.html":{}}}],["list.rooms",{"_index":622,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["lists",{"_index":623,"title":{},"body":{"interfaces/IPriceDetail.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{}}}],["lists.controller",{"_index":749,"title":{},"body":{"modules/ListsModule.html":{}}}],["lists.service",{"_index":738,"title":{},"body":{"controllers/ListsController.html":{},"modules/ListsModule.html":{}}}],["lists/lists.module",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["listscontroller",{"_index":728,"title":{"controllers/ListsController.html":{}},"body":{"controllers/ListsController.html":{},"modules/ListsModule.html":{},"coverage.html":{}}}],["listsmodule",{"_index":119,"title":{"modules/ListsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ListsModule.html":{},"modules.html":{},"overview.html":{}}}],["listsservice",{"_index":737,"title":{"injectables/ListsService.html":{}},"body":{"controllers/ListsController.html":{},"modules/ListsModule.html":{},"injectables/ListsService.html":{},"coverage.html":{},"overview.html":{}}}],["lithuania",{"_index":357,"title":{},"body":{"classes/Country.html":{},"interfaces/TaxStrategy.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":763,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":88,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":163,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["location",{"_index":861,"title":{},"body":{"classes/Rating.html":{},"miscellaneous/enumerations.html":{}}}],["login",{"_index":65,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":95,"title":{},"body":{"controllers/AppController.html":{}}}],["login(req",{"_index":74,"title":{},"body":{"controllers/AppController.html":{}}}],["login(user",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["longdesc",{"_index":422,"title":{},"body":{"classes/CreateTodoDTO.html":{},"classes/Todo.html":{}}}],["make",{"_index":660,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["manytomany",{"_index":48,"title":{},"body":{"classes/Amenity.html":{},"classes/Conversation.html":{},"classes/Facility.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"classes/List.html":{},"classes/Reservation.html":{},"classes/Rule.html":{},"classes/User.html":{}}}],["manytomany(undefined",{"_index":30,"title":{},"body":{"classes/Amenity.html":{},"classes/Conversation.html":{},"classes/Facility.html":{},"classes/List.html":{},"classes/Reservation.html":{},"classes/Rule.html":{},"classes/User.html":{}}}],["manytoone",{"_index":503,"title":{},"body":{"classes/Discount.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"classes/List.html":{},"classes/Message.html":{},"classes/Payment.html":{},"classes/Photo.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"classes/Review.html":{}}}],["manytoone(undefined",{"_index":494,"title":{},"body":{"classes/Discount.html":{},"classes/List.html":{},"classes/Message.html":{},"classes/Payment.html":{},"classes/Photo.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"classes/Review.html":{}}}],["map(discount",{"_index":653,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["map(reservation",{"_index":639,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["matching",{"_index":55,"title":{},"body":{"classes/Amenity.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Conversation.html":{},"controllers/ConversationsController.html":{},"modules/ConversationsModule.html":{},"injectables/ConversationsService.html":{},"classes/CoreEntity.html":{},"controllers/CountriesController.html":{},"modules/CountriesModule.html":{},"injectables/CountriesService.html":{},"classes/Country.html":{},"classes/CreateConversationDto.html":{},"classes/CreateCountryDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateListDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreatePhotoDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTodoDTO.html":{},"classes/CreateUserDto.html":{},"classes/DateRange.html":{},"classes/Discount.html":{},"interfaces/DiscountStrategy.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"classes/Facility.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/List.html":{},"controllers/ListsController.html":{},"modules/ListsModule.html":{},"injectables/ListsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"classes/Payment.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"classes/Photo.html":{},"controllers/PhotosController.html":{},"modules/PhotosModule.html":{},"injectables/PhotosService.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"controllers/ReservationsController.html":{},"modules/ReservationsModule.html":{},"injectables/ReservationsService.html":{},"classes/ReserveRoomDTO.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"classes/Rule.html":{},"interfaces/TaxStrategy.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateConversationDto.html":{},"classes/UpdateDiscountDto.html":{},"classes/UpdateListDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePhotoDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Verification.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.max(acc",{"_index":657,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["math.trunc((t2",{"_index":464,"title":{},"body":{"classes/DateRange.html":{},"miscellaneous/variables.html":{}}}],["maxguestcnt",{"_index":598,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["message",{"_index":219,"title":{"classes/Message.html":{}},"body":{"classes/Conversation.html":{},"classes/Message.html":{},"classes/User.html":{},"coverage.html":{}}}],["message.conversation",{"_index":233,"title":{},"body":{"classes/Conversation.html":{}}}],["message.entity",{"_index":230,"title":{},"body":{"classes/Conversation.html":{}}}],["message.sender",{"_index":1154,"title":{},"body":{"classes/User.html":{}}}],["messages",{"_index":216,"title":{},"body":{"classes/Conversation.html":{},"classes/User.html":{}}}],["metadata",{"_index":1275,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":61,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/ConversationsController.html":{},"injectables/ConversationsService.html":{},"controllers/CountriesController.html":{},"injectables/CountriesService.html":{},"classes/Country.html":{},"classes/CreateReservationDto.html":{},"classes/DateRange.html":{},"classes/Discount.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"interfaces/IPriceDetail.html":{},"injectables/JwtStrategy.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"injectables/LocalStrategy.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/PhotosController.html":{},"injectables/PhotosService.html":{},"classes/Reservation.html":{},"controllers/ReservationsController.html":{},"injectables/ReservationsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Verification.html":{}}}],["mexico",{"_index":358,"title":{},"body":{"classes/Country.html":{},"interfaces/TaxStrategy.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":1286,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1330,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1320,"title":{},"body":{"index.html":{}}}],["module",{"_index":103,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConversationsModule.html":{},"modules/CountriesModule.html":{},"modules/DiscountsModule.html":{},"modules/ListsModule.html":{},"modules/PaymentsModule.html":{},"modules/PhotosModule.html":{},"modules/ReservationsModule.html":{},"modules/ReviewsModule.html":{},"modules/RoomsModule.html":{},"modules/TodoModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConversationsModule.html":{},"modules/CountriesModule.html":{},"modules/DiscountsModule.html":{},"modules/ListsModule.html":{},"modules/PaymentsModule.html":{},"modules/PhotosModule.html":{},"modules/ReservationsModule.html":{},"modules/ReviewsModule.html":{},"modules/RoomsModule.html":{},"modules/TodoModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":105,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConversationsModule.html":{},"modules/CountriesModule.html":{},"modules/DiscountsModule.html":{},"modules/ListsModule.html":{},"modules/PaymentsModule.html":{},"modules/PhotosModule.html":{},"modules/ReservationsModule.html":{},"modules/ReviewsModule.html":{},"modules/RoomsModule.html":{},"modules/TodoModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["month",{"_index":507,"title":{},"body":{"classes/Discount.html":{},"interfaces/DiscountStrategy.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":1344,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":1269,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":1350,"title":{},"body":{"index.html":{}}}],["name",{"_index":12,"title":{},"body":{"classes/Amenity.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/ConversationsController.html":{},"injectables/ConversationsService.html":{},"controllers/CountriesController.html":{},"injectables/CountriesService.html":{},"classes/Country.html":{},"classes/CreateCountryDto.html":{},"classes/DateRange.html":{},"classes/Discount.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"classes/Facility.html":{},"injectables/JwtStrategy.html":{},"classes/List.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"injectables/LocalStrategy.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/PhotosController.html":{},"injectables/PhotosService.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"controllers/ReservationsController.html":{},"injectables/ReservationsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"classes/Rule.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":1309,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1354,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":80,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/ConversationsController.html":{},"modules/ConversationsModule.html":{},"injectables/ConversationsService.html":{},"controllers/CountriesController.html":{},"modules/CountriesModule.html":{},"injectables/CountriesService.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ListsController.html":{},"modules/ListsModule.html":{},"injectables/ListsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"controllers/PhotosController.html":{},"modules/PhotosModule.html":{},"injectables/PhotosService.html":{},"classes/Reservation.html":{},"controllers/ReservationsController.html":{},"modules/ReservationsModule.html":{},"injectables/ReservationsService.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1254,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1079,"title":{},"body":{"classes/UpdateConversationDto.html":{},"classes/UpdateDiscountDto.html":{},"classes/UpdateListDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePhotoDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1259,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":1261,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/CountriesModule.html":{},"injectables/CountriesService.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["netherlands",{"_index":359,"title":{},"body":{"classes/Country.html":{},"interfaces/TaxStrategy.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":289,"title":{},"body":{"injectables/ConversationsService.html":{},"classes/CreateReservationDto.html":{},"classes/Discount.html":{},"injectables/DiscountsService.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"injectables/JwtStrategy.html":{},"injectables/ListsService.html":{},"injectables/LocalStrategy.html":{},"injectables/PaymentsService.html":{},"injectables/PhotosService.html":{},"classes/Reservation.html":{},"injectables/ReservationsService.html":{},"injectables/ReviewsService.html":{},"injectables/RoomsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["node.js",{"_index":1299,"title":{},"body":{"index.html":{}}}],["now",{"_index":511,"title":{},"body":{"classes/Discount.html":{}}}],["npm",{"_index":1313,"title":{},"body":{"index.html":{}}}],["null",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{},"classes/Discount.html":{}}}],["nullable",{"_index":23,"title":{},"body":{"classes/Amenity.html":{},"classes/Discount.html":{},"classes/Facility.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"classes/Photo.html":{},"classes/Reservation.html":{},"classes/Rule.html":{},"classes/Todo.html":{},"classes/User.html":{}}}],["number",{"_index":37,"title":{},"body":{"classes/Amenity.html":{},"classes/Conversation.html":{},"injectables/ConversationsService.html":{},"classes/CoreEntity.html":{},"injectables/CountriesService.html":{},"classes/Country.html":{},"classes/CreateReservationDto.html":{},"classes/Discount.html":{},"interfaces/DiscountStrategy.html":{},"injectables/DiscountsService.html":{},"classes/Facility.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"classes/List.html":{},"injectables/ListsService.html":{},"classes/Message.html":{},"classes/Payment.html":{},"injectables/PaymentsService.html":{},"classes/Photo.html":{},"injectables/PhotosService.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"injectables/ReservationsService.html":{},"classes/ReserveRoomDTO.html":{},"classes/Review.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"classes/Rule.html":{},"interfaces/TaxStrategy.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/Verification.html":{}}}],["object",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ok",{"_index":1163,"title":{},"body":{"classes/User.html":{}}}],["ondelete",{"_index":1212,"title":{},"body":{"classes/Verification.html":{}}}],["onetomany",{"_index":228,"title":{},"body":{"classes/Conversation.html":{},"classes/Country.html":{},"interfaces/IPriceDetail.html":{},"classes/Review.html":{},"classes/User.html":{}}}],["onetomany(undefined",{"_index":220,"title":{},"body":{"classes/Conversation.html":{},"classes/Country.html":{},"classes/Review.html":{},"classes/User.html":{}}}],["onetoone",{"_index":229,"title":{},"body":{"classes/Conversation.html":{},"classes/Verification.html":{}}}],["onetoone(type",{"_index":231,"title":{},"body":{"classes/Conversation.html":{},"classes/Verification.html":{}}}],["onetoone(undefined",{"_index":1211,"title":{},"body":{"classes/Verification.html":{}}}],["onetoone(undefined)@jointable",{"_index":224,"title":{},"body":{"classes/Conversation.html":{}}}],["open",{"_index":1332,"title":{},"body":{"index.html":{}}}],["optional",{"_index":72,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/ConversationsController.html":{},"injectables/ConversationsService.html":{},"controllers/CountriesController.html":{},"injectables/CountriesService.html":{},"classes/Country.html":{},"classes/DateRange.html":{},"classes/Discount.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/JwtStrategy.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"injectables/LocalStrategy.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/PhotosController.html":{},"injectables/PhotosService.html":{},"classes/Reservation.html":{},"controllers/ReservationsController.html":{},"injectables/ReservationsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":609,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["otherstayrange.intersect(stayterm",{"_index":642,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["out",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConversationsModule.html":{},"modules/CountriesModule.html":{},"modules/DiscountsModule.html":{},"modules/ListsModule.html":{},"modules/PaymentsModule.html":{},"modules/PhotosModule.html":{},"modules/ReservationsModule.html":{},"modules/ReviewsModule.html":{},"modules/RoomsModule.html":{},"modules/TodoModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":1359,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":722,"title":{},"body":{"classes/List.html":{}}}],["package",{"_index":1251,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":259,"title":{},"body":{"controllers/ConversationsController.html":{},"controllers/CountriesController.html":{},"controllers/DiscountsController.html":{},"controllers/ListsController.html":{},"controllers/PaymentsController.html":{},"controllers/PhotosController.html":{},"controllers/ReservationsController.html":{},"controllers/ReviewsController.html":{},"controllers/RoomsController.html":{},"controllers/TodoController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":976,"title":{},"body":{"controllers/RoomsController.html":{},"controllers/TodoController.html":{}}}],["parameters",{"_index":71,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/ConversationsController.html":{},"injectables/ConversationsService.html":{},"controllers/CountriesController.html":{},"injectables/CountriesService.html":{},"classes/Country.html":{},"classes/DateRange.html":{},"classes/Discount.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/JwtStrategy.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"injectables/LocalStrategy.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/PhotosController.html":{},"injectables/PhotosService.html":{},"classes/Reservation.html":{},"controllers/ReservationsController.html":{},"injectables/ReservationsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["partialtype",{"_index":1078,"title":{},"body":{"classes/UpdateConversationDto.html":{},"classes/UpdateDiscountDto.html":{},"classes/UpdateListDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePhotoDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createconversationdto",{"_index":1081,"title":{},"body":{"classes/UpdateConversationDto.html":{}}}],["partialtype(creatediscountdto",{"_index":1083,"title":{},"body":{"classes/UpdateDiscountDto.html":{}}}],["partialtype(createlistdto",{"_index":1085,"title":{},"body":{"classes/UpdateListDto.html":{}}}],["partialtype(createpaymentdto",{"_index":1087,"title":{},"body":{"classes/UpdatePaymentDto.html":{}}}],["partialtype(createphotodto",{"_index":1089,"title":{},"body":{"classes/UpdatePhotoDto.html":{}}}],["partialtype(createreservationdto",{"_index":1091,"title":{},"body":{"classes/UpdateReservationDto.html":{}}}],["partialtype(createreviewdto",{"_index":1093,"title":{},"body":{"classes/UpdateReviewDto.html":{}}}],["partialtype(createroomdto",{"_index":1095,"title":{},"body":{"classes/UpdateRoomDto.html":{}}}],["partialtype(createtododto",{"_index":1097,"title":{},"body":{"classes/UpdateTodoDTO.html":{}}}],["partialtype(createuserdto",{"_index":1101,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["participants",{"_index":217,"title":{},"body":{"classes/Conversation.html":{}}}],["passport",{"_index":713,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":710,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":715,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["passwordfield",{"_index":765,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["patch",{"_index":1037,"title":{},"body":{"controllers/TodoController.html":{}}}],["patch(':id",{"_index":1032,"title":{},"body":{"controllers/TodoController.html":{}}}],["payload",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payment",{"_index":776,"title":{"classes/Payment.html":{}},"body":{"classes/Payment.html":{},"injectables/PaymentsService.html":{},"classes/User.html":{},"coverage.html":{}}}],["payment.dto",{"_index":792,"title":{},"body":{"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"classes/UpdatePaymentDto.html":{}}}],["payment.dto.ts",{"_index":383,"title":{},"body":{"classes/CreatePaymentDto.html":{},"classes/UpdatePaymentDto.html":{},"coverage.html":{}}}],["payment.user",{"_index":1155,"title":{},"body":{"classes/User.html":{}}}],["paymentid",{"_index":393,"title":{},"body":{"classes/CreateReservationDto.html":{},"classes/ReserveRoomDTO.html":{}}}],["payments",{"_index":782,"title":{},"body":{"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"classes/User.html":{}}}],["payments.controller",{"_index":802,"title":{},"body":{"modules/PaymentsModule.html":{}}}],["payments.service",{"_index":791,"title":{},"body":{"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{}}}],["payments/payments.module",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["paymentscontroller",{"_index":780,"title":{"controllers/PaymentsController.html":{}},"body":{"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"coverage.html":{}}}],["paymentsmodule",{"_index":120,"title":{"modules/PaymentsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PaymentsModule.html":{},"modules.html":{},"overview.html":{}}}],["paymentsservice",{"_index":790,"title":{"injectables/PaymentsService.html":{}},"body":{"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"coverage.html":{},"overview.html":{}}}],["percent",{"_index":486,"title":{},"body":{"classes/Discount.html":{},"interfaces/TaxStrategy.html":{},"miscellaneous/variables.html":{}}}],["photo",{"_index":572,"title":{"classes/Photo.html":{}},"body":{"interfaces/IPriceDetail.html":{},"classes/Photo.html":{},"injectables/PhotosService.html":{},"coverage.html":{}}}],["photo.dto",{"_index":829,"title":{},"body":{"controllers/PhotosController.html":{},"injectables/PhotosService.html":{},"classes/UpdatePhotoDto.html":{}}}],["photo.dto.ts",{"_index":386,"title":{},"body":{"classes/CreatePhotoDto.html":{},"classes/UpdatePhotoDto.html":{},"coverage.html":{}}}],["photo.room",{"_index":600,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["photo_repository",{"_index":1239,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["photos",{"_index":601,"title":{},"body":{"interfaces/IPriceDetail.html":{},"controllers/PhotosController.html":{},"injectables/PhotosService.html":{}}}],["photos.controller",{"_index":839,"title":{},"body":{"modules/PhotosModule.html":{}}}],["photos.service",{"_index":828,"title":{},"body":{"controllers/PhotosController.html":{},"modules/PhotosModule.html":{}}}],["photos/photos.module",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["photoscontroller",{"_index":818,"title":{"controllers/PhotosController.html":{}},"body":{"controllers/PhotosController.html":{},"modules/PhotosModule.html":{},"coverage.html":{}}}],["photosmodule",{"_index":121,"title":{"modules/PhotosModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PhotosModule.html":{},"modules.html":{},"overview.html":{}}}],["photosservice",{"_index":827,"title":{"injectables/PhotosService.html":{}},"body":{"controllers/PhotosController.html":{},"modules/PhotosModule.html":{},"injectables/PhotosService.html":{},"coverage.html":{},"overview.html":{}}}],["please",{"_index":1342,"title":{},"body":{"index.html":{}}}],["portugal",{"_index":360,"title":{},"body":{"classes/Country.html":{},"interfaces/TaxStrategy.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":77,"title":{},"body":{"controllers/AppController.html":{},"controllers/ConversationsController.html":{},"controllers/CountriesController.html":{},"controllers/DiscountsController.html":{},"controllers/ListsController.html":{},"controllers/PaymentsController.html":{},"controllers/PhotosController.html":{},"controllers/ReservationsController.html":{},"controllers/ReviewsController.html":{},"controllers/RoomsController.html":{},"controllers/TodoController.html":{},"controllers/UsersController.html":{}}}],["post(':id",{"_index":964,"title":{},"body":{"controllers/RoomsController.html":{}}}],["post('auth/login",{"_index":94,"title":{},"body":{"controllers/AppController.html":{}}}],["prefix",{"_index":236,"title":{},"body":{"controllers/ConversationsController.html":{},"controllers/CountriesController.html":{},"controllers/DiscountsController.html":{},"controllers/ListsController.html":{},"controllers/PaymentsController.html":{},"controllers/PhotosController.html":{},"controllers/ReservationsController.html":{},"controllers/ReviewsController.html":{},"controllers/RoomsController.html":{},"controllers/TodoController.html":{},"controllers/UsersController.html":{}}}],["price",{"_index":339,"title":{},"body":{"classes/Country.html":{},"classes/CreateReservationDto.html":{},"classes/Discount.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"classes/ReserveRoomDTO.html":{},"miscellaneous/enumerations.html":{}}}],["primarygeneratedcolumn",{"_index":38,"title":{},"body":{"classes/Amenity.html":{},"classes/Conversation.html":{},"classes/CoreEntity.html":{},"classes/Country.html":{},"classes/Discount.html":{},"classes/Facility.html":{},"classes/List.html":{},"classes/Message.html":{},"classes/Payment.html":{},"classes/Photo.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"classes/Review.html":{},"classes/Rule.html":{},"classes/Todo.html":{},"classes/User.html":{},"classes/Verification.html":{}}}],["private",{"_index":91,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/CountriesService.html":{},"interfaces/IPriceDetail.html":{},"injectables/RoomsService.html":{},"injectables/TodoService.html":{},"injectables/UsersService.html":{}}}],["process.env.jwt_secret",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1322,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":1298,"title":{},"body":{"index.html":{}}}],["project",{"_index":1333,"title":{},"body":{"index.html":{}}}],["promise",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":10,"title":{},"body":{"classes/Amenity.html":{},"classes/Conversation.html":{},"classes/CoreEntity.html":{},"classes/Country.html":{},"classes/CreateCountryDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateTodoDTO.html":{},"classes/CreateUserDto.html":{},"classes/DateRange.html":{},"classes/Discount.html":{},"interfaces/DiscountStrategy.html":{},"classes/Facility.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"classes/List.html":{},"classes/Message.html":{},"classes/Payment.html":{},"classes/Photo.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"classes/ReserveRoomDTO.html":{},"classes/Review.html":{},"classes/Rule.html":{},"interfaces/TaxStrategy.html":{},"classes/Todo.html":{},"classes/User.html":{},"classes/Verification.html":{}}}],["providers",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConversationsModule.html":{},"modules/CountriesModule.html":{},"modules/DiscountsModule.html":{},"modules/ListsModule.html":{},"modules/PaymentsModule.html":{},"modules/PhotosModule.html":{},"modules/ReservationsModule.html":{},"modules/ReviewsModule.html":{},"modules/RoomsModule.html":{},"modules/TodoModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["put",{"_index":258,"title":{},"body":{"controllers/ConversationsController.html":{},"controllers/DiscountsController.html":{},"controllers/ListsController.html":{},"controllers/PaymentsController.html":{},"controllers/PhotosController.html":{},"controllers/ReservationsController.html":{},"controllers/ReviewsController.html":{},"controllers/RoomsController.html":{},"controllers/UsersController.html":{}}}],["put(':id",{"_index":255,"title":{},"body":{"controllers/ConversationsController.html":{},"controllers/DiscountsController.html":{},"controllers/ListsController.html":{},"controllers/PaymentsController.html":{},"controllers/PhotosController.html":{},"controllers/ReservationsController.html":{},"controllers/ReviewsController.html":{},"controllers/RoomsController.html":{},"controllers/UsersController.html":{}}}],["rating",{"_index":846,"title":{"classes/Rating.html":{}},"body":{"classes/Rating.html":{},"classes/Review.html":{},"coverage.html":{}}}],["rating.entity",{"_index":923,"title":{},"body":{"classes/Review.html":{}}}],["rating.review",{"_index":926,"title":{},"body":{"classes/Review.html":{}}}],["ratingcategory",{"_index":850,"title":{},"body":{"classes/Rating.html":{},"miscellaneous/enumerations.html":{}}}],["ratingcategory})@isenum(ratingcategory",{"_index":851,"title":{},"body":{"classes/Rating.html":{}}}],["ratings",{"_index":919,"title":{},"body":{"classes/Review.html":{}}}],["read",{"_index":1343,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":92,"title":{},"body":{"controllers/AppController.html":{},"controllers/ConversationsController.html":{},"controllers/CountriesController.html":{},"injectables/CountriesService.html":{},"controllers/DiscountsController.html":{},"controllers/ListsController.html":{},"controllers/PaymentsController.html":{},"controllers/PhotosController.html":{},"controllers/ReservationsController.html":{},"controllers/ReviewsController.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/TodoController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["record",{"_index":519,"title":{},"body":{"interfaces/DiscountStrategy.html":{},"interfaces/TaxStrategy.html":{},"miscellaneous/variables.html":{}}}],["reduce((acc",{"_index":655,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["reflect",{"_index":1274,"title":{},"body":{"dependencies.html":{}}}],["registerenumtype(ratingcategory",{"_index":862,"title":{},"body":{"classes/Rating.html":{}}}],["rejected",{"_index":675,"title":{},"body":{"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{},"miscellaneous/enumerations.html":{}}}],["relation",{"_index":617,"title":{},"body":{"interfaces/IPriceDetail.html":{},"classes/Photo.html":{},"classes/Review.html":{},"classes/User.html":{}}}],["remove",{"_index":241,"title":{},"body":{"controllers/ConversationsController.html":{},"injectables/ConversationsService.html":{},"controllers/CountriesController.html":{},"injectables/CountriesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/PhotosController.html":{},"injectables/PhotosService.html":{},"controllers/ReservationsController.html":{},"injectables/ReservationsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":275,"title":{},"body":{"controllers/ConversationsController.html":{},"controllers/CountriesController.html":{},"controllers/DiscountsController.html":{},"controllers/ListsController.html":{},"controllers/PaymentsController.html":{},"controllers/PhotosController.html":{},"controllers/ReservationsController.html":{},"controllers/ReviewsController.html":{},"controllers/RoomsController.html":{},"controllers/UsersController.html":{}}}],["remove(id",{"_index":250,"title":{},"body":{"controllers/ConversationsController.html":{},"injectables/ConversationsService.html":{},"controllers/CountriesController.html":{},"injectables/CountriesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/PhotosController.html":{},"injectables/PhotosService.html":{},"controllers/ReservationsController.html":{},"injectables/ReservationsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":291,"title":{},"body":{"injectables/ConversationsService.html":{},"injectables/DiscountsService.html":{},"injectables/ListsService.html":{},"injectables/PaymentsService.html":{},"injectables/PhotosService.html":{},"injectables/ReservationsService.html":{},"injectables/ReviewsService.html":{},"injectables/RoomsService.html":{},"injectables/UsersService.html":{}}}],["repository",{"_index":320,"title":{},"body":{"injectables/CountriesService.html":{},"injectables/RoomsService.html":{},"injectables/TodoService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["req",{"_index":73,"title":{},"body":{"controllers/AppController.html":{},"controllers/RoomsController.html":{}}}],["req.user",{"_index":101,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":78,"title":{},"body":{"controllers/AppController.html":{}}}],["requested",{"_index":673,"title":{},"body":{"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{},"miscellaneous/enumerations.html":{}}}],["reservation",{"_index":218,"title":{"classes/Reservation.html":{}},"body":{"classes/Conversation.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{},"injectables/ReservationsService.html":{},"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"classes/User.html":{},"coverage.html":{}}}],["reservation.dto",{"_index":671,"title":{},"body":{"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{},"controllers/ReservationsController.html":{},"injectables/ReservationsService.html":{},"classes/UpdateReservationDto.html":{}}}],["reservation.dto.ts",{"_index":389,"title":{},"body":{"classes/CreateReservationDto.html":{},"classes/UpdateReservationDto.html":{},"coverage.html":{}}}],["reservation.dto.ts:10",{"_index":401,"title":{},"body":{"classes/CreateReservationDto.html":{}}}],["reservation.dto.ts:12",{"_index":406,"title":{},"body":{"classes/CreateReservationDto.html":{}}}],["reservation.dto.ts:16",{"_index":404,"title":{},"body":{"classes/CreateReservationDto.html":{}}}],["reservation.dto.ts:4",{"_index":403,"title":{},"body":{"classes/CreateReservationDto.html":{}}}],["reservation.dto.ts:5",{"_index":400,"title":{},"body":{"classes/CreateReservationDto.html":{}}}],["reservation.dto.ts:6",{"_index":399,"title":{},"body":{"classes/CreateReservationDto.html":{}}}],["reservation.dto.ts:7",{"_index":397,"title":{},"body":{"classes/CreateReservationDto.html":{}}}],["reservation.dto.ts:8",{"_index":398,"title":{},"body":{"classes/CreateReservationDto.html":{}}}],["reservation.dto.ts:9",{"_index":402,"title":{},"body":{"classes/CreateReservationDto.html":{}}}],["reservation.getdurationindyas",{"_index":632,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["reservation.getstayterm",{"_index":640,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["reservation.guestcnt",{"_index":633,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["reservation.guests",{"_index":1151,"title":{},"body":{"classes/User.html":{}}}],["reservation.isscheduled",{"_index":638,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["reservation.price",{"_index":634,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["reservation.room",{"_index":618,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["reservationrepository",{"_index":986,"title":{},"body":{"injectables/RoomsService.html":{}}}],["reservations",{"_index":886,"title":{},"body":{"controllers/ReservationsController.html":{},"injectables/ReservationsService.html":{},"classes/User.html":{}}}],["reservations.controller",{"_index":905,"title":{},"body":{"modules/ReservationsModule.html":{}}}],["reservations.service",{"_index":895,"title":{},"body":{"controllers/ReservationsController.html":{},"modules/ReservationsModule.html":{}}}],["reservations/reservations.module",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["reservationscontroller",{"_index":884,"title":{"controllers/ReservationsController.html":{}},"body":{"controllers/ReservationsController.html":{},"modules/ReservationsModule.html":{},"coverage.html":{}}}],["reservationsmodule",{"_index":122,"title":{"modules/ReservationsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ReservationsModule.html":{},"modules.html":{},"overview.html":{}}}],["reservationsservice",{"_index":894,"title":{"injectables/ReservationsService.html":{}},"body":{"controllers/ReservationsController.html":{},"modules/ReservationsModule.html":{},"injectables/ReservationsService.html":{},"coverage.html":{},"overview.html":{}}}],["reservationstatus",{"_index":672,"title":{},"body":{"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{},"miscellaneous/enumerations.html":{}}}],["reservationstatus.accepted",{"_index":692,"title":{},"body":{"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{}}}],["reservationstatus.requested",{"_index":691,"title":{},"body":{"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{}}}],["reservatons",{"_index":619,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["reserve",{"_index":957,"title":{},"body":{"controllers/RoomsController.html":{},"injectables/RoomsService.html":{}}}],["reserve(reserveroomdto",{"_index":625,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["reserve(roomid",{"_index":963,"title":{},"body":{"controllers/RoomsController.html":{},"injectables/RoomsService.html":{}}}],["reserveroomdto",{"_index":576,"title":{"classes/ReserveRoomDTO.html":{}},"body":{"interfaces/IPriceDetail.html":{},"classes/ReserveRoomDTO.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"coverage.html":{}}}],["reset",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConversationsModule.html":{},"modules/CountriesModule.html":{},"modules/DiscountsModule.html":{},"modules/ListsModule.html":{},"modules/PaymentsModule.html":{},"modules/PhotosModule.html":{},"modules/ReservationsModule.html":{},"modules/ReviewsModule.html":{},"modules/RoomsModule.html":{},"modules/TodoModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["result",{"_index":54,"title":{},"body":{"classes/Amenity.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Conversation.html":{},"controllers/ConversationsController.html":{},"modules/ConversationsModule.html":{},"injectables/ConversationsService.html":{},"classes/CoreEntity.html":{},"controllers/CountriesController.html":{},"modules/CountriesModule.html":{},"injectables/CountriesService.html":{},"classes/Country.html":{},"classes/CreateConversationDto.html":{},"classes/CreateCountryDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateListDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreatePhotoDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTodoDTO.html":{},"classes/CreateUserDto.html":{},"classes/DateRange.html":{},"classes/Discount.html":{},"interfaces/DiscountStrategy.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"classes/Facility.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/List.html":{},"controllers/ListsController.html":{},"modules/ListsModule.html":{},"injectables/ListsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"classes/Payment.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"classes/Photo.html":{},"controllers/PhotosController.html":{},"modules/PhotosModule.html":{},"injectables/PhotosService.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"controllers/ReservationsController.html":{},"modules/ReservationsModule.html":{},"injectables/ReservationsService.html":{},"classes/ReserveRoomDTO.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"classes/Rule.html":{},"interfaces/TaxStrategy.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateConversationDto.html":{},"classes/UpdateDiscountDto.html":{},"classes/UpdateListDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePhotoDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Verification.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":56,"title":{},"body":{"classes/Amenity.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Conversation.html":{},"controllers/ConversationsController.html":{},"modules/ConversationsModule.html":{},"injectables/ConversationsService.html":{},"classes/CoreEntity.html":{},"controllers/CountriesController.html":{},"modules/CountriesModule.html":{},"injectables/CountriesService.html":{},"classes/Country.html":{},"classes/CreateConversationDto.html":{},"classes/CreateCountryDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateListDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreatePhotoDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTodoDTO.html":{},"classes/CreateUserDto.html":{},"classes/DateRange.html":{},"classes/Discount.html":{},"interfaces/DiscountStrategy.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"classes/Facility.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/List.html":{},"controllers/ListsController.html":{},"modules/ListsModule.html":{},"injectables/ListsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"classes/Payment.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"classes/Photo.html":{},"controllers/PhotosController.html":{},"modules/PhotosModule.html":{},"injectables/PhotosService.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"controllers/ReservationsController.html":{},"modules/ReservationsModule.html":{},"injectables/ReservationsService.html":{},"classes/ReserveRoomDTO.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"classes/Rule.html":{},"interfaces/TaxStrategy.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateConversationDto.html":{},"classes/UpdateDiscountDto.html":{},"classes/UpdateListDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePhotoDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Verification.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":96,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/ConversationsController.html":{},"injectables/ConversationsService.html":{},"controllers/CountriesController.html":{},"injectables/CountriesService.html":{},"classes/Country.html":{},"classes/CreateReservationDto.html":{},"classes/DateRange.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"injectables/JwtStrategy.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"injectables/LocalStrategy.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/PhotosController.html":{},"injectables/PhotosService.html":{},"classes/Reservation.html":{},"controllers/ReservationsController.html":{},"injectables/ReservationsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":67,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/ConversationsController.html":{},"injectables/ConversationsService.html":{},"controllers/CountriesController.html":{},"injectables/CountriesService.html":{},"classes/Country.html":{},"classes/CreateReservationDto.html":{},"classes/DateRange.html":{},"classes/Discount.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/JwtStrategy.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"injectables/LocalStrategy.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/PhotosController.html":{},"injectables/PhotosService.html":{},"classes/Reservation.html":{},"controllers/ReservationsController.html":{},"injectables/ReservationsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Verification.html":{}}}],["review",{"_index":574,"title":{"classes/Review.html":{}},"body":{"interfaces/IPriceDetail.html":{},"classes/Rating.html":{},"classes/Review.html":{},"injectables/ReviewsService.html":{},"classes/User.html":{},"coverage.html":{}}}],["review.dto",{"_index":938,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/UpdateReviewDto.html":{}}}],["review.dto.ts",{"_index":414,"title":{},"body":{"classes/CreateReviewDto.html":{},"classes/UpdateReviewDto.html":{},"coverage.html":{}}}],["review.entity",{"_index":857,"title":{},"body":{"classes/Rating.html":{}}}],["review.guest",{"_index":1152,"title":{},"body":{"classes/User.html":{}}}],["review.ratings",{"_index":867,"title":{},"body":{"classes/Rating.html":{}}}],["review.room",{"_index":620,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["reviews",{"_index":621,"title":{},"body":{"interfaces/IPriceDetail.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/User.html":{}}}],["reviews.controller",{"_index":948,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["reviews.service",{"_index":937,"title":{},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{}}}],["reviews/reviews.module",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["reviewscontroller",{"_index":927,"title":{"controllers/ReviewsController.html":{}},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"coverage.html":{}}}],["reviewsmodule",{"_index":123,"title":{"modules/ReviewsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ReviewsModule.html":{},"modules.html":{},"overview.html":{}}}],["reviewsservice",{"_index":936,"title":{"injectables/ReviewsService.html":{}},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"coverage.html":{},"overview.html":{}}}],["rimraf",{"_index":1277,"title":{},"body":{"dependencies.html":{}}}],["room",{"_index":29,"title":{},"body":{"classes/Amenity.html":{},"classes/Country.html":{},"classes/Discount.html":{},"classes/Facility.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"classes/List.html":{},"classes/Photo.html":{},"classes/Reservation.html":{},"classes/Review.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"classes/Rule.html":{},"interfaces/TaxStrategy.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["room.amenities",{"_index":53,"title":{},"body":{"classes/Amenity.html":{}}}],["room.country",{"_index":363,"title":{},"body":{"classes/Country.html":{}}}],["room.discounts",{"_index":510,"title":{},"body":{"classes/Discount.html":{}}}],["room.dto",{"_index":578,"title":{},"body":{"interfaces/IPriceDetail.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"classes/UpdateRoomDto.html":{}}}],["room.dto.ts",{"_index":417,"title":{},"body":{"classes/CreateRoomDto.html":{},"classes/ReserveRoomDTO.html":{},"classes/UpdateRoomDto.html":{},"coverage.html":{}}}],["room.dto.ts:4",{"_index":915,"title":{},"body":{"classes/ReserveRoomDTO.html":{}}}],["room.dto.ts:5",{"_index":913,"title":{},"body":{"classes/ReserveRoomDTO.html":{}}}],["room.dto.ts:6",{"_index":914,"title":{},"body":{"classes/ReserveRoomDTO.html":{}}}],["room.dto.ts:7",{"_index":917,"title":{},"body":{"classes/ReserveRoomDTO.html":{}}}],["room.dto.ts:8",{"_index":916,"title":{},"body":{"classes/ReserveRoomDTO.html":{}}}],["room.entity",{"_index":50,"title":{},"body":{"classes/Amenity.html":{},"classes/Facility.html":{},"classes/Rule.html":{}}}],["room.facilities",{"_index":557,"title":{},"body":{"classes/Facility.html":{}}}],["room.host",{"_index":1150,"title":{},"body":{"classes/User.html":{}}}],["room.lists",{"_index":726,"title":{},"body":{"classes/List.html":{}}}],["room.photos",{"_index":817,"title":{},"body":{"classes/Photo.html":{}}}],["room.reservatons",{"_index":680,"title":{},"body":{"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{}}}],["room.reserve(reserveroomdto",{"_index":998,"title":{},"body":{"injectables/RoomsService.html":{}}}],["room.reviews",{"_index":925,"title":{},"body":{"classes/Review.html":{}}}],["room.rules",{"_index":1004,"title":{},"body":{"classes/Rule.html":{}}}],["roomcnt",{"_index":594,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["roomid",{"_index":394,"title":{},"body":{"classes/CreateReservationDto.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{}}}],["roomrepository",{"_index":988,"title":{},"body":{"injectables/RoomsService.html":{}}}],["rooms",{"_index":13,"title":{},"body":{"classes/Amenity.html":{},"classes/Country.html":{},"classes/Discount.html":{},"classes/Facility.html":{},"classes/List.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"classes/Rule.html":{},"classes/User.html":{}}}],["rooms.controller",{"_index":981,"title":{},"body":{"modules/RoomsModule.html":{}}}],["rooms.service",{"_index":969,"title":{},"body":{"controllers/RoomsController.html":{},"modules/RoomsModule.html":{}}}],["rooms/rooms.module",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["roomscontroller",{"_index":955,"title":{"controllers/RoomsController.html":{}},"body":{"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"coverage.html":{}}}],["roomsmodule",{"_index":124,"title":{"modules/RoomsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RoomsModule.html":{},"modules.html":{},"overview.html":{}}}],["roomsservice",{"_index":968,"title":{"injectables/RoomsService.html":{}},"body":{"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"coverage.html":{},"overview.html":{}}}],["roomtype",{"_index":583,"title":{},"body":{"interfaces/IPriceDetail.html":{},"miscellaneous/enumerations.html":{}}}],["rule",{"_index":581,"title":{"classes/Rule.html":{}},"body":{"interfaces/IPriceDetail.html":{},"classes/Rule.html":{},"coverage.html":{}}}],["rule.entity",{"_index":582,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["rules",{"_index":612,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["run",{"_index":1317,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1279,"title":{},"body":{"dependencies.html":{}}}],["savelists",{"_index":1107,"title":{},"body":{"classes/User.html":{}}}],["scalable",{"_index":1303,"title":{},"body":{"index.html":{}}}],["secondaryunit",{"_index":586,"title":{},"body":{"interfaces/IPriceDetail.html":{},"miscellaneous/enumerations.html":{}}}],["secret",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["secretkey",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":719,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["security",{"_index":1156,"title":{},"body":{"classes/User.html":{}}}],["select",{"_index":1147,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["sender",{"_index":769,"title":{},"body":{"classes/Message.html":{}}}],["server",{"_index":1304,"title":{},"body":{"index.html":{}}}],["servicefee",{"_index":563,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["shortdesc",{"_index":423,"title":{},"body":{"classes/CreateTodoDTO.html":{},"classes/Todo.html":{}}}],["side",{"_index":616,"title":{},"body":{"interfaces/IPriceDetail.html":{},"classes/Photo.html":{},"classes/Review.html":{},"classes/User.html":{},"index.html":{}}}],["signoptions",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{}}}],["some(otherstayrange",{"_index":641,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Amenity.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Conversation.html":{},"controllers/ConversationsController.html":{},"modules/ConversationsModule.html":{},"injectables/ConversationsService.html":{},"classes/CoreEntity.html":{},"controllers/CountriesController.html":{},"modules/CountriesModule.html":{},"injectables/CountriesService.html":{},"classes/Country.html":{},"classes/CreateConversationDto.html":{},"classes/CreateCountryDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateListDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreatePhotoDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTodoDTO.html":{},"classes/CreateUserDto.html":{},"classes/DateRange.html":{},"classes/Discount.html":{},"interfaces/DiscountStrategy.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"classes/Facility.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/List.html":{},"controllers/ListsController.html":{},"modules/ListsModule.html":{},"injectables/ListsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"classes/Payment.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"classes/Photo.html":{},"controllers/PhotosController.html":{},"modules/PhotosModule.html":{},"injectables/PhotosService.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"controllers/ReservationsController.html":{},"modules/ReservationsModule.html":{},"injectables/ReservationsService.html":{},"classes/ReserveRoomDTO.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"classes/Rule.html":{},"interfaces/TaxStrategy.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateConversationDto.html":{},"classes/UpdateDiscountDto.html":{},"classes/UpdateListDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePhotoDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Verification.html":{},"index.html":{}}}],["southkorea",{"_index":347,"title":{},"body":{"classes/Country.html":{},"interfaces/TaxStrategy.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["special",{"_index":508,"title":{},"body":{"classes/Discount.html":{},"interfaces/DiscountStrategy.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["sponsors",{"_index":1336,"title":{},"body":{"index.html":{}}}],["src/.../constants.ts",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../country.entity.ts",{"_index":1288,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../datetime.utils.ts",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../discount.entity.ts",{"_index":1289,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../discountstrategy.ts",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1295,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../rating.entity.ts",{"_index":1290,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../reservation.entity.ts",{"_index":1291,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../room.entity.ts",{"_index":1292,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../taxstrategy.ts",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:16",{"_index":76,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:22",{"_index":70,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:27",{"_index":66,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":154,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":155,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.module.ts",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:13",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:23",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:30",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:7",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constants.ts",{"_index":1231,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/guards/jwt",{"_index":700,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/local",{"_index":756,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":704,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:18",{"_index":709,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:9",{"_index":707,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts",{"_index":758,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/local.strategy.ts:15",{"_index":761,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts:7",{"_index":759,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/common/datetime.utils",{"_index":408,"title":{},"body":{"classes/CreateReservationDto.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{},"classes/ReserveRoomDTO.html":{}}}],["src/common/datetime.utils.ts",{"_index":447,"title":{},"body":{"classes/DateRange.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/datetime.utils.ts:30",{"_index":452,"title":{},"body":{"classes/DateRange.html":{}}}],["src/common/datetime.utils.ts:35",{"_index":454,"title":{},"body":{"classes/DateRange.html":{}}}],["src/common/datetime.utils.ts:36",{"_index":453,"title":{},"body":{"classes/DateRange.html":{}}}],["src/common/datetime.utils.ts:38",{"_index":456,"title":{},"body":{"classes/DateRange.html":{}}}],["src/common/entities/core.entity",{"_index":45,"title":{},"body":{"classes/Amenity.html":{},"classes/Conversation.html":{},"classes/Country.html":{},"classes/Discount.html":{},"classes/Facility.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"classes/List.html":{},"classes/Message.html":{},"classes/Payment.html":{},"classes/Photo.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"classes/Review.html":{},"classes/Rule.html":{},"classes/User.html":{},"classes/Verification.html":{}}}],["src/common/entities/core.entity.ts",{"_index":292,"title":{},"body":{"classes/CoreEntity.html":{},"coverage.html":{}}}],["src/common/entities/core.entity.ts:12",{"_index":293,"title":{},"body":{"classes/CoreEntity.html":{}}}],["src/common/entities/core.entity.ts:15",{"_index":295,"title":{},"body":{"classes/CoreEntity.html":{}}}],["src/common/entities/core.entity.ts:9",{"_index":294,"title":{},"body":{"classes/CoreEntity.html":{}}}],["src/constants.ts",{"_index":1235,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/conversations/conversations.controller.ts",{"_index":235,"title":{},"body":{"controllers/ConversationsController.html":{},"coverage.html":{}}}],["src/conversations/conversations.controller.ts:11",{"_index":245,"title":{},"body":{"controllers/ConversationsController.html":{}}}],["src/conversations/conversations.controller.ts:16",{"_index":246,"title":{},"body":{"controllers/ConversationsController.html":{}}}],["src/conversations/conversations.controller.ts:21",{"_index":249,"title":{},"body":{"controllers/ConversationsController.html":{}}}],["src/conversations/conversations.controller.ts:26",{"_index":256,"title":{},"body":{"controllers/ConversationsController.html":{}}}],["src/conversations/conversations.controller.ts:31",{"_index":252,"title":{},"body":{"controllers/ConversationsController.html":{}}}],["src/conversations/conversations.module.ts",{"_index":279,"title":{},"body":{"modules/ConversationsModule.html":{}}}],["src/conversations/conversations.service.ts",{"_index":281,"title":{},"body":{"injectables/ConversationsService.html":{},"coverage.html":{}}}],["src/conversations/conversations.service.ts:11",{"_index":283,"title":{},"body":{"injectables/ConversationsService.html":{}}}],["src/conversations/conversations.service.ts:15",{"_index":284,"title":{},"body":{"injectables/ConversationsService.html":{}}}],["src/conversations/conversations.service.ts:19",{"_index":286,"title":{},"body":{"injectables/ConversationsService.html":{}}}],["src/conversations/conversations.service.ts:23",{"_index":285,"title":{},"body":{"injectables/ConversationsService.html":{}}}],["src/conversations/conversations.service.ts:7",{"_index":282,"title":{},"body":{"injectables/ConversationsService.html":{}}}],["src/conversations/dto/create",{"_index":370,"title":{},"body":{"classes/CreateConversationDto.html":{},"coverage.html":{}}}],["src/conversations/dto/update",{"_index":1077,"title":{},"body":{"classes/UpdateConversationDto.html":{},"coverage.html":{}}}],["src/conversations/entities/conversation.entity",{"_index":1144,"title":{},"body":{"classes/User.html":{}}}],["src/conversations/entities/conversation.entity.ts",{"_index":215,"title":{},"body":{"classes/Conversation.html":{},"coverage.html":{}}}],["src/conversations/entities/conversation.entity.ts:11",{"_index":225,"title":{},"body":{"classes/Conversation.html":{}}}],["src/conversations/entities/conversation.entity.ts:18",{"_index":223,"title":{},"body":{"classes/Conversation.html":{}}}],["src/conversations/entities/conversation.entity.ts:24",{"_index":221,"title":{},"body":{"classes/Conversation.html":{}}}],["src/conversations/entities/message.entity",{"_index":1145,"title":{},"body":{"classes/User.html":{}}}],["src/conversations/entities/message.entity.ts",{"_index":767,"title":{},"body":{"classes/Message.html":{},"coverage.html":{}}}],["src/conversations/entities/message.entity.ts:15",{"_index":772,"title":{},"body":{"classes/Message.html":{}}}],["src/conversations/entities/message.entity.ts:21",{"_index":771,"title":{},"body":{"classes/Message.html":{}}}],["src/conversations/entities/message.entity.ts:9",{"_index":770,"title":{},"body":{"classes/Message.html":{}}}],["src/countries/countries.controller.ts",{"_index":297,"title":{},"body":{"controllers/CountriesController.html":{},"coverage.html":{}}}],["src/countries/countries.controller.ts:10",{"_index":301,"title":{},"body":{"controllers/CountriesController.html":{}}}],["src/countries/countries.controller.ts:15",{"_index":302,"title":{},"body":{"controllers/CountriesController.html":{}}}],["src/countries/countries.controller.ts:20",{"_index":303,"title":{},"body":{"controllers/CountriesController.html":{}}}],["src/countries/countries.module.ts",{"_index":313,"title":{},"body":{"modules/CountriesModule.html":{}}}],["src/countries/countries.service.ts",{"_index":318,"title":{},"body":{"injectables/CountriesService.html":{},"coverage.html":{}}}],["src/countries/countries.service.ts:14",{"_index":323,"title":{},"body":{"injectables/CountriesService.html":{}}}],["src/countries/countries.service.ts:18",{"_index":324,"title":{},"body":{"injectables/CountriesService.html":{}}}],["src/countries/countries.service.ts:22",{"_index":325,"title":{},"body":{"injectables/CountriesService.html":{}}}],["src/countries/countries.service.ts:8",{"_index":321,"title":{},"body":{"injectables/CountriesService.html":{}}}],["src/countries/dto/create",{"_index":372,"title":{},"body":{"classes/CreateCountryDto.html":{},"coverage.html":{}}}],["src/countries/entities/country.entity",{"_index":568,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["src/countries/entities/country.entity.ts",{"_index":331,"title":{},"body":{"classes/Country.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/countries/entities/country.entity.ts:29",{"_index":336,"title":{},"body":{"classes/Country.html":{}}}],["src/countries/entities/country.entity.ts:35",{"_index":337,"title":{},"body":{"classes/Country.html":{}}}],["src/countries/entities/country.entity.ts:37",{"_index":342,"title":{},"body":{"classes/Country.html":{}}}],["src/countries/taxstrategy.ts",{"_index":1005,"title":{},"body":{"interfaces/TaxStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/discounts/discounts.controller.ts",{"_index":524,"title":{},"body":{"controllers/DiscountsController.html":{},"coverage.html":{}}}],["src/discounts/discounts.controller.ts:11",{"_index":527,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["src/discounts/discounts.controller.ts:16",{"_index":528,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["src/discounts/discounts.controller.ts:21",{"_index":529,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["src/discounts/discounts.controller.ts:26",{"_index":532,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["src/discounts/discounts.controller.ts:31",{"_index":530,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["src/discounts/discounts.module.ts",{"_index":544,"title":{},"body":{"modules/DiscountsModule.html":{}}}],["src/discounts/discounts.service.ts",{"_index":546,"title":{},"body":{"injectables/DiscountsService.html":{},"coverage.html":{}}}],["src/discounts/discounts.service.ts:11",{"_index":548,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["src/discounts/discounts.service.ts:15",{"_index":549,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["src/discounts/discounts.service.ts:19",{"_index":551,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["src/discounts/discounts.service.ts:23",{"_index":550,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["src/discounts/discounts.service.ts:7",{"_index":547,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["src/discounts/discountstrategy.ts",{"_index":515,"title":{},"body":{"interfaces/DiscountStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/discounts/dto/create",{"_index":376,"title":{},"body":{"classes/CreateDiscountDto.html":{},"coverage.html":{}}}],["src/discounts/dto/update",{"_index":1082,"title":{},"body":{"classes/UpdateDiscountDto.html":{},"coverage.html":{}}}],["src/discounts/entities/discount.entity",{"_index":569,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["src/discounts/entities/discount.entity.ts",{"_index":485,"title":{},"body":{"classes/Discount.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/discounts/entities/discount.entity.ts:17",{"_index":498,"title":{},"body":{"classes/Discount.html":{}}}],["src/discounts/entities/discount.entity.ts:23",{"_index":495,"title":{},"body":{"classes/Discount.html":{}}}],["src/discounts/entities/discount.entity.ts:27",{"_index":493,"title":{},"body":{"classes/Discount.html":{}}}],["src/discounts/entities/discount.entity.ts:31",{"_index":490,"title":{},"body":{"classes/Discount.html":{}}}],["src/discounts/entities/discount.entity.ts:33",{"_index":500,"title":{},"body":{"classes/Discount.html":{}}}],["src/lists/dto/create",{"_index":379,"title":{},"body":{"classes/CreateListDto.html":{},"coverage.html":{}}}],["src/lists/dto/update",{"_index":1084,"title":{},"body":{"classes/UpdateListDto.html":{},"coverage.html":{}}}],["src/lists/entities/list.entity",{"_index":571,"title":{},"body":{"interfaces/IPriceDetail.html":{},"classes/User.html":{}}}],["src/lists/entities/list.entity.ts",{"_index":721,"title":{},"body":{"classes/List.html":{},"coverage.html":{}}}],["src/lists/entities/list.entity.ts:11",{"_index":723,"title":{},"body":{"classes/List.html":{}}}],["src/lists/entities/list.entity.ts:18",{"_index":725,"title":{},"body":{"classes/List.html":{}}}],["src/lists/entities/list.entity.ts:24",{"_index":724,"title":{},"body":{"classes/List.html":{}}}],["src/lists/lists.controller.ts",{"_index":729,"title":{},"body":{"controllers/ListsController.html":{},"coverage.html":{}}}],["src/lists/lists.controller.ts:11",{"_index":731,"title":{},"body":{"controllers/ListsController.html":{}}}],["src/lists/lists.controller.ts:16",{"_index":732,"title":{},"body":{"controllers/ListsController.html":{}}}],["src/lists/lists.controller.ts:21",{"_index":733,"title":{},"body":{"controllers/ListsController.html":{}}}],["src/lists/lists.controller.ts:26",{"_index":736,"title":{},"body":{"controllers/ListsController.html":{}}}],["src/lists/lists.controller.ts:31",{"_index":734,"title":{},"body":{"controllers/ListsController.html":{}}}],["src/lists/lists.module.ts",{"_index":748,"title":{},"body":{"modules/ListsModule.html":{}}}],["src/lists/lists.service.ts",{"_index":750,"title":{},"body":{"injectables/ListsService.html":{},"coverage.html":{}}}],["src/lists/lists.service.ts:11",{"_index":752,"title":{},"body":{"injectables/ListsService.html":{}}}],["src/lists/lists.service.ts:15",{"_index":753,"title":{},"body":{"injectables/ListsService.html":{}}}],["src/lists/lists.service.ts:19",{"_index":755,"title":{},"body":{"injectables/ListsService.html":{}}}],["src/lists/lists.service.ts:23",{"_index":754,"title":{},"body":{"injectables/ListsService.html":{}}}],["src/lists/lists.service.ts:7",{"_index":751,"title":{},"body":{"injectables/ListsService.html":{}}}],["src/main.ts",{"_index":1243,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/payments/dto/create",{"_index":382,"title":{},"body":{"classes/CreatePaymentDto.html":{},"coverage.html":{}}}],["src/payments/dto/update",{"_index":1086,"title":{},"body":{"classes/UpdatePaymentDto.html":{},"coverage.html":{}}}],["src/payments/entities/payment.entity",{"_index":1140,"title":{},"body":{"classes/User.html":{}}}],["src/payments/entities/payment.entity.ts",{"_index":777,"title":{},"body":{"classes/Payment.html":{},"coverage.html":{}}}],["src/payments/entities/payment.entity.ts:11",{"_index":778,"title":{},"body":{"classes/Payment.html":{}}}],["src/payments/payments.controller.ts",{"_index":781,"title":{},"body":{"controllers/PaymentsController.html":{},"coverage.html":{}}}],["src/payments/payments.controller.ts:11",{"_index":784,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["src/payments/payments.controller.ts:16",{"_index":785,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["src/payments/payments.controller.ts:21",{"_index":786,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["src/payments/payments.controller.ts:26",{"_index":789,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["src/payments/payments.controller.ts:31",{"_index":787,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["src/payments/payments.module.ts",{"_index":801,"title":{},"body":{"modules/PaymentsModule.html":{}}}],["src/payments/payments.service.ts",{"_index":803,"title":{},"body":{"injectables/PaymentsService.html":{},"coverage.html":{}}}],["src/payments/payments.service.ts:11",{"_index":805,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["src/payments/payments.service.ts:15",{"_index":806,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["src/payments/payments.service.ts:19",{"_index":808,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["src/payments/payments.service.ts:23",{"_index":807,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["src/payments/payments.service.ts:7",{"_index":804,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["src/photos/dto/create",{"_index":385,"title":{},"body":{"classes/CreatePhotoDto.html":{},"coverage.html":{}}}],["src/photos/dto/update",{"_index":1088,"title":{},"body":{"classes/UpdatePhotoDto.html":{},"coverage.html":{}}}],["src/photos/entities/photo.entity",{"_index":573,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["src/photos/entities/photo.entity.ts",{"_index":809,"title":{},"body":{"classes/Photo.html":{},"coverage.html":{}}}],["src/photos/entities/photo.entity.ts:10",{"_index":815,"title":{},"body":{"classes/Photo.html":{}}}],["src/photos/entities/photo.entity.ts:14",{"_index":813,"title":{},"body":{"classes/Photo.html":{}}}],["src/photos/entities/photo.entity.ts:22",{"_index":814,"title":{},"body":{"classes/Photo.html":{}}}],["src/photos/photos.controller.ts",{"_index":819,"title":{},"body":{"controllers/PhotosController.html":{},"coverage.html":{}}}],["src/photos/photos.controller.ts:11",{"_index":821,"title":{},"body":{"controllers/PhotosController.html":{}}}],["src/photos/photos.controller.ts:16",{"_index":822,"title":{},"body":{"controllers/PhotosController.html":{}}}],["src/photos/photos.controller.ts:21",{"_index":823,"title":{},"body":{"controllers/PhotosController.html":{}}}],["src/photos/photos.controller.ts:26",{"_index":826,"title":{},"body":{"controllers/PhotosController.html":{}}}],["src/photos/photos.controller.ts:31",{"_index":824,"title":{},"body":{"controllers/PhotosController.html":{}}}],["src/photos/photos.module.ts",{"_index":838,"title":{},"body":{"modules/PhotosModule.html":{}}}],["src/photos/photos.service.ts",{"_index":840,"title":{},"body":{"injectables/PhotosService.html":{},"coverage.html":{}}}],["src/photos/photos.service.ts:11",{"_index":842,"title":{},"body":{"injectables/PhotosService.html":{}}}],["src/photos/photos.service.ts:15",{"_index":843,"title":{},"body":{"injectables/PhotosService.html":{}}}],["src/photos/photos.service.ts:19",{"_index":845,"title":{},"body":{"injectables/PhotosService.html":{}}}],["src/photos/photos.service.ts:23",{"_index":844,"title":{},"body":{"injectables/PhotosService.html":{}}}],["src/photos/photos.service.ts:7",{"_index":841,"title":{},"body":{"injectables/PhotosService.html":{}}}],["src/reservations/dto/create",{"_index":388,"title":{},"body":{"classes/CreateReservationDto.html":{},"coverage.html":{}}}],["src/reservations/dto/update",{"_index":1090,"title":{},"body":{"classes/UpdateReservationDto.html":{},"coverage.html":{}}}],["src/reservations/entities/reservation.entity",{"_index":226,"title":{},"body":{"classes/Conversation.html":{},"interfaces/IPriceDetail.html":{},"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"classes/User.html":{}}}],["src/reservations/entities/reservation.entity.ts",{"_index":669,"title":{},"body":{"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/reservations/entities/reservation.entity.ts:33",{"_index":878,"title":{},"body":{"classes/Reservation.html":{}}}],["src/reservations/entities/reservation.entity.ts:40",{"_index":875,"title":{},"body":{"classes/Reservation.html":{}}}],["src/reservations/entities/reservation.entity.ts:44",{"_index":874,"title":{},"body":{"classes/Reservation.html":{}}}],["src/reservations/entities/reservation.entity.ts:48",{"_index":880,"title":{},"body":{"classes/Reservation.html":{}}}],["src/reservations/entities/reservation.entity.ts:52",{"_index":872,"title":{},"body":{"classes/Reservation.html":{}}}],["src/reservations/entities/reservation.entity.ts:56",{"_index":873,"title":{},"body":{"classes/Reservation.html":{}}}],["src/reservations/entities/reservation.entity.ts:60",{"_index":877,"title":{},"body":{"classes/Reservation.html":{}}}],["src/reservations/entities/reservation.entity.ts:62",{"_index":881,"title":{},"body":{"classes/Reservation.html":{}}}],["src/reservations/entities/reservation.entity.ts:66",{"_index":882,"title":{},"body":{"classes/Reservation.html":{}}}],["src/reservations/entities/reservation.entity.ts:73",{"_index":883,"title":{},"body":{"classes/Reservation.html":{}}}],["src/reservations/entities/reservation.entity.ts:78",{"_index":869,"title":{},"body":{"classes/Reservation.html":{}}}],["src/reservations/reservations.controller.ts",{"_index":885,"title":{},"body":{"controllers/ReservationsController.html":{},"coverage.html":{}}}],["src/reservations/reservations.controller.ts:11",{"_index":888,"title":{},"body":{"controllers/ReservationsController.html":{}}}],["src/reservations/reservations.controller.ts:16",{"_index":889,"title":{},"body":{"controllers/ReservationsController.html":{}}}],["src/reservations/reservations.controller.ts:21",{"_index":890,"title":{},"body":{"controllers/ReservationsController.html":{}}}],["src/reservations/reservations.controller.ts:26",{"_index":893,"title":{},"body":{"controllers/ReservationsController.html":{}}}],["src/reservations/reservations.controller.ts:31",{"_index":891,"title":{},"body":{"controllers/ReservationsController.html":{}}}],["src/reservations/reservations.module.ts",{"_index":904,"title":{},"body":{"modules/ReservationsModule.html":{}}}],["src/reservations/reservations.service.ts",{"_index":906,"title":{},"body":{"injectables/ReservationsService.html":{},"coverage.html":{}}}],["src/reservations/reservations.service.ts:11",{"_index":908,"title":{},"body":{"injectables/ReservationsService.html":{}}}],["src/reservations/reservations.service.ts:15",{"_index":909,"title":{},"body":{"injectables/ReservationsService.html":{}}}],["src/reservations/reservations.service.ts:19",{"_index":911,"title":{},"body":{"injectables/ReservationsService.html":{}}}],["src/reservations/reservations.service.ts:23",{"_index":910,"title":{},"body":{"injectables/ReservationsService.html":{}}}],["src/reservations/reservations.service.ts:7",{"_index":907,"title":{},"body":{"injectables/ReservationsService.html":{}}}],["src/reviews/dto/create",{"_index":413,"title":{},"body":{"classes/CreateReviewDto.html":{},"coverage.html":{}}}],["src/reviews/dto/update",{"_index":1092,"title":{},"body":{"classes/UpdateReviewDto.html":{},"coverage.html":{}}}],["src/reviews/entities/rating.entity.ts",{"_index":847,"title":{},"body":{"classes/Rating.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/reviews/entities/rating.entity.ts:24",{"_index":853,"title":{},"body":{"classes/Rating.html":{}}}],["src/reviews/entities/rating.entity.ts:28",{"_index":852,"title":{},"body":{"classes/Rating.html":{}}}],["src/reviews/entities/rating.entity.ts:32",{"_index":855,"title":{},"body":{"classes/Rating.html":{}}}],["src/reviews/entities/review.entity",{"_index":575,"title":{},"body":{"interfaces/IPriceDetail.html":{},"classes/User.html":{}}}],["src/reviews/entities/review.entity.ts",{"_index":918,"title":{},"body":{"classes/Review.html":{},"coverage.html":{}}}],["src/reviews/entities/review.entity.ts:13",{"_index":920,"title":{},"body":{"classes/Review.html":{}}}],["src/reviews/entities/review.entity.ts:19",{"_index":922,"title":{},"body":{"classes/Review.html":{}}}],["src/reviews/entities/review.entity.ts:26",{"_index":921,"title":{},"body":{"classes/Review.html":{}}}],["src/reviews/reviews.controller.ts",{"_index":928,"title":{},"body":{"controllers/ReviewsController.html":{},"coverage.html":{}}}],["src/reviews/reviews.controller.ts:11",{"_index":930,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/reviews/reviews.controller.ts:16",{"_index":931,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/reviews/reviews.controller.ts:21",{"_index":932,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/reviews/reviews.controller.ts:26",{"_index":935,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/reviews/reviews.controller.ts:31",{"_index":933,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/reviews/reviews.module.ts",{"_index":947,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["src/reviews/reviews.service.ts",{"_index":949,"title":{},"body":{"injectables/ReviewsService.html":{},"coverage.html":{}}}],["src/reviews/reviews.service.ts:11",{"_index":951,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/reviews.service.ts:15",{"_index":952,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/reviews.service.ts:19",{"_index":954,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/reviews.service.ts:23",{"_index":953,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/reviews.service.ts:7",{"_index":950,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/rooms/dto/create",{"_index":416,"title":{},"body":{"classes/CreateRoomDto.html":{},"coverage.html":{}}}],["src/rooms/dto/reserve",{"_index":912,"title":{},"body":{"classes/ReserveRoomDTO.html":{},"coverage.html":{}}}],["src/rooms/dto/update",{"_index":1094,"title":{},"body":{"classes/UpdateRoomDto.html":{},"coverage.html":{}}}],["src/rooms/entities/amenity.entity.ts",{"_index":6,"title":{},"body":{"classes/Amenity.html":{},"coverage.html":{}}}],["src/rooms/entities/amenity.entity.ts:13",{"_index":26,"title":{},"body":{"classes/Amenity.html":{}}}],["src/rooms/entities/amenity.entity.ts:19",{"_index":32,"title":{},"body":{"classes/Amenity.html":{}}}],["src/rooms/entities/amenity.entity.ts:9",{"_index":28,"title":{},"body":{"classes/Amenity.html":{}}}],["src/rooms/entities/facility.entity.ts",{"_index":553,"title":{},"body":{"classes/Facility.html":{},"coverage.html":{}}}],["src/rooms/entities/facility.entity.ts:13",{"_index":554,"title":{},"body":{"classes/Facility.html":{}}}],["src/rooms/entities/facility.entity.ts:19",{"_index":556,"title":{},"body":{"classes/Facility.html":{}}}],["src/rooms/entities/facility.entity.ts:9",{"_index":555,"title":{},"body":{"classes/Facility.html":{}}}],["src/rooms/entities/room.entity",{"_index":344,"title":{},"body":{"classes/Country.html":{},"classes/Discount.html":{},"interfaces/IReservationConstructor.html":{},"classes/List.html":{},"classes/Photo.html":{},"classes/Reservation.html":{},"classes/Review.html":{},"interfaces/TaxStrategy.html":{},"classes/User.html":{}}}],["src/rooms/entities/room.entity.ts",{"_index":559,"title":{},"body":{"interfaces/IPriceDetail.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/rooms/entities/rule.entity.ts",{"_index":1000,"title":{},"body":{"classes/Rule.html":{},"coverage.html":{}}}],["src/rooms/entities/rule.entity.ts:10",{"_index":1002,"title":{},"body":{"classes/Rule.html":{}}}],["src/rooms/entities/rule.entity.ts:14",{"_index":1001,"title":{},"body":{"classes/Rule.html":{}}}],["src/rooms/entities/rule.entity.ts:20",{"_index":1003,"title":{},"body":{"classes/Rule.html":{}}}],["src/rooms/rooms.controller.ts",{"_index":956,"title":{},"body":{"controllers/RoomsController.html":{},"coverage.html":{}}}],["src/rooms/rooms.controller.ts:22",{"_index":959,"title":{},"body":{"controllers/RoomsController.html":{}}}],["src/rooms/rooms.controller.ts:27",{"_index":960,"title":{},"body":{"controllers/RoomsController.html":{}}}],["src/rooms/rooms.controller.ts:32",{"_index":961,"title":{},"body":{"controllers/RoomsController.html":{}}}],["src/rooms/rooms.controller.ts:37",{"_index":967,"title":{},"body":{"controllers/RoomsController.html":{}}}],["src/rooms/rooms.controller.ts:42",{"_index":962,"title":{},"body":{"controllers/RoomsController.html":{}}}],["src/rooms/rooms.controller.ts:47",{"_index":965,"title":{},"body":{"controllers/RoomsController.html":{}}}],["src/rooms/rooms.module.ts",{"_index":980,"title":{},"body":{"modules/RoomsModule.html":{}}}],["src/rooms/rooms.service.ts",{"_index":984,"title":{},"body":{"injectables/RoomsService.html":{},"coverage.html":{}}}],["src/rooms/rooms.service.ts:12",{"_index":987,"title":{},"body":{"injectables/RoomsService.html":{}}}],["src/rooms/rooms.service.ts:20",{"_index":989,"title":{},"body":{"injectables/RoomsService.html":{}}}],["src/rooms/rooms.service.ts:24",{"_index":990,"title":{},"body":{"injectables/RoomsService.html":{}}}],["src/rooms/rooms.service.ts:28",{"_index":991,"title":{},"body":{"injectables/RoomsService.html":{}}}],["src/rooms/rooms.service.ts:32",{"_index":994,"title":{},"body":{"injectables/RoomsService.html":{}}}],["src/rooms/rooms.service.ts:36",{"_index":992,"title":{},"body":{"injectables/RoomsService.html":{}}}],["src/rooms/rooms.service.ts:40",{"_index":993,"title":{},"body":{"injectables/RoomsService.html":{}}}],["src/todo/dto/create",{"_index":419,"title":{},"body":{"classes/CreateTodoDTO.html":{},"coverage.html":{}}}],["src/todo/dto/update",{"_index":1096,"title":{},"body":{"classes/UpdateTodoDTO.html":{},"coverage.html":{}}}],["src/todo/entities/todo.entity.ts",{"_index":1008,"title":{},"body":{"classes/Todo.html":{},"coverage.html":{}}}],["src/todo/entities/todo.entity.ts:12",{"_index":1010,"title":{},"body":{"classes/Todo.html":{}}}],["src/todo/entities/todo.entity.ts:15",{"_index":1015,"title":{},"body":{"classes/Todo.html":{}}}],["src/todo/entities/todo.entity.ts:18",{"_index":1013,"title":{},"body":{"classes/Todo.html":{}}}],["src/todo/entities/todo.entity.ts:21",{"_index":1012,"title":{},"body":{"classes/Todo.html":{}}}],["src/todo/entities/todo.entity.ts:24",{"_index":1009,"title":{},"body":{"classes/Todo.html":{}}}],["src/todo/entities/todo.entity.ts:27",{"_index":1016,"title":{},"body":{"classes/Todo.html":{}}}],["src/todo/todo.controller.ts",{"_index":1019,"title":{},"body":{"controllers/TodoController.html":{},"coverage.html":{}}}],["src/todo/todo.controller.ts:20",{"_index":1036,"title":{},"body":{"controllers/TodoController.html":{}}}],["src/todo/todo.controller.ts:25",{"_index":1026,"title":{},"body":{"controllers/TodoController.html":{}}}],["src/todo/todo.controller.ts:30",{"_index":1035,"title":{},"body":{"controllers/TodoController.html":{}}}],["src/todo/todo.controller.ts:35",{"_index":1033,"title":{},"body":{"controllers/TodoController.html":{}}}],["src/todo/todo.controller.ts:43",{"_index":1028,"title":{},"body":{"controllers/TodoController.html":{}}}],["src/todo/todo.module.ts",{"_index":1053,"title":{},"body":{"modules/TodoModule.html":{}}}],["src/todo/todo.service.ts",{"_index":1056,"title":{},"body":{"injectables/TodoService.html":{},"coverage.html":{}}}],["src/todo/todo.service.ts:14",{"_index":1067,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/todo/todo.service.ts:18",{"_index":1060,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/todo/todo.service.ts:22",{"_index":1066,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/todo/todo.service.ts:26",{"_index":1064,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/todo/todo.service.ts:34",{"_index":1062,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/todo/todo.service.ts:9",{"_index":1058,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/users/dto/create",{"_index":438,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":1099,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"classes/Conversation.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"injectables/JwtStrategy.html":{},"classes/List.html":{},"classes/Message.html":{},"classes/Payment.html":{},"classes/Reservation.html":{},"classes/Review.html":{},"injectables/RoomsService.html":{}}}],["src/users/entities/user.entity.ts",{"_index":1102,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:100",{"_index":1129,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:105",{"_index":1139,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:117",{"_index":1136,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:25",{"_index":1118,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:29",{"_index":1124,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:33",{"_index":1117,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:37",{"_index":1128,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:41",{"_index":1123,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:45",{"_index":1121,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:49",{"_index":1134,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:53",{"_index":1113,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:57",{"_index":1111,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:64",{"_index":1133,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:70",{"_index":1132,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:76",{"_index":1130,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:82",{"_index":1131,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:88",{"_index":1114,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:94",{"_index":1125,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/varification.entity.ts",{"_index":1207,"title":{},"body":{"classes/Verification.html":{},"coverage.html":{}}}],["src/users/entities/varification.entity.ts:12",{"_index":1214,"title":{},"body":{"classes/Verification.html":{}}}],["src/users/entities/varification.entity.ts:15",{"_index":1215,"title":{},"body":{"classes/Verification.html":{}}}],["src/users/entities/varification.entity.ts:8",{"_index":1210,"title":{},"body":{"classes/Verification.html":{}}}],["src/users/users.controller.ts",{"_index":1166,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:20",{"_index":1169,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:27",{"_index":1170,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:32",{"_index":1171,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:37",{"_index":1173,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:42",{"_index":1172,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":169,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":1185,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/users.service.ts",{"_index":1188,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:15",{"_index":1193,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:25",{"_index":1194,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:29",{"_index":1195,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:33",{"_index":1197,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:40",{"_index":1199,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:44",{"_index":1198,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":1191,"title":{},"body":{"injectables/UsersService.html":{}}}],["star",{"_index":849,"title":{},"body":{"classes/Rating.html":{}}}],["start",{"_index":1318,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1321,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1323,"title":{},"body":{"index.html":{}}}],["startdate",{"_index":449,"title":{},"body":{"classes/DateRange.html":{}}}],["started",{"_index":1297,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1311,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1227,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":684,"title":{},"body":{"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{}}}],["stay",{"_index":1346,"title":{},"body":{"index.html":{}}}],["staydays",{"_index":340,"title":{},"body":{"classes/Country.html":{},"classes/Discount.html":{},"interfaces/DiscountStrategy.html":{},"interfaces/IPriceDetail.html":{},"interfaces/TaxStrategy.html":{},"miscellaneous/variables.html":{}}}],["strategies/jwt.strategy",{"_index":173,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":174,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":712,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":19,"title":{},"body":{"classes/Amenity.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/ConversationsController.html":{},"injectables/ConversationsService.html":{},"controllers/CountriesController.html":{},"classes/CreateTodoDTO.html":{},"classes/CreateUserDto.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"classes/Facility.html":{},"interfaces/IPriceDetail.html":{},"classes/List.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"classes/Photo.html":{},"controllers/PhotosController.html":{},"injectables/PhotosService.html":{},"controllers/ReservationsController.html":{},"injectables/ReservationsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"classes/Rule.html":{},"classes/Todo.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Verification.html":{}}}],["sub",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["super",{"_index":694,"title":{},"body":{"interfaces/IReservationConstructor.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Reservation.html":{}}}],["support",{"_index":1337,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1357,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1281,"title":{},"body":{"dependencies.html":{}}}],["switzerland",{"_index":361,"title":{},"body":{"classes/Country.html":{},"interfaces/TaxStrategy.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["system",{"_index":662,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["t1",{"_index":462,"title":{},"body":{"classes/DateRange.html":{},"miscellaneous/variables.html":{}}}],["t2",{"_index":460,"title":{},"body":{"classes/DateRange.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":1250,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1249,"title":{},"body":{"coverage.html":{}}}],["tax",{"_index":364,"title":{},"body":{"classes/Country.html":{}}}],["tax.amount",{"_index":369,"title":{},"body":{"classes/Country.html":{}}}],["tax.percent",{"_index":367,"title":{},"body":{"classes/Country.html":{}}}],["taxfee",{"_index":564,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["taxstrategies",{"_index":345,"title":{},"body":{"classes/Country.html":{},"interfaces/TaxStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["taxstrategies[this.name].calculatetax(room",{"_index":365,"title":{},"body":{"classes/Country.html":{}}}],["taxstrategy",{"_index":346,"title":{"interfaces/TaxStrategy.html":{}},"body":{"classes/Country.html":{},"interfaces/TaxStrategy.html":{},"coverage.html":{}}}],["test",{"_index":1326,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1329,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1328,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1325,"title":{},"body":{"index.html":{}}}],["text",{"_index":22,"title":{},"body":{"classes/Amenity.html":{},"classes/Facility.html":{},"interfaces/IPriceDetail.html":{},"classes/Message.html":{},"classes/Rule.html":{}}}],["thanks",{"_index":1335,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":102,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.getuserbypayload(payload",{"_index":720,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.authservice.login(req.user",{"_index":97,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.validateuser(email",{"_index":766,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.calculatediscountfee(accommodationfee",{"_index":648,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["this.calculatepriceindetail(staydays",{"_index":644,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["this.calculateservicefee",{"_index":650,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["this.calculatetaxfee(servicefee",{"_index":651,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["this.calculatetotalprice",{"_index":631,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["this.checkin",{"_index":699,"title":{},"body":{"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{}}}],["this.checkout",{"_index":410,"title":{},"body":{"classes/CreateReservationDto.html":{},"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{}}}],["this.cleaningfee",{"_index":649,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["this.code",{"_index":1223,"title":{},"body":{"classes/Verification.html":{}}}],["this.contryrepository.delete(id",{"_index":330,"title":{},"body":{"injectables/CountriesService.html":{}}}],["this.contryrepository.find",{"_index":329,"title":{},"body":{"injectables/CountriesService.html":{}}}],["this.contryrepository.save(createcountrydto",{"_index":328,"title":{},"body":{"injectables/CountriesService.html":{}}}],["this.conversationsservice.create(createconversationdto",{"_index":269,"title":{},"body":{"controllers/ConversationsController.html":{}}}],["this.conversationsservice.findall",{"_index":270,"title":{},"body":{"controllers/ConversationsController.html":{}}}],["this.conversationsservice.findone(+id",{"_index":272,"title":{},"body":{"controllers/ConversationsController.html":{}}}],["this.conversationsservice.remove(+id",{"_index":276,"title":{},"body":{"controllers/ConversationsController.html":{}}}],["this.conversationsservice.update(+id",{"_index":274,"title":{},"body":{"controllers/ConversationsController.html":{}}}],["this.countriesservice.create(createcountrydto",{"_index":308,"title":{},"body":{"controllers/CountriesController.html":{}}}],["this.countriesservice.findall",{"_index":309,"title":{},"body":{"controllers/CountriesController.html":{}}}],["this.countriesservice.remove(+id",{"_index":310,"title":{},"body":{"controllers/CountriesController.html":{}}}],["this.country",{"_index":666,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["this.country.calculatetax(this",{"_index":667,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["this.discounts",{"_index":652,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["this.discountsservice.create(creatediscountdto",{"_index":537,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["this.discountsservice.findall",{"_index":538,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["this.discountsservice.findone(+id",{"_index":539,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["this.discountsservice.remove(+id",{"_index":541,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["this.discountsservice.update(+id",{"_index":540,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["this.enddate",{"_index":482,"title":{},"body":{"classes/DateRange.html":{}}}],["this.enddate.gettime",{"_index":512,"title":{},"body":{"classes/Discount.html":{}}}],["this.guestcnt",{"_index":698,"title":{},"body":{"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{}}}],["this.guests",{"_index":697,"title":{},"body":{"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{}}}],["this.isaccommodable(reservation.getstayterm",{"_index":629,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["this.jwtservice.sign(payload",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.listsservice.create(createlistdto",{"_index":741,"title":{},"body":{"controllers/ListsController.html":{}}}],["this.listsservice.findall",{"_index":742,"title":{},"body":{"controllers/ListsController.html":{}}}],["this.listsservice.findone(+id",{"_index":743,"title":{},"body":{"controllers/ListsController.html":{}}}],["this.listsservice.remove(+id",{"_index":745,"title":{},"body":{"controllers/ListsController.html":{}}}],["this.listsservice.update(+id",{"_index":744,"title":{},"body":{"controllers/ListsController.html":{}}}],["this.password",{"_index":1157,"title":{},"body":{"classes/User.html":{}}}],["this.paymentsservice.create(createpaymentdto",{"_index":794,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["this.paymentsservice.findall",{"_index":795,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["this.paymentsservice.findone(+id",{"_index":796,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["this.paymentsservice.remove(+id",{"_index":798,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["this.paymentsservice.update(+id",{"_index":797,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["this.photosservice.create(createphotodto",{"_index":831,"title":{},"body":{"controllers/PhotosController.html":{}}}],["this.photosservice.findall",{"_index":832,"title":{},"body":{"controllers/PhotosController.html":{}}}],["this.photosservice.findone(+id",{"_index":833,"title":{},"body":{"controllers/PhotosController.html":{}}}],["this.photosservice.remove(+id",{"_index":835,"title":{},"body":{"controllers/PhotosController.html":{}}}],["this.photosservice.update(+id",{"_index":834,"title":{},"body":{"controllers/PhotosController.html":{}}}],["this.price",{"_index":647,"title":{},"body":{"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{}}}],["this.reservationrepository.create(reservation",{"_index":999,"title":{},"body":{"injectables/RoomsService.html":{}}}],["this.reservationsservice.create(createreservationdto",{"_index":897,"title":{},"body":{"controllers/ReservationsController.html":{}}}],["this.reservationsservice.findall",{"_index":898,"title":{},"body":{"controllers/ReservationsController.html":{}}}],["this.reservationsservice.findone(+id",{"_index":899,"title":{},"body":{"controllers/ReservationsController.html":{}}}],["this.reservationsservice.remove(+id",{"_index":901,"title":{},"body":{"controllers/ReservationsController.html":{}}}],["this.reservationsservice.update(+id",{"_index":900,"title":{},"body":{"controllers/ReservationsController.html":{}}}],["this.reservatons",{"_index":636,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["this.reviewsservice.create(createreviewdto",{"_index":940,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.reviewsservice.findall",{"_index":941,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.reviewsservice.findone(+id",{"_index":942,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.reviewsservice.remove(+id",{"_index":944,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.reviewsservice.update(+id",{"_index":943,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.room",{"_index":696,"title":{},"body":{"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{}}}],["this.roomrepository.findone(roomid",{"_index":997,"title":{},"body":{"injectables/RoomsService.html":{}}}],["this.roomsservice.create(createroomdto",{"_index":971,"title":{},"body":{"controllers/RoomsController.html":{}}}],["this.roomsservice.findall",{"_index":972,"title":{},"body":{"controllers/RoomsController.html":{}}}],["this.roomsservice.findone(+id",{"_index":973,"title":{},"body":{"controllers/RoomsController.html":{}}}],["this.roomsservice.remove(+id",{"_index":975,"title":{},"body":{"controllers/RoomsController.html":{}}}],["this.roomsservice.reserve(roomid",{"_index":977,"title":{},"body":{"controllers/RoomsController.html":{}}}],["this.roomsservice.update(+id",{"_index":974,"title":{},"body":{"controllers/RoomsController.html":{}}}],["this.startdate",{"_index":481,"title":{},"body":{"classes/DateRange.html":{}}}],["this.startdate.gettime",{"_index":483,"title":{},"body":{"classes/DateRange.html":{}}}],["this.status",{"_index":690,"title":{},"body":{"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{}}}],["this.todorepository.delete",{"_index":1076,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.todorepository.find",{"_index":1069,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.todorepository.findone",{"_index":1071,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.todorepository.save(createtododto",{"_index":1070,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.todorepository.save(todo",{"_index":1075,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.todoservice.createtodo(createtododto",{"_index":1045,"title":{},"body":{"controllers/TodoController.html":{}}}],["this.todoservice.deletetodo(todoid",{"_index":1050,"title":{},"body":{"controllers/TodoController.html":{}}}],["this.todoservice.edittodo(todoid",{"_index":1048,"title":{},"body":{"controllers/TodoController.html":{}}}],["this.todoservice.findbyid(todoid",{"_index":1047,"title":{},"body":{"controllers/TodoController.html":{}}}],["this.todoservice.gettodolist",{"_index":1043,"title":{},"body":{"controllers/TodoController.html":{}}}],["this.userrepository.create(createuserdto",{"_index":1203,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.find",{"_index":1205,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findone",{"_index":1202,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.save(user",{"_index":1204,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":1177,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":1178,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(+id",{"_index":1179,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(payload.sub",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findonebyemail(email",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.remove(+id",{"_index":1181,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(+id",{"_index":1180,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.validatereservation(reservation",{"_index":627,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["throw",{"_index":630,"title":{},"body":{"interfaces/IPriceDetail.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["title",{"_index":599,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["todo",{"_index":659,"title":{"classes/Todo.html":{}},"body":{"interfaces/IPriceDetail.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"coverage.html":{}}}],["todo.controller",{"_index":1054,"title":{},"body":{"modules/TodoModule.html":{}}}],["todo.dto",{"_index":1038,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{},"classes/UpdateTodoDTO.html":{}}}],["todo.dto.ts",{"_index":420,"title":{},"body":{"classes/CreateTodoDTO.html":{},"classes/UpdateTodoDTO.html":{},"coverage.html":{}}}],["todo.dto.ts:11",{"_index":429,"title":{},"body":{"classes/CreateTodoDTO.html":{}}}],["todo.dto.ts:15",{"_index":426,"title":{},"body":{"classes/CreateTodoDTO.html":{}}}],["todo.dto.ts:6",{"_index":432,"title":{},"body":{"classes/CreateTodoDTO.html":{}}}],["todo.service",{"_index":1041,"title":{},"body":{"controllers/TodoController.html":{},"modules/TodoModule.html":{}}}],["todo/todo.module",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["todo[key",{"_index":1073,"title":{},"body":{"injectables/TodoService.html":{}}}],["todocontroller",{"_index":1018,"title":{"controllers/TodoController.html":{}},"body":{"controllers/TodoController.html":{},"modules/TodoModule.html":{},"coverage.html":{}}}],["todoid",{"_index":1029,"title":{},"body":{"controllers/TodoController.html":{}}}],["todomodule",{"_index":125,"title":{"modules/TodoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TodoModule.html":{},"modules.html":{},"overview.html":{}}}],["todorepository",{"_index":1059,"title":{},"body":{"injectables/TodoService.html":{}}}],["todoservice",{"_index":1040,"title":{"injectables/TodoService.html":{}},"body":{"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"coverage.html":{},"overview.html":{}}}],["totalprice",{"_index":565,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["touch",{"_index":1347,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":1264,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":52,"title":{},"body":{"classes/Amenity.html":{},"modules/AppModule.html":{},"classes/Discount.html":{},"interfaces/DiscountStrategy.html":{},"classes/Facility.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"classes/Photo.html":{},"classes/Reservation.html":{},"classes/Rule.html":{},"classes/Todo.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["true})@isdate",{"_index":489,"title":{},"body":{"classes/Discount.html":{}}}],["true})@isemail",{"_index":1116,"title":{},"body":{"classes/User.html":{}}}],["true})@isenum(reservationstatus",{"_index":879,"title":{},"body":{"classes/Reservation.html":{}}}],["true})@isint",{"_index":492,"title":{},"body":{"classes/Discount.html":{}}}],["true})@isstring",{"_index":24,"title":{},"body":{"classes/Amenity.html":{},"classes/Facility.html":{},"classes/Photo.html":{},"classes/Rule.html":{},"classes/User.html":{}}}],["try",{"_index":1158,"title":{},"body":{"classes/User.html":{}}}],["twitter",{"_index":1353,"title":{},"body":{"index.html":{}}}],["type",{"_index":17,"title":{},"body":{"classes/Amenity.html":{},"injectables/AuthService.html":{},"classes/Conversation.html":{},"controllers/ConversationsController.html":{},"injectables/ConversationsService.html":{},"classes/CoreEntity.html":{},"controllers/CountriesController.html":{},"injectables/CountriesService.html":{},"classes/Country.html":{},"classes/CreateCountryDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateTodoDTO.html":{},"classes/CreateUserDto.html":{},"classes/DateRange.html":{},"classes/Discount.html":{},"interfaces/DiscountStrategy.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"classes/Facility.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"injectables/JwtStrategy.html":{},"classes/List.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"classes/Payment.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"classes/Photo.html":{},"controllers/PhotosController.html":{},"injectables/PhotosService.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"controllers/ReservationsController.html":{},"injectables/ReservationsService.html":{},"classes/ReserveRoomDTO.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"classes/Rule.html":{},"interfaces/TaxStrategy.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Verification.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":49,"title":{},"body":{"classes/Amenity.html":{},"classes/Conversation.html":{},"classes/CoreEntity.html":{},"injectables/CountriesService.html":{},"classes/Country.html":{},"classes/Discount.html":{},"classes/Facility.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"classes/List.html":{},"classes/Message.html":{},"classes/Payment.html":{},"classes/Photo.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"classes/Review.html":{},"injectables/RoomsService.html":{},"classes/Rule.html":{},"classes/Todo.html":{},"injectables/TodoService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/Verification.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/CountriesModule.html":{},"modules/RoomsModule.html":{},"modules/TodoModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([country",{"_index":317,"title":{},"body":{"modules/CountriesModule.html":{}}}],["typeormmodule.forfeature([room",{"_index":983,"title":{},"body":{"modules/RoomsModule.html":{}}}],["typeormmodule.forfeature([todo",{"_index":1055,"title":{},"body":{"modules/TodoModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":1187,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forroot",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":1080,"title":{},"body":{"classes/UpdateConversationDto.html":{},"classes/UpdateDiscountDto.html":{},"classes/UpdateListDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePhotoDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":1310,"title":{},"body":{"index.html":{}}}],["ui",{"_index":1282,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":762,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":31,"title":{},"body":{"classes/Amenity.html":{},"classes/Conversation.html":{},"classes/Country.html":{},"classes/Discount.html":{},"classes/Facility.html":{},"classes/List.html":{},"classes/Message.html":{},"classes/Payment.html":{},"classes/Photo.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"classes/Review.html":{},"controllers/RoomsController.html":{},"classes/Rule.html":{},"classes/User.html":{}}}],["undefined)@jointable",{"_index":222,"title":{},"body":{"classes/Conversation.html":{},"classes/List.html":{},"classes/Reservation.html":{}}}],["undefined})@isdate",{"_index":1122,"title":{},"body":{"classes/User.html":{}}}],["unique",{"_index":1146,"title":{},"body":{"classes/User.html":{}}}],["uniquespace",{"_index":587,"title":{},"body":{"interfaces/IPriceDetail.html":{},"miscellaneous/enumerations.html":{}}}],["unit",{"_index":1324,"title":{},"body":{"index.html":{}}}],["update",{"_index":242,"title":{},"body":{"controllers/ConversationsController.html":{},"injectables/ConversationsService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/PhotosController.html":{},"injectables/PhotosService.html":{},"controllers/ReservationsController.html":{},"injectables/ReservationsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@param('id",{"_index":273,"title":{},"body":{"controllers/ConversationsController.html":{},"controllers/DiscountsController.html":{},"controllers/ListsController.html":{},"controllers/PaymentsController.html":{},"controllers/PhotosController.html":{},"controllers/ReservationsController.html":{},"controllers/ReviewsController.html":{},"controllers/RoomsController.html":{},"controllers/UsersController.html":{}}}],["update(id",{"_index":253,"title":{},"body":{"controllers/ConversationsController.html":{},"injectables/ConversationsService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/PhotosController.html":{},"injectables/PhotosService.html":{},"controllers/ReservationsController.html":{},"injectables/ReservationsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateconversationdto",{"_index":254,"title":{"classes/UpdateConversationDto.html":{}},"body":{"controllers/ConversationsController.html":{},"injectables/ConversationsService.html":{},"classes/UpdateConversationDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":16,"title":{},"body":{"classes/Amenity.html":{},"classes/Conversation.html":{},"classes/CoreEntity.html":{},"classes/Country.html":{},"classes/Discount.html":{},"classes/Facility.html":{},"classes/List.html":{},"classes/Message.html":{},"classes/Payment.html":{},"classes/Photo.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"classes/Review.html":{},"classes/Rule.html":{},"classes/Todo.html":{},"classes/User.html":{},"classes/Verification.html":{}}}],["updatedatecolumn",{"_index":40,"title":{},"body":{"classes/Amenity.html":{},"classes/Conversation.html":{},"classes/CoreEntity.html":{},"classes/Country.html":{},"classes/Discount.html":{},"classes/Facility.html":{},"classes/List.html":{},"classes/Message.html":{},"classes/Payment.html":{},"classes/Photo.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"classes/Review.html":{},"classes/Rule.html":{},"classes/Todo.html":{},"classes/User.html":{},"classes/Verification.html":{}}}],["updatediscountdto",{"_index":531,"title":{"classes/UpdateDiscountDto.html":{}},"body":{"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"classes/UpdateDiscountDto.html":{},"coverage.html":{}}}],["updatelistdto",{"_index":735,"title":{"classes/UpdateListDto.html":{}},"body":{"controllers/ListsController.html":{},"injectables/ListsService.html":{},"classes/UpdateListDto.html":{},"coverage.html":{}}}],["updatepaymentdto",{"_index":788,"title":{"classes/UpdatePaymentDto.html":{}},"body":{"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"classes/UpdatePaymentDto.html":{},"coverage.html":{}}}],["updatephotodto",{"_index":825,"title":{"classes/UpdatePhotoDto.html":{}},"body":{"controllers/PhotosController.html":{},"injectables/PhotosService.html":{},"classes/UpdatePhotoDto.html":{},"coverage.html":{}}}],["updatereservationdto",{"_index":892,"title":{"classes/UpdateReservationDto.html":{}},"body":{"controllers/ReservationsController.html":{},"injectables/ReservationsService.html":{},"classes/UpdateReservationDto.html":{},"coverage.html":{}}}],["updatereviewdto",{"_index":934,"title":{"classes/UpdateReviewDto.html":{}},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/UpdateReviewDto.html":{},"coverage.html":{}}}],["updateroomdto",{"_index":966,"title":{"classes/UpdateRoomDto.html":{}},"body":{"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"classes/UpdateRoomDto.html":{},"coverage.html":{}}}],["updates",{"_index":290,"title":{},"body":{"injectables/ConversationsService.html":{},"injectables/DiscountsService.html":{},"injectables/ListsService.html":{},"injectables/PaymentsService.html":{},"injectables/PhotosService.html":{},"injectables/ReservationsService.html":{},"injectables/ReviewsService.html":{},"injectables/RoomsService.html":{},"injectables/UsersService.html":{}}}],["updatetododto",{"_index":1031,"title":{"classes/UpdateTodoDTO.html":{}},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{},"classes/UpdateTodoDTO.html":{},"coverage.html":{}}}],["updatetododto[key",{"_index":1074,"title":{},"body":{"injectables/TodoService.html":{}}}],["updateuserdto",{"_index":1098,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["url",{"_index":811,"title":{},"body":{"classes/Photo.html":{}}}],["useguards",{"_index":79,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(jwtauthguard",{"_index":98,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(jwtauthguard)@get('profile",{"_index":69,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(localauthguard",{"_index":93,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(localauthguard)@post('auth/login",{"_index":75,"title":{},"body":{"controllers/AppController.html":{}}}],["user",{"_index":195,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"classes/Conversation.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"injectables/JwtStrategy.html":{},"classes/List.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"classes/Payment.html":{},"classes/Reservation.html":{},"classes/Review.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Verification.html":{},"coverage.html":{}}}],["user.checkpassword(password",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.conversations",{"_index":232,"title":{},"body":{"classes/Conversation.html":{}}}],["user.dto",{"_index":1100,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":439,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":443,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:14",{"_index":446,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":444,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:8",{"_index":445,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.entity",{"_index":1218,"title":{},"body":{"classes/Verification.html":{}}}],["user.id",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.messages",{"_index":774,"title":{},"body":{"classes/Message.html":{}}}],["user.payments",{"_index":779,"title":{},"body":{"classes/Payment.html":{}}}],["user.reservations",{"_index":681,"title":{},"body":{"interfaces/IReservationConstructor.html":{},"classes/Reservation.html":{}}}],["user.reviews",{"_index":924,"title":{},"body":{"classes/Review.html":{}}}],["user.rooms",{"_index":590,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["user.savelists",{"_index":727,"title":{},"body":{"classes/List.html":{}}}],["usernamefield",{"_index":764,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userrepository",{"_index":1192,"title":{},"body":{"injectables/UsersService.html":{}}}],["users",{"_index":1167,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":1186,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":1174,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":1165,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":126,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":186,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["uuid",{"_index":1221,"title":{},"body":{"classes/Verification.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":1220,"title":{},"body":{"classes/Verification.html":{}}}],["v4",{"_index":1219,"title":{},"body":{"classes/Verification.html":{}}}],["validate",{"_index":705,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(email",{"_index":760,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":708,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validatereservation(reservation",{"_index":628,"title":{},"body":{"interfaces/IPriceDetail.html":{}}}],["validateuser",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":44,"title":{},"body":{"classes/Amenity.html":{},"classes/Country.html":{},"classes/CreateCountryDto.html":{},"classes/CreateTodoDTO.html":{},"classes/CreateUserDto.html":{},"classes/Discount.html":{},"classes/Facility.html":{},"interfaces/IPriceDetail.html":{},"interfaces/IReservationConstructor.html":{},"classes/List.html":{},"classes/Photo.html":{},"classes/Rating.html":{},"classes/Reservation.html":{},"classes/Rule.html":{},"classes/UpdateTodoDTO.html":{},"classes/User.html":{},"dependencies.html":{}}}],["value",{"_index":1293,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1232,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1364,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verification",{"_index":1206,"title":{"classes/Verification.html":{}},"body":{"classes/Verification.html":{},"coverage.html":{}}}],["verified",{"_index":1108,"title":{},"body":{"classes/User.html":{}}}],["void",{"_index":1216,"title":{},"body":{"classes/Verification.html":{}}}],["watch",{"_index":1319,"title":{},"body":{"index.html":{}}}],["website",{"_index":1351,"title":{},"body":{"index.html":{}}}],["week",{"_index":506,"title":{},"body":{"classes/Discount.html":{},"interfaces/DiscountStrategy.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["world",{"_index":157,"title":{},"body":{"injectables/AppService.html":{}}}],["yes",{"_index":870,"title":{},"body":{"classes/Reservation.html":{}}}],["you'd",{"_index":1340,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConversationsModule.html":{},"modules/CountriesModule.html":{},"modules/DiscountsModule.html":{},"modules/ListsModule.html":{},"modules/PaymentsModule.html":{},"modules/PhotosModule.html":{},"modules/ReservationsModule.html":{},"modules/ReviewsModule.html":{},"modules/RoomsModule.html":{},"modules/TodoModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Amenity.html":{"url":"classes/Amenity.html","title":"class - Amenity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Amenity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rooms/entities/amenity.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CoreEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                rooms\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'text', nullable: true})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/rooms/entities/amenity.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/rooms/entities/amenity.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rooms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Room[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/rooms/entities/amenity.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:15\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\nimport { CoreEntity } from 'src/common/entities/core.entity';\nimport { Column, Entity, ManyToMany } from 'typeorm';\nimport { Room } from './room.entity';\n@Entity()\nexport class Amenity extends CoreEntity {\n  @Column()\n  @IsString()\n  name: string;\n\n  @Column({ type: 'text', nullable: true })\n  @IsString()\n  description: string;\n\n  @ManyToMany(\n    type => Room,\n    room => room.amenities,\n  )\n  rooms: Room[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                getProfile\n                            \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \ngetProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('auth/login')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Request, UseGuards } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { AuthService } from './auth/auth.service';\nimport { JwtAuthGuard } from './auth/guards/jwt-auth.guard';\nimport { LocalAuthGuard } from './auth/guards/local-auth.guard';\n\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private readonly authService: AuthService,\n  ) {}\n\n  @UseGuards(LocalAuthGuard)\n  @Post('auth/login')\n  async login(@Request() req) {\n    return this.authService.login(req.user);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('profile')\n  getProfile(@Request() req) {\n    return req.user;\n  }\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConversationsModule\n\nConversationsModule\n\nAppModule -->\n\nConversationsModule->AppModule\n\n\n\n\n\nCountriesModule\n\nCountriesModule\n\nAppModule -->\n\nCountriesModule->AppModule\n\n\n\n\n\nDiscountsModule\n\nDiscountsModule\n\nAppModule -->\n\nDiscountsModule->AppModule\n\n\n\n\n\nListsModule\n\nListsModule\n\nAppModule -->\n\nListsModule->AppModule\n\n\n\n\n\nPaymentsModule\n\nPaymentsModule\n\nAppModule -->\n\nPaymentsModule->AppModule\n\n\n\n\n\nPhotosModule\n\nPhotosModule\n\nAppModule -->\n\nPhotosModule->AppModule\n\n\n\n\n\nReservationsModule\n\nReservationsModule\n\nAppModule -->\n\nReservationsModule->AppModule\n\n\n\n\n\nReviewsModule\n\nReviewsModule\n\nAppModule -->\n\nReviewsModule->AppModule\n\n\n\n\n\nRoomsModule\n\nRoomsModule\n\nAppModule -->\n\nRoomsModule->AppModule\n\n\n\n\n\nTodoModule\n\nTodoModule\n\nAppModule -->\n\nTodoModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ConversationsModule\n                        \n                        \n                            CountriesModule\n                        \n                        \n                            DiscountsModule\n                        \n                        \n                            ListsModule\n                        \n                        \n                            PaymentsModule\n                        \n                        \n                            PhotosModule\n                        \n                        \n                            ReservationsModule\n                        \n                        \n                            ReviewsModule\n                        \n                        \n                            RoomsModule\n                        \n                        \n                            TodoModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TodoModule } from './todo/todo.module';\nimport { UsersModule } from './users/users.module';\nimport { RoomsModule } from './rooms/rooms.module';\nimport { ReservationsModule } from './reservations/reservations.module';\nimport { ReviewsModule } from './reviews/reviews.module';\nimport { ConversationsModule } from './conversations/conversations.module';\nimport { PaymentsModule } from './payments/payments.module';\nimport { ListsModule } from './lists/lists.module';\nimport { PhotosModule } from './photos/photos.module';\nimport { AuthModule } from './auth/auth.module';\nimport { DiscountsModule } from './discounts/discounts.module';\nimport { CountriesModule } from './countries/countries.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ isGlobal: true }),\n    TypeOrmModule.forRoot(),\n    TodoModule,\n    UsersModule,\n    RoomsModule,\n    ReservationsModule,\n    ReviewsModule,\n    ConversationsModule,\n    PaymentsModule,\n    ListsModule,\n    PhotosModule,\n    CountriesModule,\n    DiscountsModule,\n    AuthModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { UsersModule } from 'src/users/users.module';\nimport { AuthService } from './auth.service';\nimport { jwtConstants } from './constants';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { LocalStrategy } from './strategies/local.strategy';\n\n@Module({\n  imports: [\n    UsersModule,\n    PassportModule,\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '30 days' },\n    }),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserByPayload\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserByPayload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByPayload(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { User } from 'src/users/entities/user.entity';\nimport { UsersService } from 'src/users/users.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n  ) {}\n\n  async validateUser(email: string, password: string): Promise {\n    const user = await this.usersService.findOneByEmail(email);\n\n    if (user && (await user.checkPassword(password))) {\n      const { password, ...result } = user;\n      return result;\n    }\n    return null;\n  }\n\n  async login(user: any) {\n    const payload = { email: user.email, sub: user.id };\n    return {\n      access_token: this.jwtService.sign(payload),\n    };\n  }\n\n  async getUserByPayload(payload: any): Promise {\n    return await this.usersService.findOne(payload.sub);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Conversation.html":{"url":"classes/Conversation.html","title":"class - Conversation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Conversation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/conversations/entities/conversation.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CoreEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                messages\n                            \n                            \n                                participants\n                            \n                            \n                                reservation\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Message[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/conversations/entities/conversation.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            participants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany(undefined, undefined)@JoinTable()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/conversations/entities/conversation.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reservation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Reservation\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined)@JoinTable()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/conversations/entities/conversation.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:15\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CoreEntity } from 'src/common/entities/core.entity';\nimport { Reservation } from 'src/reservations/entities/reservation.entity';\nimport { User } from 'src/users/entities/user.entity';\nimport { Entity, JoinTable, ManyToMany, OneToMany, OneToOne } from 'typeorm';\nimport { Message } from './message.entity';\n\n@Entity()\nexport class Conversation extends CoreEntity {\n  @OneToOne(type => Reservation)\n  @JoinTable()\n  reservation: Reservation;\n\n  @ManyToMany(\n    type => User,\n    user => user.conversations,\n  )\n  @JoinTable()\n  participants: User[];\n\n  @OneToMany(\n    type => Message,\n    message => message.conversation,\n  )\n  messages: Message[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ConversationsController.html":{"url":"controllers/ConversationsController.html","title":"controller - ConversationsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ConversationsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/conversations/conversations.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                conversations\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createConversationDto: CreateConversationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/conversations/conversations.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createConversationDto\n                                    \n                                                CreateConversationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/conversations/conversations.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/conversations/conversations.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/conversations/conversations.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateConversationDto: UpdateConversationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/conversations/conversations.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateConversationDto\n                                    \n                                                UpdateConversationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Put, Param, Delete } from '@nestjs/common';\nimport { ConversationsService } from './conversations.service';\nimport { CreateConversationDto } from './dto/create-conversation.dto';\nimport { UpdateConversationDto } from './dto/update-conversation.dto';\n\n@Controller('conversations')\nexport class ConversationsController {\n  constructor(private readonly conversationsService: ConversationsService) {}\n\n  @Post()\n  create(@Body() createConversationDto: CreateConversationDto) {\n    return this.conversationsService.create(createConversationDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.conversationsService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.conversationsService.findOne(+id);\n  }\n\n  @Put(':id')\n  update(@Param('id') id: string, @Body() updateConversationDto: UpdateConversationDto) {\n    return this.conversationsService.update(+id, updateConversationDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.conversationsService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConversationsModule.html":{"url":"modules/ConversationsModule.html","title":"module - ConversationsModule","body":"\n                   \n\n\n\n\n    Modules\n    ConversationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConversationsModule\n\n\n\ncluster_ConversationsModule_providers\n\n\n\n\nConversationsService\n\nConversationsService\n\n\n\nConversationsModule\n\nConversationsModule\n\nConversationsModule -->\n\nConversationsService->ConversationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/conversations/conversations.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConversationsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ConversationsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConversationsService } from './conversations.service';\nimport { ConversationsController } from './conversations.controller';\n\n@Module({\n  controllers: [ConversationsController],\n  providers: [ConversationsService]\n})\nexport class ConversationsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConversationsService.html":{"url":"injectables/ConversationsService.html","title":"injectable - ConversationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConversationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/conversations/conversations.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createConversationDto: CreateConversationDto)\n                \n            \n\n\n            \n                \n                    Defined in src/conversations/conversations.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createConversationDto\n                                    \n                                                CreateConversationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/conversations/conversations.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/conversations/conversations.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/conversations/conversations.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateConversationDto: UpdateConversationDto)\n                \n            \n\n\n            \n                \n                    Defined in src/conversations/conversations.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateConversationDto\n                                    \n                                                UpdateConversationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateConversationDto } from './dto/create-conversation.dto';\nimport { UpdateConversationDto } from './dto/update-conversation.dto';\n\n@Injectable()\nexport class ConversationsService {\n  create(createConversationDto: CreateConversationDto) {\n    return 'This action adds a new conversation';\n  }\n\n  findAll() {\n    return `This action returns all conversations`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} conversation`;\n  }\n\n  update(id: number, updateConversationDto: UpdateConversationDto) {\n    return `This action updates a #${id} conversation`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} conversation`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CoreEntity.html":{"url":"classes/CoreEntity.html","title":"class - CoreEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CoreEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/entities/core.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/common/entities/core.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/common/entities/core.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/common/entities/core.entity.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CreateDateColumn,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\nexport class CoreEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CountriesController.html":{"url":"controllers/CountriesController.html","title":"controller - CountriesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CountriesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/countries/countries.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                countries\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createCountryDto: CreateCountryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/countries/countries.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCountryDto\n                                    \n                                                CreateCountryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/countries/countries.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/countries/countries.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Delete } from '@nestjs/common';\nimport { CountriesService } from './countries.service';\nimport { CreateCountryDto } from './dto/create-country.dto';\n\n@Controller('countries')\nexport class CountriesController {\n  constructor(private readonly countriesService: CountriesService) {}\n\n  @Post()\n  create(@Body() createCountryDto: CreateCountryDto) {\n    return this.countriesService.create(createCountryDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.countriesService.findAll();\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.countriesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CountriesModule.html":{"url":"modules/CountriesModule.html","title":"module - CountriesModule","body":"\n                   \n\n\n\n\n    Modules\n    CountriesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CountriesModule\n\n\n\ncluster_CountriesModule_providers\n\n\n\n\nCountriesService\n\nCountriesService\n\n\n\nCountriesModule\n\nCountriesModule\n\nCountriesModule -->\n\nCountriesService->CountriesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/countries/countries.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CountriesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CountriesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CountriesService } from './countries.service';\nimport { CountriesController } from './countries.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Country } from './entities/country.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Country])],\n  controllers: [CountriesController],\n  providers: [CountriesService],\n})\nexport class CountriesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CountriesService.html":{"url":"injectables/CountriesService.html","title":"injectable - CountriesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CountriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/countries/countries.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(contryRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/countries/countries.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        contryRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCountryDto: CreateCountryDto)\n                \n            \n\n\n            \n                \n                    Defined in src/countries/countries.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCountryDto\n                                    \n                                                CreateCountryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/countries/countries.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/countries/countries.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateCountryDto } from './dto/create-country.dto';\nimport { Country } from './entities/country.entity';\n\n@Injectable()\nexport class CountriesService {\n  constructor(\n    @InjectRepository(Country)\n    private readonly contryRepository: Repository,\n  ) {}\n\n  async create(createCountryDto: CreateCountryDto) {\n    return await this.contryRepository.save(createCountryDto);\n  }\n\n  async findAll() {\n    return await this.contryRepository.find();\n  }\n\n  async remove(id: number) {\n    return await this.contryRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Country.html":{"url":"classes/Country.html","title":"class - Country","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Country\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/countries/entities/country.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CoreEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                rooms\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateTax\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CountryName\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'enum', enum: CountryName})@IsEnum(CountryName)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/countries/entities/country.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rooms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Room[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/countries/entities/country.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:15\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            calculateTax\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateTax(room: Room, price: number, stayDays: number, guestCnt: number)\n                \n            \n\n\n            \n                \n                    Defined in src/countries/entities/country.entity.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                                Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    price\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    stayDays\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    guestCnt\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum } from 'class-validator';\nimport { CoreEntity } from 'src/common/entities/core.entity';\nimport { Room } from 'src/rooms/entities/room.entity';\nimport { Column, Entity, OneToMany } from 'typeorm';\nimport { taxStrategies } from '../taxStrategy';\n\nexport enum CountryName {\n  SouthKorea = 'SouthKorea',\n  Japan = 'Japan',\n  Bermuda = 'Bermuda',\n  Brazil = 'Brazil',\n  BritishVirginIslands = 'BritishVirginIslands',\n  Canada = 'Canada',\n  France = 'France',\n  Germany = 'Germany',\n  India = 'India',\n  Italy = 'Italy',\n  Lithuania = 'Lithuania',\n  Mexico = 'Mexico',\n  Netherlands = 'Netherlands',\n  Portugal = 'Portugal',\n  Switzerland = 'Switzerland',\n}\n\n@Entity()\nexport class Country extends CoreEntity {\n  @Column({ type: 'enum', enum: CountryName })\n  @IsEnum(CountryName)\n  name: CountryName;\n\n  @OneToMany(\n    type => Room,\n    room => room.country,\n  )\n  rooms: Room[];\n\n  calculateTax(room: Room, price: number, stayDays: number, guestCnt: number) {\n    const tax = taxStrategies[this.name].calculateTax(room, stayDays);\n\n    let result = 0;\n    result += price * (tax.percent * 0.01);\n    result += tax.amount * guestCnt * stayDays;\n    return result;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateConversationDto.html":{"url":"classes/CreateConversationDto.html","title":"class - CreateConversationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateConversationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/conversations/dto/create-conversation.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateConversationDto {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCountryDto.html":{"url":"classes/CreateCountryDto.html","title":"class - CreateCountryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCountryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/countries/dto/create-country.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CountryName\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEnum(CountryName)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/countries/dto/create-country.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum } from 'class-validator';\nimport { CountryName } from '../entities/country.entity';\n\nexport class CreateCountryDto {\n  @IsEnum(CountryName)\n  name: CountryName;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDiscountDto.html":{"url":"classes/CreateDiscountDto.html","title":"class - CreateDiscountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDiscountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/dto/create-discount.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateDiscountDto {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateListDto.html":{"url":"classes/CreateListDto.html","title":"class - CreateListDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateListDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lists/dto/create-list.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateListDto {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePaymentDto.html":{"url":"classes/CreatePaymentDto.html","title":"class - CreatePaymentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePaymentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payments/dto/create-payment.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreatePaymentDto {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePhotoDto.html":{"url":"classes/CreatePhotoDto.html","title":"class - CreatePhotoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePhotoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/photos/dto/create-photo.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreatePhotoDto {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateReservationDto.html":{"url":"classes/CreateReservationDto.html","title":"class - CreateReservationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReservationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reservations/dto/create-reservation.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checkIn\n                            \n                            \n                                checkOut\n                            \n                            \n                                guestCnt\n                            \n                            \n                                guestId\n                            \n                            \n                                paymentId\n                            \n                            \n                                price\n                            \n                            \n                                roomId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDateRange\n                            \n                            \n                                getDurationInDyas\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/reservations/dto/create-reservation.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/reservations/dto/create-reservation.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            guestCnt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/reservations/dto/create-reservation.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            guestId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/reservations/dto/create-reservation.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paymentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/reservations/dto/create-reservation.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/reservations/dto/create-reservation.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roomId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/reservations/dto/create-reservation.dto.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDateRange\n                        \n                        \n                    \n                \n            \n            \n                \ngetDateRange()\n                \n            \n\n\n            \n                \n                    Defined in src/reservations/dto/create-reservation.dto.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         DateRange\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDurationInDyas\n                        \n                        \n                    \n                \n            \n            \n                \ngetDurationInDyas()\n                \n            \n\n\n            \n                \n                    Defined in src/reservations/dto/create-reservation.dto.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DateDiff, DateRange } from 'src/common/datetime.utils';\n\nexport class CreateReservationDto {\n  roomId: number;\n  guestId: number;\n  guestCnt: number;\n  checkIn: Date;\n  checkOut: Date;\n  price: number;\n  paymentId: number;\n\n  getDurationInDyas(): number {\n    return DateDiff.inDays(this.checkIn, this.checkOut);\n  }\n\n  getDateRange(): DateRange {\n    return new DateRange(this.checkIn, this.checkOut);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateReviewDto.html":{"url":"classes/CreateReviewDto.html","title":"class - CreateReviewDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReviewDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/dto/create-review.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateReviewDto {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoomDto.html":{"url":"classes/CreateRoomDto.html","title":"class - CreateRoomDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoomDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rooms/dto/create-room.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateRoomDto {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTodoDTO.html":{"url":"classes/CreateTodoDTO.html","title":"class - CreateTodoDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTodoDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/dto/create-todo.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isDone\n                            \n                            \n                                longDesc\n                            \n                            \n                                shortDesc\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/todo/dto/create-todo.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            longDesc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsOptional()@Length(1, 100)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/todo/dto/create-todo.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shortDesc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@Length(1, 50)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/todo/dto/create-todo.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsOptional, IsString, Length } from 'class-validator';\n\nexport class CreateTodoDTO {\n  @IsString()\n  @Length(1, 50)\n  shortDesc: string;\n\n  @IsString()\n  @IsOptional()\n  @Length(1, 100)\n  longDesc: string;\n\n  @IsOptional()\n  @IsBoolean()\n  isDone: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsString } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString()\n  firstName: string;\n\n  @IsString()\n  lastName: string;\n\n  @IsEmail()\n  email: string;\n\n  @IsString()\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DateRange.html":{"url":"classes/DateRange.html","title":"class - DateRange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DateRange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/datetime.utils.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                endDate\n                            \n                            \n                                startDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intersect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(startDate: Date, endDate: Date)\n                    \n                \n                        \n                            \n                                Defined in src/common/datetime.utils.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/datetime.utils.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/datetime.utils.ts:35\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intersect\n                        \n                        \n                    \n                \n            \n            \n                \nintersect(other: DateRange)\n                \n            \n\n\n            \n                \n                    Defined in src/common/datetime.utils.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                DateRange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export const DateDiff = {\n  inDays: function(d1: Date, d2: Date) {\n    const t2 = d2.getTime();\n    const t1 = d1.getTime();\n\n    return Math.trunc((t2 - t1) / (24 * 3600 * 1000));\n  },\n\n  inWeeks: function(d1: Date, d2: Date) {\n    const t2 = d2.getTime();\n    const t1 = d1.getTime();\n\n    return Math.trunc((t2 - t1) / (24 * 3600 * 1000 * 7));\n  },\n\n  inMonths: function(d1: Date, d2: Date) {\n    const d1Y = d1.getFullYear();\n    const d2Y = d2.getFullYear();\n    const d1M = d1.getMonth();\n    const d2M = d2.getMonth();\n\n    return d2M + 12 * d2Y - (d1M + 12 * d1Y);\n  },\n\n  inYears: function(d1: Date, d2: Date) {\n    return d2.getFullYear() - d1.getFullYear();\n  },\n};\n\nexport class DateRange {\n  constructor(startDate: Date, endDate: Date) {\n    this.startDate = startDate;\n    this.endDate = endDate;\n  }\n  startDate: Date;\n  endDate: Date;\n\n  intersect(other: DateRange): boolean {\n    if (\n      this.startDate.getTime() \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Discount.html":{"url":"classes/Discount.html","title":"class - Discount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Discount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/entities/discount.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CoreEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                endDate\n                            \n                            \n                                percent\n                            \n                            \n                                rooms\n                            \n                            \n                                type\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateDiscountFee\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'datetime', nullable: true})@IsDate()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/discounts/entities/discount.entity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            percent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'int', nullable: true})@IsInt()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/discounts/entities/discount.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rooms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Room\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/discounts/entities/discount.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DiscountType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'enum', enum: DiscountType})@IsEnum(DiscountType)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/discounts/entities/discount.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:15\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            calculateDiscountFee\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateDiscountFee(price: number, stayDays: number)\n                \n            \n\n\n            \n                \n                    Defined in src/discounts/entities/discount.entity.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    price\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    stayDays\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IsDate, IsEnum, IsInt } from 'class-validator';\nimport { CoreEntity } from 'src/common/entities/core.entity';\nimport { Room } from 'src/rooms/entities/room.entity';\nimport { Column, Entity, ManyToOne } from 'typeorm';\nimport { discountStrategies } from '../discountStrategy';\n\nexport enum DiscountType {\n  Week = 'Week',\n  Month = 'Month',\n  Special = 'Special',\n}\n\n@Entity()\nexport class Discount extends CoreEntity {\n  @Column({ type: 'enum', enum: DiscountType })\n  @IsEnum(DiscountType)\n  type: DiscountType;\n\n  @ManyToOne(\n    type => Room,\n    room => room.discounts,\n  )\n  rooms: Room;\n\n  @Column({ type: 'int', nullable: true })\n  @IsInt()\n  percent: number;\n\n  @Column({ type: 'datetime', nullable: true })\n  @IsDate()\n  endDate: Date;\n\n  calculateDiscountFee(price: number, stayDays: number): number {\n    let result = 0;\n\n    const now = new Date();\n    if (\n      this.endDate.getTime() !== null &&\n      this.endDate.getTime() \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiscountStrategy.html":{"url":"interfaces/DiscountStrategy.html","title":"interface - DiscountStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DiscountStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/discountStrategy.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isSatisfied\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isSatisfied\n                                    \n                                \n                                \n                                    \n                                        isSatisfied:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DiscountType } from './entities/discount.entity';\n\nexport interface DiscountStrategy {\n  isSatisfied: (stayDays: number) => boolean;\n}\n\nexport const discountStrategies: Record = {\n  Week: { isSatisfied: stayDays => (stayDays >= 7 ? true : false) },\n  Month: { isSatisfied: stayDays => (stayDays >= 28 ? true : false) },\n  Special: { isSatisfied: _ => true },\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DiscountsController.html":{"url":"controllers/DiscountsController.html","title":"controller - DiscountsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DiscountsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/discounts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                discounts\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createDiscountDto: CreateDiscountDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/discounts/discounts.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createDiscountDto\n                                    \n                                                CreateDiscountDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/discounts/discounts.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/discounts/discounts.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/discounts/discounts.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateDiscountDto: UpdateDiscountDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/discounts/discounts.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDiscountDto\n                                    \n                                                UpdateDiscountDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Put, Param, Delete } from '@nestjs/common';\nimport { DiscountsService } from './discounts.service';\nimport { CreateDiscountDto } from './dto/create-discount.dto';\nimport { UpdateDiscountDto } from './dto/update-discount.dto';\n\n@Controller('discounts')\nexport class DiscountsController {\n  constructor(private readonly discountsService: DiscountsService) {}\n\n  @Post()\n  create(@Body() createDiscountDto: CreateDiscountDto) {\n    return this.discountsService.create(createDiscountDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.discountsService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.discountsService.findOne(+id);\n  }\n\n  @Put(':id')\n  update(@Param('id') id: string, @Body() updateDiscountDto: UpdateDiscountDto) {\n    return this.discountsService.update(+id, updateDiscountDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.discountsService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DiscountsModule.html":{"url":"modules/DiscountsModule.html","title":"module - DiscountsModule","body":"\n                   \n\n\n\n\n    Modules\n    DiscountsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DiscountsModule\n\n\n\ncluster_DiscountsModule_providers\n\n\n\n\nDiscountsService\n\nDiscountsService\n\n\n\nDiscountsModule\n\nDiscountsModule\n\nDiscountsModule -->\n\nDiscountsService->DiscountsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/discounts/discounts.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DiscountsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DiscountsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DiscountsService } from './discounts.service';\nimport { DiscountsController } from './discounts.controller';\n\n@Module({\n  controllers: [DiscountsController],\n  providers: [DiscountsService]\n})\nexport class DiscountsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiscountsService.html":{"url":"injectables/DiscountsService.html","title":"injectable - DiscountsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DiscountsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/discounts.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createDiscountDto: CreateDiscountDto)\n                \n            \n\n\n            \n                \n                    Defined in src/discounts/discounts.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createDiscountDto\n                                    \n                                                CreateDiscountDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/discounts/discounts.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/discounts/discounts.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/discounts/discounts.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateDiscountDto: UpdateDiscountDto)\n                \n            \n\n\n            \n                \n                    Defined in src/discounts/discounts.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDiscountDto\n                                    \n                                                UpdateDiscountDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateDiscountDto } from './dto/create-discount.dto';\nimport { UpdateDiscountDto } from './dto/update-discount.dto';\n\n@Injectable()\nexport class DiscountsService {\n  create(createDiscountDto: CreateDiscountDto) {\n    return 'This action adds a new discount';\n  }\n\n  findAll() {\n    return `This action returns all discounts`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} discount`;\n  }\n\n  update(id: number, updateDiscountDto: UpdateDiscountDto) {\n    return `This action updates a #${id} discount`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} discount`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Facility.html":{"url":"classes/Facility.html","title":"class - Facility","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Facility\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rooms/entities/facility.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CoreEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                rooms\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'text', nullable: true})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/rooms/entities/facility.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/rooms/entities/facility.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rooms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Room[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/rooms/entities/facility.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:15\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\nimport { CoreEntity } from 'src/common/entities/core.entity';\nimport { Column, Entity, ManyToMany } from 'typeorm';\nimport { Room } from './room.entity';\n@Entity()\nexport class Facility extends CoreEntity {\n  @Column()\n  @IsString()\n  name: string;\n\n  @Column({ type: 'text', nullable: true })\n  @IsString()\n  description: string;\n\n  @ManyToMany(\n    type => Room,\n    room => room.facilities,\n  )\n  rooms: Room[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPriceDetail.html":{"url":"interfaces/IPriceDetail.html","title":"interface - IPriceDetail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPriceDetail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rooms/entities/room.entity.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accommodationFee\n                                \n                                \n                                        cleaningFee\n                                \n                                \n                                        discountFee\n                                \n                                \n                                        serviceFee\n                                \n                                \n                                        taxFee\n                                \n                                \n                                        totalPrice\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accommodationFee\n                                    \n                                \n                                \n                                    \n                                        accommodationFee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cleaningFee\n                                    \n                                \n                                \n                                    \n                                        cleaningFee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discountFee\n                                    \n                                \n                                \n                                    \n                                        discountFee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceFee\n                                    \n                                \n                                \n                                    \n                                        serviceFee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        taxFee\n                                    \n                                \n                                \n                                    \n                                        taxFee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalPrice\n                                    \n                                \n                                \n                                    \n                                        totalPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  BadRequestException,\n  InternalServerErrorException,\n} from '@nestjs/common';\nimport { IsEnum, IsInt, IsNumber, IsString } from 'class-validator';\nimport { DateRange } from 'src/common/datetime.utils';\nimport { CoreEntity } from 'src/common/entities/core.entity';\nimport { Country } from 'src/countries/entities/country.entity';\nimport { Discount } from 'src/discounts/entities/discount.entity';\nimport { List } from 'src/lists/entities/list.entity';\nimport { Photo } from 'src/photos/entities/photo.entity';\nimport { Reservation } from 'src/reservations/entities/reservation.entity';\nimport { Review } from 'src/reviews/entities/review.entity';\nimport { User } from 'src/users/entities/user.entity';\nimport { Column, Entity, ManyToMany, ManyToOne, OneToMany } from 'typeorm';\nimport { ReserveRoomDTO } from '../dto/reserve-room.dto';\nimport { Amenity } from './amenity.entity';\nimport { Facility } from './facility.entity';\nimport { Rule } from './rule.entity';\n\nexport enum RoomType {\n  Apartment = 'Apartment',\n  House = 'House',\n  SecondaryUnit = 'SecondaryUnit',\n  UniqueSpace = 'UniqueSpace',\n  BedAndBreakfast = 'BedAndBreakfast',\n  BoutiqueHotel = 'BoutiqueHotel',\n}\n\n@Entity()\nexport class Room extends CoreEntity {\n  @ManyToOne(\n    type => User,\n    user => user.rooms,\n  )\n  host: User;\n\n  @Column({ type: 'enum', enum: RoomType })\n  @IsEnum(RoomType)\n  roomType: RoomType;\n\n  @Column()\n  price: number;\n\n  @OneToMany(\n    type => Discount,\n    discount => discount.rooms,\n  )\n  discounts: Discount[];\n\n  @Column({ nullable: true })\n  cleaningFee: number;\n\n  @Column({ type: 'int' })\n  @IsInt()\n  roomCnt: number;\n\n  @Column({ type: 'int' })\n  @IsInt()\n  bedCnt: number;\n\n  @Column({ type: 'float' })\n  @IsNumber()\n  bathCnt: number;\n\n  @Column({ type: 'int' })\n  @IsInt()\n  maxGuestCnt: number;\n\n  @Column()\n  @IsString()\n  title: string;\n\n  @Column({ type: 'text' })\n  @IsString()\n  description: string;\n\n  @OneToMany(\n    type => Photo,\n    photo => photo.room,\n  )\n  photos: Photo[];\n\n  @ManyToOne(\n    type => Country,\n    country => country.rooms,\n  )\n  country: Country;\n\n  // ===== Address =====\n  @Column()\n  @IsString()\n  addressState: string;\n\n  @Column()\n  @IsString()\n  addressCity: string;\n\n  @Column()\n  @IsString()\n  addressStreet: string;\n\n  @Column({ nullable: true })\n  @IsString()\n  addressEtc: string;\n\n  @Column()\n  @IsString()\n  addressZipCode: string;\n  // ====================\n\n  // ===== Options =====\n  @ManyToMany(\n    type => Facility,\n    facility => facility.rooms,\n  )\n  facilities: Facility[];\n\n  @ManyToMany(\n    type => Rule,\n    facility => facility.rooms,\n  )\n  rules: Rule[];\n\n  @ManyToMany(\n    type => Amenity,\n    amenity => amenity.rooms,\n  )\n  amenities: Amenity[];\n  // ====================\n\n  // Inverse Side Relation\n  @OneToMany(\n    type => Reservation,\n    reservation => reservation.room,\n  )\n  reservatons: Reservation[];\n\n  @OneToMany(\n    type => Review,\n    review => review.room,\n  )\n  reviews: Review[];\n\n  @ManyToMany(\n    type => List,\n    list => list.rooms,\n  )\n  lists: List[];\n\n  // ===== Domain Methods =====\n  reserve(reserveRoomDTO: ReserveRoomDTO, guest: User): Reservation {\n    const reservation = new Reservation({\n      ...reserveRoomDTO,\n      room: this,\n      guest,\n    });\n    this.validateReservation(reservation);\n    return reservation;\n  }\n\n  private validateReservation(reservation: Reservation): boolean {\n    if (!this.isAccommodable(reservation.getStayTerm())) {\n      throw new BadRequestException('예약 불가능한 일정입니다.');\n    }\n\n    const totalPrice = this.calculateTotalPrice(\n      reservation.getDurationInDyas(),\n      reservation.guestCnt,\n    );\n    if (totalPrice != reservation.price) {\n      throw new BadRequestException('가격이 변동되었습니다.');\n    }\n\n    return true;\n  }\n\n  private isAccommodable(stayTerm: DateRange): boolean {\n    if (!this.reservatons) throw new InternalServerErrorException();\n    return !this.reservatons\n      .filter(reservation => reservation.isScheduled())\n      .map(reservation => reservation.getStayTerm())\n      .some(otherStayRange => otherStayRange.intersect(stayTerm));\n  }\n\n  calculateTotalPrice(stayDays: number, guestCnt: number): number {\n    return this.calculatePriceInDetail(stayDays, guestCnt).totalPrice;\n  }\n\n  calculatePriceInDetail(stayDays: number, guestCnt: number): IPriceDetail {\n    const accommodationFee = this.price * stayDays;\n    const discountFee = this.calculateDiscountFee(accommodationFee, stayDays);\n    const cleaningFee = this.cleaningFee || 0;\n\n    const serviceFee = this.calculateServiceFee(\n      accommodationFee - discountFee + cleaningFee,\n    );\n    const taxFee = this.calculateTaxFee(serviceFee, stayDays, guestCnt);\n\n    const totalPrice =\n      accommodationFee - discountFee + cleaningFee + serviceFee + taxFee;\n    return {\n      accommodationFee,\n      discountFee,\n      cleaningFee,\n      serviceFee,\n      taxFee,\n      totalPrice,\n    };\n  }\n\n  private calculateDiscountFee(price: number, stayDays: number): number {\n    if (!this.discounts) throw new InternalServerErrorException();\n    return this.discounts\n      .map(discount => discount.calculateDiscountFee(price, stayDays))\n      .reduce((acc, cur) => Math.max(acc, cur), 0);\n  }\n\n  private calculateServiceFee(price: number): number {\n    // TODO: Make Billing System\n    const commissionPercent = 15;\n    return price * (commissionPercent * 0.01);\n  }\n\n  private calculateTaxFee(\n    price: number,\n    stayDays: number,\n    guestCnt: number,\n  ): number {\n    if (!this.country) throw new InternalServerErrorException();\n    return this.country.calculateTax(this, price, stayDays, guestCnt);\n  }\n}\n\ninterface IPriceDetail {\n  accommodationFee: number;\n  discountFee: number;\n  cleaningFee: number;\n  serviceFee: number;\n  taxFee: number;\n  totalPrice: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IReservationConstructor.html":{"url":"interfaces/IReservationConstructor.html","title":"interface - IReservationConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IReservationConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reservations/entities/reservation.entity.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        checkIn\n                                \n                                \n                                        checkOut\n                                \n                                \n                                        guest\n                                \n                                \n                                        guestCnt\n                                \n                                \n                                        price\n                                \n                                \n                                        room\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        checkIn\n                                    \n                                \n                                \n                                    \n                                        checkIn:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        checkOut\n                                    \n                                \n                                \n                                    \n                                        checkOut:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guest\n                                    \n                                \n                                \n                                    \n                                        guest:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guestCnt\n                                    \n                                \n                                \n                                    \n                                        guestCnt:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        room\n                                    \n                                \n                                \n                                    \n                                        room:         Room\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Room\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InternalServerErrorException } from '@nestjs/common';\nimport { IsDate, IsEnum, IsInt, IsNumber } from 'class-validator';\nimport { DateDiff, DateRange } from 'src/common/datetime.utils';\nimport { CoreEntity } from 'src/common/entities/core.entity';\nimport { Room } from 'src/rooms/entities/room.entity';\nimport { User } from 'src/users/entities/user.entity';\nimport {\n  Column,\n  DeepPartial,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n} from 'typeorm';\nimport { CreateReservationDto } from '../dto/create-reservation.dto';\n\nexport enum ReservationStatus {\n  REQUESTED = 'REQUESTED',\n  ACCEPTED = 'ACCEPTED',\n  REJECTED = 'REJECTED',\n  FAEILED = 'FAEILED',\n  CHECKEDIN = 'CHECKEDIN',\n  CHECKEDOUT = 'CHECKEDOUT',\n  CANCELED = 'CANCELED',\n}\n\n@Entity()\nexport class Reservation extends CoreEntity {\n  @ManyToOne(\n    type => Room,\n    room => room.reservatons,\n  )\n  room: Room;\n\n  @ManyToMany(\n    type => User,\n    user => user.reservations,\n  )\n  @JoinTable()\n  guests: User[];\n\n  @Column({ type: 'int' })\n  @IsInt()\n  guestCnt: number;\n\n  @Column({ type: 'enum', enum: ReservationStatus, nullable: true })\n  @IsEnum(ReservationStatus)\n  status: ReservationStatus;\n\n  @Column({ type: 'date' })\n  @IsDate()\n  checkIn: Date;\n\n  @Column({ type: 'date' })\n  @IsDate()\n  checkOut: Date;\n\n  @Column({ type: 'int' })\n  @IsNumber()\n  price: number;\n\n  getDurationInDyas(): number {\n    return DateDiff.inDays(this.checkIn, this.checkOut);\n  }\n\n  getStayTerm(): DateRange {\n    const lastNight = new Date();\n    lastNight.setDate(this.checkOut.getDate() - 1);\n\n    return new DateRange(this.checkIn, lastNight);\n  }\n\n  isScheduled(): boolean {\n    return (\n      this.status === ReservationStatus.REQUESTED ||\n      this.status === ReservationStatus.ACCEPTED\n    );\n  }\n\n  constructor(data?: IReservationConstructor) {\n    super();\n    if (data) {\n      const { room, guest, guestCnt, checkIn, checkOut, price } = data;\n      this.room = room;\n      this.guests = [guest];\n      this.guestCnt = guestCnt;\n      this.checkIn = checkIn;\n      this.checkOut = checkOut;\n      this.price = price;\n    }\n  }\n}\n\ninterface IReservationConstructor {\n  room: Room;\n  guest: User;\n  guestCnt: number;\n  checkIn: Date;\n  checkOut: Date;\n  price: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { jwtConstants } from '../constants';\nimport { AuthService } from '../auth.service';\nimport { User } from 'src/users/entities/user.entity';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwtConstants.secret,\n    });\n  }\n\n  async validate(payload: any): Promise {\n    const user: User = await this.authService.getUserByPayload(payload);\n    if (!user) throw new BadRequestException('존재하지 않는 유저입니다.');\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/List.html":{"url":"classes/List.html","title":"class - List","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  List\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lists/entities/list.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CoreEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                owner\n                            \n                            \n                                rooms\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lists/entities/list.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            owner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lists/entities/list.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rooms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Room[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany(undefined, undefined)@JoinTable()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lists/entities/list.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:15\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\nimport { CoreEntity } from 'src/common/entities/core.entity';\nimport { Room } from 'src/rooms/entities/room.entity';\nimport { User } from 'src/users/entities/user.entity';\nimport { Column, Entity, JoinTable, ManyToMany, ManyToOne } from 'typeorm';\n\n@Entity()\nexport class List extends CoreEntity {\n  @Column()\n  @IsString()\n  name: string;\n\n  @ManyToMany(\n    type => Room,\n    room => room.lists,\n  )\n  @JoinTable()\n  rooms: Room[];\n\n  @ManyToOne(\n    type => User,\n    user => user.saveLists,\n  )\n  owner: User;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ListsController.html":{"url":"controllers/ListsController.html","title":"controller - ListsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ListsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lists/lists.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                lists\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createListDto: CreateListDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/lists/lists.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createListDto\n                                    \n                                                CreateListDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/lists/lists.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/lists/lists.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/lists/lists.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateListDto: UpdateListDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/lists/lists.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateListDto\n                                    \n                                                UpdateListDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Put, Param, Delete } from '@nestjs/common';\nimport { ListsService } from './lists.service';\nimport { CreateListDto } from './dto/create-list.dto';\nimport { UpdateListDto } from './dto/update-list.dto';\n\n@Controller('lists')\nexport class ListsController {\n  constructor(private readonly listsService: ListsService) {}\n\n  @Post()\n  create(@Body() createListDto: CreateListDto) {\n    return this.listsService.create(createListDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.listsService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.listsService.findOne(+id);\n  }\n\n  @Put(':id')\n  update(@Param('id') id: string, @Body() updateListDto: UpdateListDto) {\n    return this.listsService.update(+id, updateListDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.listsService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ListsModule.html":{"url":"modules/ListsModule.html","title":"module - ListsModule","body":"\n                   \n\n\n\n\n    Modules\n    ListsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ListsModule\n\n\n\ncluster_ListsModule_providers\n\n\n\n\nListsService\n\nListsService\n\n\n\nListsModule\n\nListsModule\n\nListsModule -->\n\nListsService->ListsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lists/lists.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ListsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ListsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ListsService } from './lists.service';\nimport { ListsController } from './lists.controller';\n\n@Module({\n  controllers: [ListsController],\n  providers: [ListsService]\n})\nexport class ListsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ListsService.html":{"url":"injectables/ListsService.html","title":"injectable - ListsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ListsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lists/lists.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createListDto: CreateListDto)\n                \n            \n\n\n            \n                \n                    Defined in src/lists/lists.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createListDto\n                                    \n                                                CreateListDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/lists/lists.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lists/lists.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lists/lists.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateListDto: UpdateListDto)\n                \n            \n\n\n            \n                \n                    Defined in src/lists/lists.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateListDto\n                                    \n                                                UpdateListDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateListDto } from './dto/create-list.dto';\nimport { UpdateListDto } from './dto/update-list.dto';\n\n@Injectable()\nexport class ListsService {\n  create(createListDto: CreateListDto) {\n    return 'This action adds a new list';\n  }\n\n  findAll() {\n    return `This action returns all lists`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} list`;\n  }\n\n  update(id: number, updateListDto: UpdateListDto) {\n    return `This action updates a #${id} list`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} list`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/local.strategy.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super({\n      usernameField: 'email',\n      passwordField: 'password',\n    });\n  }\n\n  async validate(email: string, password: string): Promise {\n    const user = await this.authService.validateUser(email, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Message.html":{"url":"classes/Message.html","title":"class - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/conversations/entities/message.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CoreEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                conversation\n                            \n                            \n                                sender\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'text'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/conversations/entities/message.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conversation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Conversation\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/conversations/entities/message.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/conversations/entities/message.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:15\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CoreEntity } from 'src/common/entities/core.entity';\nimport { User } from 'src/users/entities/user.entity';\nimport { Column, Entity, JoinTable, ManyToOne } from 'typeorm';\nimport { Conversation } from './conversation.entity';\n\n@Entity()\nexport class Message extends CoreEntity {\n  @Column({ type: 'text' })\n  content: string;\n\n  @ManyToOne(\n    type => User,\n    user => user.messages,\n  )\n  sender: User;\n\n  @ManyToOne(\n    type => Conversation,\n    conversation => conversation.messages,\n  )\n  conversation: Conversation;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Payment.html":{"url":"classes/Payment.html","title":"class - Payment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Payment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payments/entities/payment.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CoreEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/payments/entities/payment.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:15\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CoreEntity } from 'src/common/entities/core.entity';\nimport { User } from 'src/users/entities/user.entity';\nimport { Entity, ManyToOne } from 'typeorm';\n\n@Entity()\nexport class Payment extends CoreEntity {\n  @ManyToOne(\n    type => User,\n    user => user.payments,\n  )\n  user: User;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaymentsController.html":{"url":"controllers/PaymentsController.html","title":"controller - PaymentsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaymentsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payments/payments.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                payments\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createPaymentDto: CreatePaymentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/payments/payments.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPaymentDto\n                                    \n                                                CreatePaymentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/payments/payments.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/payments/payments.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/payments/payments.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updatePaymentDto: UpdatePaymentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/payments/payments.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePaymentDto\n                                    \n                                                UpdatePaymentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Put, Param, Delete } from '@nestjs/common';\nimport { PaymentsService } from './payments.service';\nimport { CreatePaymentDto } from './dto/create-payment.dto';\nimport { UpdatePaymentDto } from './dto/update-payment.dto';\n\n@Controller('payments')\nexport class PaymentsController {\n  constructor(private readonly paymentsService: PaymentsService) {}\n\n  @Post()\n  create(@Body() createPaymentDto: CreatePaymentDto) {\n    return this.paymentsService.create(createPaymentDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.paymentsService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.paymentsService.findOne(+id);\n  }\n\n  @Put(':id')\n  update(@Param('id') id: string, @Body() updatePaymentDto: UpdatePaymentDto) {\n    return this.paymentsService.update(+id, updatePaymentDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.paymentsService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentsModule.html":{"url":"modules/PaymentsModule.html","title":"module - PaymentsModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaymentsModule\n\n\n\ncluster_PaymentsModule_providers\n\n\n\n\nPaymentsService\n\nPaymentsService\n\n\n\nPaymentsModule\n\nPaymentsModule\n\nPaymentsModule -->\n\nPaymentsService->PaymentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/payments/payments.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaymentsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaymentsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PaymentsService } from './payments.service';\nimport { PaymentsController } from './payments.controller';\n\n@Module({\n  controllers: [PaymentsController],\n  providers: [PaymentsService]\n})\nexport class PaymentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymentsService.html":{"url":"injectables/PaymentsService.html","title":"injectable - PaymentsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PaymentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payments/payments.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createPaymentDto: CreatePaymentDto)\n                \n            \n\n\n            \n                \n                    Defined in src/payments/payments.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPaymentDto\n                                    \n                                                CreatePaymentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/payments/payments.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/payments/payments.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/payments/payments.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updatePaymentDto: UpdatePaymentDto)\n                \n            \n\n\n            \n                \n                    Defined in src/payments/payments.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePaymentDto\n                                    \n                                                UpdatePaymentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreatePaymentDto } from './dto/create-payment.dto';\nimport { UpdatePaymentDto } from './dto/update-payment.dto';\n\n@Injectable()\nexport class PaymentsService {\n  create(createPaymentDto: CreatePaymentDto) {\n    return 'This action adds a new payment';\n  }\n\n  findAll() {\n    return `This action returns all payments`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} payment`;\n  }\n\n  update(id: number, updatePaymentDto: UpdatePaymentDto) {\n    return `This action updates a #${id} payment`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} payment`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Photo.html":{"url":"classes/Photo.html","title":"class - Photo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Photo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/photos/entities/photo.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CoreEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                caption\n                            \n                            \n                                room\n                            \n                            \n                                url\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            caption\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/photos/entities/photo.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            room\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Room\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/photos/entities/photo.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/photos/entities/photo.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:15\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\nimport { CoreEntity } from 'src/common/entities/core.entity';\nimport { Room } from 'src/rooms/entities/room.entity';\nimport { Column, Entity, ManyToOne } from 'typeorm';\n\n@Entity()\nexport class Photo extends CoreEntity {\n  @Column()\n  @IsString()\n  url: string;\n\n  @Column({ nullable: true })\n  @IsString()\n  caption: string;\n\n  // Inver Side Relation\n  @ManyToOne(\n    type => Room,\n    room => room.photos,\n    { nullable: true },\n  )\n  room: Room;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PhotosController.html":{"url":"controllers/PhotosController.html","title":"controller - PhotosController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PhotosController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/photos/photos.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                photos\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createPhotoDto: CreatePhotoDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/photos/photos.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPhotoDto\n                                    \n                                                CreatePhotoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/photos/photos.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/photos/photos.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/photos/photos.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updatePhotoDto: UpdatePhotoDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/photos/photos.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePhotoDto\n                                    \n                                                UpdatePhotoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Put, Param, Delete } from '@nestjs/common';\nimport { PhotosService } from './photos.service';\nimport { CreatePhotoDto } from './dto/create-photo.dto';\nimport { UpdatePhotoDto } from './dto/update-photo.dto';\n\n@Controller('photos')\nexport class PhotosController {\n  constructor(private readonly photosService: PhotosService) {}\n\n  @Post()\n  create(@Body() createPhotoDto: CreatePhotoDto) {\n    return this.photosService.create(createPhotoDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.photosService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.photosService.findOne(+id);\n  }\n\n  @Put(':id')\n  update(@Param('id') id: string, @Body() updatePhotoDto: UpdatePhotoDto) {\n    return this.photosService.update(+id, updatePhotoDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.photosService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PhotosModule.html":{"url":"modules/PhotosModule.html","title":"module - PhotosModule","body":"\n                   \n\n\n\n\n    Modules\n    PhotosModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PhotosModule\n\n\n\ncluster_PhotosModule_providers\n\n\n\n\nPhotosService\n\nPhotosService\n\n\n\nPhotosModule\n\nPhotosModule\n\nPhotosModule -->\n\nPhotosService->PhotosModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/photos/photos.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PhotosService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PhotosController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PhotosService } from './photos.service';\nimport { PhotosController } from './photos.controller';\n\n@Module({\n  controllers: [PhotosController],\n  providers: [PhotosService]\n})\nexport class PhotosModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PhotosService.html":{"url":"injectables/PhotosService.html","title":"injectable - PhotosService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PhotosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/photos/photos.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createPhotoDto: CreatePhotoDto)\n                \n            \n\n\n            \n                \n                    Defined in src/photos/photos.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPhotoDto\n                                    \n                                                CreatePhotoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/photos/photos.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/photos/photos.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/photos/photos.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updatePhotoDto: UpdatePhotoDto)\n                \n            \n\n\n            \n                \n                    Defined in src/photos/photos.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePhotoDto\n                                    \n                                                UpdatePhotoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreatePhotoDto } from './dto/create-photo.dto';\nimport { UpdatePhotoDto } from './dto/update-photo.dto';\n\n@Injectable()\nexport class PhotosService {\n  create(createPhotoDto: CreatePhotoDto) {\n    return 'This action adds a new photo';\n  }\n\n  findAll() {\n    return `This action returns all photos`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} photo`;\n  }\n\n  update(id: number, updatePhotoDto: UpdatePhotoDto) {\n    return `This action updates a #${id} photo`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} photo`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Rating.html":{"url":"classes/Rating.html","title":"class - Rating","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Rating\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/entities/rating.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CoreEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                review\n                            \n                            \n                                star\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RatingCategory\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'enum', enum: RatingCategory})@IsEnum(RatingCategory)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/reviews/entities/rating.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            review\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Review\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/reviews/entities/rating.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            star\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'int'})@IsInt()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/reviews/entities/rating.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:15\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsInt } from 'class-validator';\nimport { CoreEntity } from 'src/common/entities/core.entity';\nimport { Check, Column, Entity, ManyToOne } from 'typeorm';\nimport { Review } from './review.entity';\n\nexport enum RatingCategory {\n  CLEANNESS = 'CLEANNESS',\n  ACCURACY = 'ACCURACY',\n  COMMUNICATION = 'COMMUNICATION',\n  LOCATION = 'LOCATION',\n  CHECKIN = 'CHECKIN',\n  PRICE = 'PRICE',\n}\n\n// registerEnumType(RatingCategory, { name: 'RatingCategory' }); for GraphQL\n\n@Entity()\n@Check(`star BETWEEN 0 AND 5`)\nexport class Rating extends CoreEntity {\n  @ManyToOne(\n    type => Review,\n    review => review.ratings,\n  )\n  review: Review;\n\n  @Column({ type: 'enum', enum: RatingCategory })\n  @IsEnum(RatingCategory)\n  category: RatingCategory;\n\n  @Column({ type: 'int' })\n  @IsInt()\n  star: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reservation.html":{"url":"classes/Reservation.html","title":"class - Reservation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reservation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reservations/entities/reservation.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CoreEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checkIn\n                            \n                            \n                                checkOut\n                            \n                            \n                                guestCnt\n                            \n                            \n                                guests\n                            \n                            \n                                price\n                            \n                            \n                                room\n                            \n                            \n                                status\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDurationInDyas\n                            \n                            \n                                getStayTerm\n                            \n                            \n                                isScheduled\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data?: IReservationConstructor)\n                    \n                \n                        \n                            \n                                Defined in src/reservations/entities/reservation.entity.ts:78\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        IReservationConstructor\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'date'})@IsDate()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/reservations/entities/reservation.entity.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'date'})@IsDate()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/reservations/entities/reservation.entity.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            guestCnt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'int'})@IsInt()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/reservations/entities/reservation.entity.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            guests\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany(undefined, undefined)@JoinTable()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/reservations/entities/reservation.entity.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'int'})@IsNumber()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/reservations/entities/reservation.entity.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            room\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Room\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/reservations/entities/reservation.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ReservationStatus\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'enum', enum: ReservationStatus, nullable: true})@IsEnum(ReservationStatus)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/reservations/entities/reservation.entity.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:15\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDurationInDyas\n                        \n                        \n                    \n                \n            \n            \n                \ngetDurationInDyas()\n                \n            \n\n\n            \n                \n                    Defined in src/reservations/entities/reservation.entity.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStayTerm\n                        \n                        \n                    \n                \n            \n            \n                \ngetStayTerm()\n                \n            \n\n\n            \n                \n                    Defined in src/reservations/entities/reservation.entity.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         DateRange\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isScheduled\n                        \n                        \n                    \n                \n            \n            \n                \nisScheduled()\n                \n            \n\n\n            \n                \n                    Defined in src/reservations/entities/reservation.entity.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { InternalServerErrorException } from '@nestjs/common';\nimport { IsDate, IsEnum, IsInt, IsNumber } from 'class-validator';\nimport { DateDiff, DateRange } from 'src/common/datetime.utils';\nimport { CoreEntity } from 'src/common/entities/core.entity';\nimport { Room } from 'src/rooms/entities/room.entity';\nimport { User } from 'src/users/entities/user.entity';\nimport {\n  Column,\n  DeepPartial,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n} from 'typeorm';\nimport { CreateReservationDto } from '../dto/create-reservation.dto';\n\nexport enum ReservationStatus {\n  REQUESTED = 'REQUESTED',\n  ACCEPTED = 'ACCEPTED',\n  REJECTED = 'REJECTED',\n  FAEILED = 'FAEILED',\n  CHECKEDIN = 'CHECKEDIN',\n  CHECKEDOUT = 'CHECKEDOUT',\n  CANCELED = 'CANCELED',\n}\n\n@Entity()\nexport class Reservation extends CoreEntity {\n  @ManyToOne(\n    type => Room,\n    room => room.reservatons,\n  )\n  room: Room;\n\n  @ManyToMany(\n    type => User,\n    user => user.reservations,\n  )\n  @JoinTable()\n  guests: User[];\n\n  @Column({ type: 'int' })\n  @IsInt()\n  guestCnt: number;\n\n  @Column({ type: 'enum', enum: ReservationStatus, nullable: true })\n  @IsEnum(ReservationStatus)\n  status: ReservationStatus;\n\n  @Column({ type: 'date' })\n  @IsDate()\n  checkIn: Date;\n\n  @Column({ type: 'date' })\n  @IsDate()\n  checkOut: Date;\n\n  @Column({ type: 'int' })\n  @IsNumber()\n  price: number;\n\n  getDurationInDyas(): number {\n    return DateDiff.inDays(this.checkIn, this.checkOut);\n  }\n\n  getStayTerm(): DateRange {\n    const lastNight = new Date();\n    lastNight.setDate(this.checkOut.getDate() - 1);\n\n    return new DateRange(this.checkIn, lastNight);\n  }\n\n  isScheduled(): boolean {\n    return (\n      this.status === ReservationStatus.REQUESTED ||\n      this.status === ReservationStatus.ACCEPTED\n    );\n  }\n\n  constructor(data?: IReservationConstructor) {\n    super();\n    if (data) {\n      const { room, guest, guestCnt, checkIn, checkOut, price } = data;\n      this.room = room;\n      this.guests = [guest];\n      this.guestCnt = guestCnt;\n      this.checkIn = checkIn;\n      this.checkOut = checkOut;\n      this.price = price;\n    }\n  }\n}\n\ninterface IReservationConstructor {\n  room: Room;\n  guest: User;\n  guestCnt: number;\n  checkIn: Date;\n  checkOut: Date;\n  price: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ReservationsController.html":{"url":"controllers/ReservationsController.html","title":"controller - ReservationsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ReservationsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reservations/reservations.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                reservations\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createReservationDto: CreateReservationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/reservations/reservations.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createReservationDto\n                                    \n                                                CreateReservationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/reservations/reservations.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/reservations/reservations.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/reservations/reservations.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateReservationDto: UpdateReservationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/reservations/reservations.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateReservationDto\n                                    \n                                                UpdateReservationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Put, Param, Delete } from '@nestjs/common';\nimport { ReservationsService } from './reservations.service';\nimport { CreateReservationDto } from './dto/create-reservation.dto';\nimport { UpdateReservationDto } from './dto/update-reservation.dto';\n\n@Controller('reservations')\nexport class ReservationsController {\n  constructor(private readonly reservationsService: ReservationsService) {}\n\n  @Post()\n  create(@Body() createReservationDto: CreateReservationDto) {\n    return this.reservationsService.create(createReservationDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.reservationsService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.reservationsService.findOne(+id);\n  }\n\n  @Put(':id')\n  update(@Param('id') id: string, @Body() updateReservationDto: UpdateReservationDto) {\n    return this.reservationsService.update(+id, updateReservationDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.reservationsService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReservationsModule.html":{"url":"modules/ReservationsModule.html","title":"module - ReservationsModule","body":"\n                   \n\n\n\n\n    Modules\n    ReservationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReservationsModule\n\n\n\ncluster_ReservationsModule_providers\n\n\n\n\nReservationsService\n\nReservationsService\n\n\n\nReservationsModule\n\nReservationsModule\n\nReservationsModule -->\n\nReservationsService->ReservationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/reservations/reservations.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ReservationsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ReservationsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ReservationsService } from './reservations.service';\nimport { ReservationsController } from './reservations.controller';\n\n@Module({\n  controllers: [ReservationsController],\n  providers: [ReservationsService]\n})\nexport class ReservationsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReservationsService.html":{"url":"injectables/ReservationsService.html","title":"injectable - ReservationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ReservationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reservations/reservations.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createReservationDto: CreateReservationDto)\n                \n            \n\n\n            \n                \n                    Defined in src/reservations/reservations.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createReservationDto\n                                    \n                                                CreateReservationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/reservations/reservations.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/reservations/reservations.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/reservations/reservations.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateReservationDto: UpdateReservationDto)\n                \n            \n\n\n            \n                \n                    Defined in src/reservations/reservations.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateReservationDto\n                                    \n                                                UpdateReservationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateReservationDto } from './dto/create-reservation.dto';\nimport { UpdateReservationDto } from './dto/update-reservation.dto';\n\n@Injectable()\nexport class ReservationsService {\n  create(createReservationDto: CreateReservationDto) {\n    return 'This action adds a new reservation';\n  }\n\n  findAll() {\n    return `This action returns all reservations`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} reservation`;\n  }\n\n  update(id: number, updateReservationDto: UpdateReservationDto) {\n    return `This action updates a #${id} reservation`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} reservation`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReserveRoomDTO.html":{"url":"classes/ReserveRoomDTO.html","title":"class - ReserveRoomDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReserveRoomDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rooms/dto/reserve-room.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checkIn\n                            \n                            \n                                checkOut\n                            \n                            \n                                guestCnt\n                            \n                            \n                                paymentId\n                            \n                            \n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rooms/dto/reserve-room.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rooms/dto/reserve-room.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            guestCnt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rooms/dto/reserve-room.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paymentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rooms/dto/reserve-room.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rooms/dto/reserve-room.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DateDiff, DateRange } from 'src/common/datetime.utils';\n\nexport class ReserveRoomDTO {\n  guestCnt: number;\n  checkIn: Date;\n  checkOut: Date;\n  price: number;\n  paymentId: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Review.html":{"url":"classes/Review.html","title":"class - Review","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Review\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/entities/review.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CoreEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                guest\n                            \n                            \n                                ratings\n                            \n                            \n                                room\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            guest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/reviews/entities/review.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ratings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Rating[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/reviews/entities/review.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            room\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Room\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/reviews/entities/review.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:15\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CoreEntity } from 'src/common/entities/core.entity';\nimport { Room } from 'src/rooms/entities/room.entity';\nimport { User } from 'src/users/entities/user.entity';\nimport { Entity, ManyToOne, OneToMany } from 'typeorm';\nimport { Rating } from './rating.entity';\n\n@Entity()\nexport class Review extends CoreEntity {\n  @ManyToOne(\n    type => User,\n    user => user.reviews,\n  )\n  guest: User;\n\n  @ManyToOne(\n    type => Room,\n    room => room.reviews,\n  )\n  room: Room;\n\n  // Inverse side Relation\n  @OneToMany(\n    type => Rating,\n    rating => rating.review,\n  )\n  ratings: Rating[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ReviewsController.html":{"url":"controllers/ReviewsController.html","title":"controller - ReviewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ReviewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/reviews.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                reviews\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createReviewDto: CreateReviewDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/reviews/reviews.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createReviewDto\n                                    \n                                                CreateReviewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/reviews/reviews.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/reviews/reviews.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/reviews/reviews.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateReviewDto: UpdateReviewDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/reviews/reviews.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateReviewDto\n                                    \n                                                UpdateReviewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Put, Param, Delete } from '@nestjs/common';\nimport { ReviewsService } from './reviews.service';\nimport { CreateReviewDto } from './dto/create-review.dto';\nimport { UpdateReviewDto } from './dto/update-review.dto';\n\n@Controller('reviews')\nexport class ReviewsController {\n  constructor(private readonly reviewsService: ReviewsService) {}\n\n  @Post()\n  create(@Body() createReviewDto: CreateReviewDto) {\n    return this.reviewsService.create(createReviewDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.reviewsService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.reviewsService.findOne(+id);\n  }\n\n  @Put(':id')\n  update(@Param('id') id: string, @Body() updateReviewDto: UpdateReviewDto) {\n    return this.reviewsService.update(+id, updateReviewDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.reviewsService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReviewsModule.html":{"url":"modules/ReviewsModule.html","title":"module - ReviewsModule","body":"\n                   \n\n\n\n\n    Modules\n    ReviewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReviewsModule\n\n\n\ncluster_ReviewsModule_providers\n\n\n\n\nReviewsService\n\nReviewsService\n\n\n\nReviewsModule\n\nReviewsModule\n\nReviewsModule -->\n\nReviewsService->ReviewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/reviews/reviews.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ReviewsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ReviewsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ReviewsService } from './reviews.service';\nimport { ReviewsController } from './reviews.controller';\n\n@Module({\n  controllers: [ReviewsController],\n  providers: [ReviewsService]\n})\nexport class ReviewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReviewsService.html":{"url":"injectables/ReviewsService.html","title":"injectable - ReviewsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ReviewsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/reviews.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createReviewDto: CreateReviewDto)\n                \n            \n\n\n            \n                \n                    Defined in src/reviews/reviews.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createReviewDto\n                                    \n                                                CreateReviewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/reviews/reviews.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/reviews/reviews.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/reviews/reviews.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateReviewDto: UpdateReviewDto)\n                \n            \n\n\n            \n                \n                    Defined in src/reviews/reviews.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateReviewDto\n                                    \n                                                UpdateReviewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateReviewDto } from './dto/create-review.dto';\nimport { UpdateReviewDto } from './dto/update-review.dto';\n\n@Injectable()\nexport class ReviewsService {\n  create(createReviewDto: CreateReviewDto) {\n    return 'This action adds a new review';\n  }\n\n  findAll() {\n    return `This action returns all reviews`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} review`;\n  }\n\n  update(id: number, updateReviewDto: UpdateReviewDto) {\n    return `This action updates a #${id} review`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} review`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RoomsController.html":{"url":"controllers/RoomsController.html","title":"controller - RoomsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RoomsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rooms/rooms.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                rooms\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                    Async\n                                reserve\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createRoomDto: CreateRoomDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/rooms/rooms.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRoomDto\n                                    \n                                                CreateRoomDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/rooms/rooms.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/rooms/rooms.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/rooms/rooms.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            reserve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reserve(roomId: number, undefined, reserveRoomDTO: ReserveRoomDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':id')\n                \n            \n\n            \n                \n                    Defined in src/rooms/rooms.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roomId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reserveRoomDTO\n                                    \n                                                ReserveRoomDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateRoomDto: UpdateRoomDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/rooms/rooms.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateRoomDto\n                                    \n                                                UpdateRoomDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Put,\n  Param,\n  Delete,\n  Req,\n} from '@nestjs/common';\nimport { RoomsService } from './rooms.service';\nimport { CreateRoomDto } from './dto/create-room.dto';\nimport { UpdateRoomDto } from './dto/update-room.dto';\nimport { ReserveRoomDTO } from './dto/reserve-room.dto';\nimport { Reservation } from 'src/reservations/entities/reservation.entity';\n\n@Controller('rooms')\nexport class RoomsController {\n  constructor(private readonly roomsService: RoomsService) {}\n\n  @Post()\n  create(@Body() createRoomDto: CreateRoomDto) {\n    return this.roomsService.create(createRoomDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.roomsService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.roomsService.findOne(+id);\n  }\n\n  @Put(':id')\n  update(@Param('id') id: string, @Body() updateRoomDto: UpdateRoomDto) {\n    return this.roomsService.update(+id, updateRoomDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.roomsService.remove(+id);\n  }\n\n  @Post(':id')\n  async reserve(\n    @Param('id') roomId: number,\n    @Req() { user },\n    @Body() reserveRoomDTO: ReserveRoomDTO,\n  ): Promise {\n    return this.roomsService.reserve(roomId, reserveRoomDTO, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoomsModule.html":{"url":"modules/RoomsModule.html","title":"module - RoomsModule","body":"\n                   \n\n\n\n\n    Modules\n    RoomsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RoomsModule\n\n\n\ncluster_RoomsModule_providers\n\n\n\n\nRoomsService\n\nRoomsService\n\n\n\nRoomsModule\n\nRoomsModule\n\nRoomsModule -->\n\nRoomsService->RoomsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/rooms/rooms.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoomsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RoomsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RoomsService } from './rooms.service';\nimport { RoomsController } from './rooms.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Room } from './entities/room.entity';\nimport { Reservation } from 'src/reservations/entities/reservation.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Room, Reservation])],\n  controllers: [RoomsController],\n  providers: [RoomsService],\n})\nexport class RoomsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoomsService.html":{"url":"injectables/RoomsService.html","title":"injectable - RoomsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoomsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rooms/rooms.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                    Async\n                                reserve\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roomRepository: Repository, reservationRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/rooms/rooms.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roomRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reservationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createRoomDto: CreateRoomDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rooms/rooms.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRoomDto\n                                    \n                                                CreateRoomDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/rooms/rooms.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/rooms/rooms.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/rooms/rooms.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            reserve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reserve(roomId: number, reserveRoomDTO: ReserveRoomDTO, guest: User)\n                \n            \n\n\n            \n                \n                    Defined in src/rooms/rooms.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roomId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reserveRoomDTO\n                                    \n                                                ReserveRoomDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    guest\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateRoomDto: UpdateRoomDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rooms/rooms.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateRoomDto\n                                    \n                                                UpdateRoomDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Reservation } from 'src/reservations/entities/reservation.entity';\nimport { User } from 'src/users/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { CreateRoomDto } from './dto/create-room.dto';\nimport { ReserveRoomDTO } from './dto/reserve-room.dto';\nimport { UpdateRoomDto } from './dto/update-room.dto';\nimport { Room } from './entities/room.entity';\n\n@Injectable()\nexport class RoomsService {\n  constructor(\n    @InjectRepository(Room)\n    private readonly roomRepository: Repository,\n    @InjectRepository(Reservation)\n    private readonly reservationRepository: Repository,\n  ) {}\n\n  create(createRoomDto: CreateRoomDto) {\n    return 'This action adds a new room';\n  }\n\n  findAll() {\n    return `This action returns all rooms`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} room`;\n  }\n\n  update(id: number, updateRoomDto: UpdateRoomDto) {\n    return `This action updates a #${id} room`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} room`;\n  }\n\n  async reserve(\n    roomId: number,\n    reserveRoomDTO: ReserveRoomDTO,\n    guest: User,\n  ): Promise {\n    const room = await this.roomRepository.findOne(roomId);\n    const reservation = room.reserve(reserveRoomDTO, guest);\n    return await this.reservationRepository.create(reservation);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Rule.html":{"url":"classes/Rule.html","title":"class - Rule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Rule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rooms/entities/rule.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CoreEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                rooms\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'text', nullable: true})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/rooms/entities/rule.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/rooms/entities/rule.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rooms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Room[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/rooms/entities/rule.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:15\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\nimport { CoreEntity } from 'src/common/entities/core.entity';\nimport { Column, Entity, ManyToMany } from 'typeorm';\nimport { Room } from './room.entity';\n\n@Entity()\nexport class Rule extends CoreEntity {\n  @Column()\n  @IsString()\n  name: string;\n\n  @Column({ type: 'text', nullable: true })\n  @IsString()\n  description: string;\n\n  @ManyToMany(\n    type => Room,\n    room => room.rules,\n  )\n  rooms: Room[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaxStrategy.html":{"url":"interfaces/TaxStrategy.html","title":"interface - TaxStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TaxStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/countries/taxStrategy.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        calculateTax\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        calculateTax\n                                    \n                                \n                                \n                                    \n                                        calculateTax:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Room } from 'src/rooms/entities/room.entity';\nimport { CountryName } from './entities/country.entity';\n\ninterface TaxStrategy {\n  calculateTax: (\n    room: Room,\n    stayDays: number,\n  ) => { percent: number; amount: number };\n}\n\nexport const taxStrategies: Record = {\n  SouthKorea: {\n    calculateTax: (room, stayDays) => ({ percent: 10, amount: 0 }),\n  },\n  Japan: {\n    calculateTax: (room, stayDays) => ({ percent: 5, amount: 0 }),\n  },\n  Bermuda: {\n    calculateTax: (room, stayDays) => ({ percent: 5, amount: 0 }),\n  },\n  Brazil: {\n    calculateTax: (room, stayDays) => ({ percent: 5, amount: 0 }),\n  },\n  BritishVirginIslands: {\n    calculateTax: (room, stayDays) => ({ percent: 5, amount: 0 }),\n  },\n  Canada: {\n    calculateTax: (room, stayDays) => ({ percent: 5, amount: 0 }),\n  },\n  France: {\n    calculateTax: (room, stayDays) => ({ percent: 5, amount: 0 }),\n  },\n  Germany: {\n    calculateTax: (room, stayDays) => ({ percent: 5, amount: 0 }),\n  },\n  India: {\n    calculateTax: (room, stayDays) => ({ percent: 5, amount: 0 }),\n  },\n  Italy: {\n    calculateTax: (room, stayDays) => ({ percent: 5, amount: 0 }),\n  },\n  Lithuania: {\n    calculateTax: (room, stayDays) => ({ percent: 5, amount: 0 }),\n  },\n  Mexico: {\n    calculateTax: (room, stayDays) => ({ percent: 5, amount: 0 }),\n  },\n  Netherlands: {\n    calculateTax: (room, stayDays) => ({ percent: 5, amount: 0 }),\n  },\n  Portugal: {\n    calculateTax: (room, stayDays) => ({ percent: 5, amount: 0 }),\n  },\n  Switzerland: {\n    calculateTax: (room, stayDays) => ({ percent: 5, amount: 0 }),\n  },\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Todo.html":{"url":"classes/Todo.html","title":"class - Todo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Todo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/entities/todo.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                isDone\n                            \n                            \n                                    Optional\n                                longDesc\n                            \n                            \n                                shortDesc\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/todo/entities/todo.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/todo/entities/todo.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'boolean', default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/todo/entities/todo.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            longDesc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/todo/entities/todo.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shortDesc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/todo/entities/todo.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/todo/entities/todo.entity.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity('Todo')\nexport class Todo {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ length: 50 })\n  shortDesc: string;\n\n  @Column({ nullable: true })\n  longDesc?: string;\n\n  @Column({ type: 'boolean', default: false })\n  isDone: boolean;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TodoController.html":{"url":"controllers/TodoController.html","title":"controller - TodoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TodoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/todo.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                todo\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTodo\n                            \n                            \n                                    Async\n                                deleteTodo\n                            \n                            \n                                    Async\n                                editTodo\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                getTodolist\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createTodo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTodo(createTodoDTO: CreateTodoDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/todo/todo.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTodoDTO\n                                    \n                                                CreateTodoDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteTodo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTodo(todoId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/todo/todo.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    todoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editTodo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editTodo(updateTodoDTO: UpdateTodoDTO, todoId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/todo/todo.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateTodoDTO\n                                    \n                                                UpdateTodoDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    todoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(todoId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/todo/todo.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    todoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTodolist\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTodolist()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/todo/todo.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n} from '@nestjs/common';\nimport { CreateTodoDTO } from './dto/create-todo.dto';\nimport { UpdateTodoDTO } from './dto/update-todo.dto';\nimport { Todo } from './entities/todo.entity';\nimport { TodoService } from './todo.service';\n\n@Controller('todo')\nexport class TodoController {\n  constructor(private readonly todoService: TodoService) {}\n\n  @Get()\n  async getTodolist(): Promise {\n    return this.todoService.getTodolist();\n  }\n\n  @Post()\n  async createTodo(@Body() createTodoDTO: CreateTodoDTO): Promise {\n    return this.todoService.createTodo(createTodoDTO);\n  }\n\n  @Get(':id')\n  async findById(@Param('id') todoId: number): Promise {\n    return this.todoService.findById(todoId);\n  }\n\n  @Patch(':id')\n  async editTodo(\n    @Body() updateTodoDTO: UpdateTodoDTO,\n    @Param('id') todoId: number,\n  ): Promise {\n    return this.todoService.editTodo(todoId, updateTodoDTO);\n  }\n\n  @Delete(':id')\n  async deleteTodo(@Param('id') todoId: number) {\n    return this.todoService.deleteTodo(todoId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TodoModule.html":{"url":"modules/TodoModule.html","title":"module - TodoModule","body":"\n                   \n\n\n\n\n    Modules\n    TodoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TodoModule\n\n\n\ncluster_TodoModule_providers\n\n\n\n\nTodoService\n\nTodoService\n\n\n\nTodoModule\n\nTodoModule\n\nTodoModule -->\n\nTodoService->TodoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/todo/todo.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TodoService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TodoController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Todo } from './entities/todo.entity';\nimport { TodoController } from './todo.controller';\nimport { TodoService } from './todo.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Todo])],\n  controllers: [TodoController],\n  providers: [TodoService],\n})\nexport class TodoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TodoService.html":{"url":"injectables/TodoService.html","title":"injectable - TodoService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TodoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/todo.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTodo\n                            \n                            \n                                    Async\n                                deleteTodo\n                            \n                            \n                                    Async\n                                editTodo\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                getTodolist\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(todoRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/todo/todo.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        todoRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createTodo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTodo(createTodoDTO: CreateTodoDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/todo/todo.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTodoDTO\n                                    \n                                                CreateTodoDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteTodo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTodo(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/todo/todo.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editTodo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editTodo(id: number, updateTodoDTO: UpdateTodoDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/todo/todo.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTodoDTO\n                                    \n                                                UpdateTodoDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/todo/todo.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTodolist\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTodolist()\n                \n            \n\n\n            \n                \n                    Defined in src/todo/todo.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateTodoDTO } from './dto/create-todo.dto';\nimport { UpdateTodoDTO } from './dto/update-todo.dto';\nimport { Todo } from './entities/todo.entity';\n\n@Injectable()\nexport class TodoService {\n  constructor(\n    @InjectRepository(Todo) private todoRepository: Repository,\n  ) {}\n\n  async getTodolist(): Promise {\n    return await this.todoRepository.find();\n  }\n\n  async createTodo(createTodoDTO: CreateTodoDTO): Promise {\n    return await this.todoRepository.save(createTodoDTO);\n  }\n\n  async findById(id: number): Promise {\n    return await this.todoRepository.findOne({ id });\n  }\n\n  async editTodo(id: number, updateTodoDTO: UpdateTodoDTO): Promise {\n    const todo = await this.todoRepository.findOne({ id });\n    for (const key in updateTodoDTO) {\n      todo[key] = updateTodoDTO[key];\n    }\n    return await this.todoRepository.save(todo);\n  }\n\n  async deleteTodo(id: number) {\n    return await this.todoRepository.delete({ id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateConversationDto.html":{"url":"classes/UpdateConversationDto.html","title":"class - UpdateConversationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateConversationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/conversations/dto/update-conversation.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateConversationDto } from './create-conversation.dto';\n\nexport class UpdateConversationDto extends PartialType(CreateConversationDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDiscountDto.html":{"url":"classes/UpdateDiscountDto.html","title":"class - UpdateDiscountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDiscountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/dto/update-discount.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateDiscountDto } from './create-discount.dto';\n\nexport class UpdateDiscountDto extends PartialType(CreateDiscountDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateListDto.html":{"url":"classes/UpdateListDto.html","title":"class - UpdateListDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateListDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lists/dto/update-list.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateListDto } from './create-list.dto';\n\nexport class UpdateListDto extends PartialType(CreateListDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePaymentDto.html":{"url":"classes/UpdatePaymentDto.html","title":"class - UpdatePaymentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePaymentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payments/dto/update-payment.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePaymentDto } from './create-payment.dto';\n\nexport class UpdatePaymentDto extends PartialType(CreatePaymentDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePhotoDto.html":{"url":"classes/UpdatePhotoDto.html","title":"class - UpdatePhotoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePhotoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/photos/dto/update-photo.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePhotoDto } from './create-photo.dto';\n\nexport class UpdatePhotoDto extends PartialType(CreatePhotoDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateReservationDto.html":{"url":"classes/UpdateReservationDto.html","title":"class - UpdateReservationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateReservationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reservations/dto/update-reservation.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateReservationDto } from './create-reservation.dto';\n\nexport class UpdateReservationDto extends PartialType(CreateReservationDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateReviewDto.html":{"url":"classes/UpdateReviewDto.html","title":"class - UpdateReviewDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateReviewDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/dto/update-review.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateReviewDto } from './create-review.dto';\n\nexport class UpdateReviewDto extends PartialType(CreateReviewDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoomDto.html":{"url":"classes/UpdateRoomDto.html","title":"class - UpdateRoomDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoomDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rooms/dto/update-room.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateRoomDto } from './create-room.dto';\n\nexport class UpdateRoomDto extends PartialType(CreateRoomDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTodoDTO.html":{"url":"classes/UpdateTodoDTO.html","title":"class - UpdateTodoDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTodoDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/dto/update-todo.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { IsBoolean, IsString, Length } from 'class-validator';\nimport { CreateTodoDTO } from './create-todo.dto';\n\nexport class UpdateTodoDTO extends PartialType(CreateTodoDTO) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CoreEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatar\n                            \n                            \n                                bio\n                            \n                            \n                                conversations\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                isStaff\n                            \n                            \n                                lastLogin\n                            \n                            \n                                lastName\n                            \n                            \n                                messages\n                            \n                            \n                                password\n                            \n                            \n                                payments\n                            \n                            \n                                reservations\n                            \n                            \n                                reviews\n                            \n                            \n                                rooms\n                            \n                            \n                                saveLists\n                            \n                            \n                                verified\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkPassword\n                            \n                            \n                                    Async\n                                hashPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/entities/user.entity.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bio\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 500, nullable: true})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/entities/user.entity.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conversations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Conversation[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/entities/user.entity.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({unique: true})@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/entities/user.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/entities/user.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isStaff\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false})@IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/entities/user.entity.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'datetime', default: undefined})@IsDate()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/entities/user.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/entities/user.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Message[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/entities/user.entity.ts:94\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({select: false})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/entities/user.entity.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            payments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Payment[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/entities/user.entity.ts:100\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reservations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Reservation[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/entities/user.entity.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reviews\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Review[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/entities/user.entity.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rooms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Room[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/entities/user.entity.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveLists\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         List[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/entities/user.entity.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verified\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false})@IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/entities/user.entity.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:15\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkPassword(aPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/entities/user.entity.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            hashPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hashPassword()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @BeforeInsert()@BeforeUpdate()\n                \n            \n\n            \n                \n                    Defined in src/users/entities/user.entity.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsDate, IsEmail, IsString } from 'class-validator';\nimport { CoreEntity } from 'src/common/entities/core.entity';\nimport { Payment } from 'src/payments/entities/payment.entity';\nimport { Reservation } from 'src/reservations/entities/reservation.entity';\nimport { Room } from 'src/rooms/entities/room.entity';\nimport {\n  BeforeInsert,\n  BeforeUpdate,\n  Column,\n  Entity,\n  ManyToMany,\n  OneToMany,\n} from 'typeorm';\nimport * as bcrypt from 'bcrypt';\nimport { InternalServerErrorException } from '@nestjs/common';\nimport { Conversation } from 'src/conversations/entities/conversation.entity';\nimport { Message } from 'src/conversations/entities/message.entity';\nimport { List } from 'src/lists/entities/list.entity';\nimport { Review } from 'src/reviews/entities/review.entity';\n\n@Entity()\nexport class User extends CoreEntity {\n  @Column()\n  @IsString()\n  firstName: string;\n\n  @Column()\n  @IsString()\n  lastName: string;\n\n  @Column({ unique: true })\n  @IsEmail()\n  email: string;\n\n  @Column({ select: false })\n  @IsString()\n  password: string;\n\n  @Column({ type: 'datetime', default: () => 'CURRENT_TIMESTAMP' })\n  @IsDate()\n  lastLogin: Date;\n\n  @Column({ default: false })\n  @IsBoolean()\n  isStaff: boolean;\n\n  @Column({ default: false })\n  @IsBoolean()\n  verified: boolean;\n\n  @Column({ length: 500, nullable: true })\n  @IsString()\n  bio: string;\n\n  @Column({ nullable: true })\n  @IsString()\n  avatar: string;\n\n  // ===== Inverse side Relation =====\n  @OneToMany(\n    type => List,\n    list => list.owner,\n  )\n  saveLists: List[];\n\n  @OneToMany(\n    type => Room,\n    room => room.host,\n  )\n  rooms: Room[];\n\n  @ManyToMany(\n    type => Reservation,\n    reservation => reservation.guests,\n  )\n  reservations: Reservation[];\n\n  @OneToMany(\n    type => Review,\n    review => review.guest,\n  )\n  reviews: Review[];\n\n  @ManyToMany(\n    type => Conversation,\n    conversation => conversation.participants,\n  )\n  conversations: Conversation[];\n\n  @OneToMany(\n    type => Message,\n    message => message.sender,\n  )\n  messages: Message[];\n\n  @OneToMany(\n    type => Payment,\n    payment => payment.user,\n  )\n  payments: Payment[];\n\n  // ===== Security =====\n  @BeforeInsert()\n  @BeforeUpdate()\n  async hashPassword(): Promise {\n    if (this.password) {\n      try {\n        this.password = await bcrypt.hash(this.password, 10);\n      } catch (e) {\n        console.log(e);\n        throw new InternalServerErrorException();\n      }\n    }\n  }\n\n  // ===== Methods =====\n  async checkPassword(aPassword: string): Promise {\n    try {\n      const ok = await bcrypt.compare(aPassword, this.password);\n      return ok;\n    } catch (e) {\n      console.log(e);\n      throw new InternalServerErrorException();\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Put,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  async create(@Body() createUserDto: CreateUserDto): Promise {\n    const user = await this.usersService.create(createUserDto);\n    if (user) return true;\n    return false;\n  }\n\n  @Get()\n  async findAll(): Promise {\n    return await this.usersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(+id);\n  }\n\n  @Put(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(+id, updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneByEmail\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n  ) {}\n\n  async create(createUserDto: CreateUserDto): Promise {\n    const { email } = createUserDto;\n    const alreadyExist = await this.userRepository.findOne({ email });\n    if (alreadyExist)\n      throw new BadRequestException('이미 존재하는 이메일입니다.');\n\n    const user = this.userRepository.create(createUserDto);\n    return await this.userRepository.save(user);\n  }\n\n  async findAll(): Promise {\n    return await this.userRepository.find();\n  }\n\n  async findOne(id: number): Promise {\n    return await this.userRepository.findOne({ id });\n  }\n\n  async findOneByEmail(email: string): Promise {\n    return await this.userRepository.findOne(\n      { email },\n      { select: ['id', 'email', 'password'] },\n    );\n  }\n\n  update(id: number, updateUserDto: UpdateUserDto) {\n    return `This action updates a #${id} user`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} user`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Verification.html":{"url":"classes/Verification.html","title":"class - Verification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Verification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/varification.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CoreEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                user\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/entities/varification.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, {onDelete: 'CASCADE'})@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/entities/varification.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:15\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createCode\n                        \n                        \n                    \n                \n            \n            \n                \ncreateCode()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @BeforeInsert()\n                \n            \n\n            \n                \n                    Defined in src/users/entities/varification.entity.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CoreEntity } from 'src/common/entities/core.entity';\nimport { BeforeInsert, Column, JoinColumn, OneToOne } from 'typeorm';\nimport { User } from './user.entity';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport class Verification extends CoreEntity {\n  @Column()\n  code: string;\n\n  @OneToOne(type => User, { onDelete: 'CASCADE' })\n  @JoinColumn()\n  user: User;\n\n  @BeforeInsert()\n  createCode(): void {\n    this.code = uuidv4();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/datetime.utils.ts\n            \n            class\n            DateRange\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/common/datetime.utils.ts\n            \n            variable\n            DateDiff\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/entities/core.entity.ts\n            \n            class\n            CoreEntity\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            DATABASE_CONNECTION_DEV\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            DATABASE_CONNECTION_PROD\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            DATABASE_CONNECTION_TEST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            PHOTO_REPOSITORY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/conversations/conversations.controller.ts\n            \n            controller\n            ConversationsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/conversations/conversations.service.ts\n            \n            injectable\n            ConversationsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/conversations/dto/create-conversation.dto.ts\n            \n            class\n            CreateConversationDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/conversations/dto/update-conversation.dto.ts\n            \n            class\n            UpdateConversationDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/conversations/entities/conversation.entity.ts\n            \n            class\n            Conversation\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/conversations/entities/message.entity.ts\n            \n            class\n            Message\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/countries/countries.controller.ts\n            \n            controller\n            CountriesController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/countries/countries.service.ts\n            \n            injectable\n            CountriesService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/countries/dto/create-country.dto.ts\n            \n            class\n            CreateCountryDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/countries/entities/country.entity.ts\n            \n            class\n            Country\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/countries/taxStrategy.ts\n            \n            interface\n            TaxStrategy\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/countries/taxStrategy.ts\n            \n            variable\n            taxStrategies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/discounts/discountStrategy.ts\n            \n            interface\n            DiscountStrategy\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/discounts/discountStrategy.ts\n            \n            variable\n            discountStrategies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/discounts/discounts.controller.ts\n            \n            controller\n            DiscountsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/discounts/discounts.service.ts\n            \n            injectable\n            DiscountsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/discounts/dto/create-discount.dto.ts\n            \n            class\n            CreateDiscountDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/discounts/dto/update-discount.dto.ts\n            \n            class\n            UpdateDiscountDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/discounts/entities/discount.entity.ts\n            \n            class\n            Discount\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/lists/dto/create-list.dto.ts\n            \n            class\n            CreateListDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lists/dto/update-list.dto.ts\n            \n            class\n            UpdateListDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lists/entities/list.entity.ts\n            \n            class\n            List\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lists/lists.controller.ts\n            \n            controller\n            ListsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lists/lists.service.ts\n            \n            injectable\n            ListsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/payments/dto/create-payment.dto.ts\n            \n            class\n            CreatePaymentDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/payments/dto/update-payment.dto.ts\n            \n            class\n            UpdatePaymentDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/payments/entities/payment.entity.ts\n            \n            class\n            Payment\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/payments/payments.controller.ts\n            \n            controller\n            PaymentsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/payments/payments.service.ts\n            \n            injectable\n            PaymentsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/photos/dto/create-photo.dto.ts\n            \n            class\n            CreatePhotoDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/photos/dto/update-photo.dto.ts\n            \n            class\n            UpdatePhotoDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/photos/entities/photo.entity.ts\n            \n            class\n            Photo\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/photos/photos.controller.ts\n            \n            controller\n            PhotosController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/photos/photos.service.ts\n            \n            injectable\n            PhotosService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/reservations/dto/create-reservation.dto.ts\n            \n            class\n            CreateReservationDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/reservations/dto/update-reservation.dto.ts\n            \n            class\n            UpdateReservationDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/reservations/entities/reservation.entity.ts\n            \n            class\n            Reservation\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/reservations/entities/reservation.entity.ts\n            \n            interface\n            IReservationConstructor\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/reservations/reservations.controller.ts\n            \n            controller\n            ReservationsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/reservations/reservations.service.ts\n            \n            injectable\n            ReservationsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/reviews/dto/create-review.dto.ts\n            \n            class\n            CreateReviewDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/reviews/dto/update-review.dto.ts\n            \n            class\n            UpdateReviewDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/reviews/entities/rating.entity.ts\n            \n            class\n            Rating\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/reviews/entities/review.entity.ts\n            \n            class\n            Review\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/reviews/reviews.controller.ts\n            \n            controller\n            ReviewsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/reviews/reviews.service.ts\n            \n            injectable\n            ReviewsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/rooms/dto/create-room.dto.ts\n            \n            class\n            CreateRoomDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/rooms/dto/reserve-room.dto.ts\n            \n            class\n            ReserveRoomDTO\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/rooms/dto/update-room.dto.ts\n            \n            class\n            UpdateRoomDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/rooms/entities/amenity.entity.ts\n            \n            class\n            Amenity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/rooms/entities/facility.entity.ts\n            \n            class\n            Facility\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/rooms/entities/room.entity.ts\n            \n            class\n            Room\n            \n                0 %\n                (0/36)\n            \n        \n        \n            \n                \n                src/rooms/entities/room.entity.ts\n            \n            interface\n            IPriceDetail\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/rooms/entities/rule.entity.ts\n            \n            class\n            Rule\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/rooms/rooms.controller.ts\n            \n            controller\n            RoomsController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/rooms/rooms.service.ts\n            \n            injectable\n            RoomsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/todo/dto/create-todo.dto.ts\n            \n            class\n            CreateTodoDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/todo/dto/update-todo.dto.ts\n            \n            class\n            UpdateTodoDTO\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/todo/entities/todo.entity.ts\n            \n            class\n            Todo\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/todo/todo.controller.ts\n            \n            controller\n            TodoController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/todo/todo.service.ts\n            \n            injectable\n            TodoService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/users/entities/varification.entity.ts\n            \n            class\n            Verification\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.5\n        \n            @nestjs/config : ^0.6.1\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/mapped-types : ^0.1.1\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            @nestjs/swagger : ^4.7.10\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            bcrypt : ^5.0.0\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.13.0\n        \n            dotenv : ^8.2.0\n        \n            mysql : ^2.18.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            swagger-ui-express : ^4.1.6\n        \n            typeorm : ^0.2.30\n        \n            uuid : ^8.3.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CountryName   (src/.../country.entity.ts)\n                        \n                        \n                            DiscountType   (src/.../discount.entity.ts)\n                        \n                        \n                            RatingCategory   (src/.../rating.entity.ts)\n                        \n                        \n                            ReservationStatus   (src/.../reservation.entity.ts)\n                        \n                        \n                            RoomType   (src/.../room.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/countries/entities/country.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        CountryName\n                    \n                \n                        \n                            \n                                 SouthKorea\n                            \n                        \n                        \n                            \n                                Value : SouthKorea\n                            \n                        \n                        \n                            \n                                 Japan\n                            \n                        \n                        \n                            \n                                Value : Japan\n                            \n                        \n                        \n                            \n                                 Bermuda\n                            \n                        \n                        \n                            \n                                Value : Bermuda\n                            \n                        \n                        \n                            \n                                 Brazil\n                            \n                        \n                        \n                            \n                                Value : Brazil\n                            \n                        \n                        \n                            \n                                 BritishVirginIslands\n                            \n                        \n                        \n                            \n                                Value : BritishVirginIslands\n                            \n                        \n                        \n                            \n                                 Canada\n                            \n                        \n                        \n                            \n                                Value : Canada\n                            \n                        \n                        \n                            \n                                 France\n                            \n                        \n                        \n                            \n                                Value : France\n                            \n                        \n                        \n                            \n                                 Germany\n                            \n                        \n                        \n                            \n                                Value : Germany\n                            \n                        \n                        \n                            \n                                 India\n                            \n                        \n                        \n                            \n                                Value : India\n                            \n                        \n                        \n                            \n                                 Italy\n                            \n                        \n                        \n                            \n                                Value : Italy\n                            \n                        \n                        \n                            \n                                 Lithuania\n                            \n                        \n                        \n                            \n                                Value : Lithuania\n                            \n                        \n                        \n                            \n                                 Mexico\n                            \n                        \n                        \n                            \n                                Value : Mexico\n                            \n                        \n                        \n                            \n                                 Netherlands\n                            \n                        \n                        \n                            \n                                Value : Netherlands\n                            \n                        \n                        \n                            \n                                 Portugal\n                            \n                        \n                        \n                            \n                                Value : Portugal\n                            \n                        \n                        \n                            \n                                 Switzerland\n                            \n                        \n                        \n                            \n                                Value : Switzerland\n                            \n                        \n            \n        \n\n    src/discounts/entities/discount.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        DiscountType\n                    \n                \n                        \n                            \n                                 Week\n                            \n                        \n                        \n                            \n                                Value : Week\n                            \n                        \n                        \n                            \n                                 Month\n                            \n                        \n                        \n                            \n                                Value : Month\n                            \n                        \n                        \n                            \n                                 Special\n                            \n                        \n                        \n                            \n                                Value : Special\n                            \n                        \n            \n        \n\n    src/reviews/entities/rating.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        RatingCategory\n                    \n                \n                        \n                            \n                                 CLEANNESS\n                            \n                        \n                        \n                            \n                                Value : CLEANNESS\n                            \n                        \n                        \n                            \n                                 ACCURACY\n                            \n                        \n                        \n                            \n                                Value : ACCURACY\n                            \n                        \n                        \n                            \n                                 COMMUNICATION\n                            \n                        \n                        \n                            \n                                Value : COMMUNICATION\n                            \n                        \n                        \n                            \n                                 LOCATION\n                            \n                        \n                        \n                            \n                                Value : LOCATION\n                            \n                        \n                        \n                            \n                                 CHECKIN\n                            \n                        \n                        \n                            \n                                Value : CHECKIN\n                            \n                        \n                        \n                            \n                                 PRICE\n                            \n                        \n                        \n                            \n                                Value : PRICE\n                            \n                        \n            \n        \n\n    src/reservations/entities/reservation.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        ReservationStatus\n                    \n                \n                        \n                            \n                                 REQUESTED\n                            \n                        \n                        \n                            \n                                Value : REQUESTED\n                            \n                        \n                        \n                            \n                                 ACCEPTED\n                            \n                        \n                        \n                            \n                                Value : ACCEPTED\n                            \n                        \n                        \n                            \n                                 REJECTED\n                            \n                        \n                        \n                            \n                                Value : REJECTED\n                            \n                        \n                        \n                            \n                                 FAEILED\n                            \n                        \n                        \n                            \n                                Value : FAEILED\n                            \n                        \n                        \n                            \n                                 CHECKEDIN\n                            \n                        \n                        \n                            \n                                Value : CHECKEDIN\n                            \n                        \n                        \n                            \n                                 CHECKEDOUT\n                            \n                        \n                        \n                            \n                                Value : CHECKEDOUT\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n                        \n                            \n                                Value : CANCELED\n                            \n                        \n            \n        \n\n    src/rooms/entities/room.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        RoomType\n                    \n                \n                        \n                            \n                                 Apartment\n                            \n                        \n                        \n                            \n                                Value : Apartment\n                            \n                        \n                        \n                            \n                                 House\n                            \n                        \n                        \n                            \n                                Value : House\n                            \n                        \n                        \n                            \n                                 SecondaryUnit\n                            \n                        \n                        \n                            \n                                Value : SecondaryUnit\n                            \n                        \n                        \n                            \n                                 UniqueSpace\n                            \n                        \n                        \n                            \n                                Value : UniqueSpace\n                            \n                        \n                        \n                            \n                                 BedAndBreakfast\n                            \n                        \n                        \n                            \n                                Value : BedAndBreakfast\n                            \n                        \n                        \n                            \n                                 BoutiqueHotel\n                            \n                        \n                        \n                            \n                                Value : BoutiqueHotel\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConversationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CountriesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DiscountsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ListsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PhotosModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReservationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReviewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoomsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TodoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ConversationsModule\n\n\n\ncluster_ConversationsModule_providers\n\n\n\ncluster_CountriesModule\n\n\n\ncluster_CountriesModule_providers\n\n\n\ncluster_DiscountsModule\n\n\n\ncluster_DiscountsModule_providers\n\n\n\ncluster_ListsModule\n\n\n\ncluster_ListsModule_providers\n\n\n\ncluster_PaymentsModule\n\n\n\ncluster_PaymentsModule_providers\n\n\n\ncluster_PhotosModule\n\n\n\ncluster_PhotosModule_providers\n\n\n\ncluster_ReservationsModule\n\n\n\ncluster_ReservationsModule_providers\n\n\n\ncluster_ReviewsModule\n\n\n\ncluster_ReviewsModule_providers\n\n\n\ncluster_RoomsModule\n\n\n\ncluster_RoomsModule_providers\n\n\n\ncluster_TodoModule\n\n\n\ncluster_TodoModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nConversationsModule\n\nConversationsModule\n\nAppModule -->\n\nConversationsModule->AppModule\n\n\n\n\n\nCountriesModule\n\nCountriesModule\n\nAppModule -->\n\nCountriesModule->AppModule\n\n\n\n\n\nDiscountsModule\n\nDiscountsModule\n\nAppModule -->\n\nDiscountsModule->AppModule\n\n\n\n\n\nListsModule\n\nListsModule\n\nAppModule -->\n\nListsModule->AppModule\n\n\n\n\n\nPaymentsModule\n\nPaymentsModule\n\nAppModule -->\n\nPaymentsModule->AppModule\n\n\n\n\n\nPhotosModule\n\nPhotosModule\n\nAppModule -->\n\nPhotosModule->AppModule\n\n\n\n\n\nReservationsModule\n\nReservationsModule\n\nAppModule -->\n\nReservationsModule->AppModule\n\n\n\n\n\nReviewsModule\n\nReviewsModule\n\nAppModule -->\n\nReviewsModule->AppModule\n\n\n\n\n\nRoomsModule\n\nRoomsModule\n\nAppModule -->\n\nRoomsModule->AppModule\n\n\n\n\n\nTodoModule\n\nTodoModule\n\nAppModule -->\n\nTodoModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nConversationsService\n\nConversationsService\n\nConversationsModule -->\n\nConversationsService->ConversationsModule\n\n\n\n\n\nCountriesService\n\nCountriesService\n\nCountriesModule -->\n\nCountriesService->CountriesModule\n\n\n\n\n\nDiscountsService\n\nDiscountsService\n\nDiscountsModule -->\n\nDiscountsService->DiscountsModule\n\n\n\n\n\nListsService\n\nListsService\n\nListsModule -->\n\nListsService->ListsModule\n\n\n\n\n\nPaymentsService\n\nPaymentsService\n\nPaymentsModule -->\n\nPaymentsService->PaymentsModule\n\n\n\n\n\nPhotosService\n\nPhotosService\n\nPhotosModule -->\n\nPhotosService->PhotosModule\n\n\n\n\n\nReservationsService\n\nReservationsService\n\nReservationsModule -->\n\nReservationsService->ReservationsModule\n\n\n\n\n\nReviewsService\n\nReviewsService\n\nReviewsModule -->\n\nReviewsService->ReviewsModule\n\n\n\n\n\nRoomsService\n\nRoomsService\n\nRoomsModule -->\n\nRoomsService->RoomsModule\n\n\n\n\n\nTodoService\n\nTodoService\n\nTodoModule -->\n\nTodoService->TodoModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    12 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    41 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DATABASE_CONNECTION_DEV   (src/.../constants.ts)\n                        \n                        \n                            DATABASE_CONNECTION_PROD   (src/.../constants.ts)\n                        \n                        \n                            DATABASE_CONNECTION_TEST   (src/.../constants.ts)\n                        \n                        \n                            DateDiff   (src/.../datetime.utils.ts)\n                        \n                        \n                            discountStrategies   (src/.../discountStrategy.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            PHOTO_REPOSITORY   (src/.../constants.ts)\n                        \n                        \n                            taxStrategies   (src/.../taxStrategy.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DATABASE_CONNECTION_DEV\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'DATABASE_CONNECTION_DEV' as const\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DATABASE_CONNECTION_PROD\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'DATABASE_CONNECTION_PROD' as const\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DATABASE_CONNECTION_TEST\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'DATABASE_CONNECTION_TEST' as const\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PHOTO_REPOSITORY\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'PHOTO_REPOSITORY' as const\n                        \n                    \n\n\n            \n        \n\n    src/common/datetime.utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DateDiff\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  inDays: function(d1: Date, d2: Date) {\n    const t2 = d2.getTime();\n    const t1 = d1.getTime();\n\n    return Math.trunc((t2 - t1) / (24 * 3600 * 1000));\n  },\n\n  inWeeks: function(d1: Date, d2: Date) {\n    const t2 = d2.getTime();\n    const t1 = d1.getTime();\n\n    return Math.trunc((t2 - t1) / (24 * 3600 * 1000 * 7));\n  },\n\n  inMonths: function(d1: Date, d2: Date) {\n    const d1Y = d1.getFullYear();\n    const d2Y = d2.getFullYear();\n    const d1M = d1.getMonth();\n    const d2M = d2.getMonth();\n\n    return d2M + 12 * d2Y - (d1M + 12 * d1Y);\n  },\n\n  inYears: function(d1: Date, d2: Date) {\n    return d2.getFullYear() - d1.getFullYear();\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/discounts/discountStrategy.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            discountStrategies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Record\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  Week: { isSatisfied: stayDays => (stayDays >= 7 ? true : false) },\n  Month: { isSatisfied: stayDays => (stayDays >= 28 ? true : false) },\n  Special: { isSatisfied: _ => true },\n}\n                        \n                    \n\n\n            \n        \n\n    src/auth/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  secret: process.env.JWT_SECRET || 'secretKey',\n}\n                        \n                    \n\n\n            \n        \n\n    src/countries/taxStrategy.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            taxStrategies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Record\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  SouthKorea: {\n    calculateTax: (room, stayDays) => ({ percent: 10, amount: 0 }),\n  },\n  Japan: {\n    calculateTax: (room, stayDays) => ({ percent: 5, amount: 0 }),\n  },\n  Bermuda: {\n    calculateTax: (room, stayDays) => ({ percent: 5, amount: 0 }),\n  },\n  Brazil: {\n    calculateTax: (room, stayDays) => ({ percent: 5, amount: 0 }),\n  },\n  BritishVirginIslands: {\n    calculateTax: (room, stayDays) => ({ percent: 5, amount: 0 }),\n  },\n  Canada: {\n    calculateTax: (room, stayDays) => ({ percent: 5, amount: 0 }),\n  },\n  France: {\n    calculateTax: (room, stayDays) => ({ percent: 5, amount: 0 }),\n  },\n  Germany: {\n    calculateTax: (room, stayDays) => ({ percent: 5, amount: 0 }),\n  },\n  India: {\n    calculateTax: (room, stayDays) => ({ percent: 5, amount: 0 }),\n  },\n  Italy: {\n    calculateTax: (room, stayDays) => ({ percent: 5, amount: 0 }),\n  },\n  Lithuania: {\n    calculateTax: (room, stayDays) => ({ percent: 5, amount: 0 }),\n  },\n  Mexico: {\n    calculateTax: (room, stayDays) => ({ percent: 5, amount: 0 }),\n  },\n  Netherlands: {\n    calculateTax: (room, stayDays) => ({ percent: 5, amount: 0 }),\n  },\n  Portugal: {\n    calculateTax: (room, stayDays) => ({ percent: 5, amount: 0 }),\n  },\n  Switzerland: {\n    calculateTax: (room, stayDays) => ({ percent: 5, amount: 0 }),\n  },\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
