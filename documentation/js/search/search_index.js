var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.16,1,1.689]],["body/controllers/AppController.html",[0,1.724,1,2.51,2,1.326,3,0.467,4,0.393,5,0.393,6,2.625,7,0.82,8,1.944,9,4.018,10,1.692,11,0.045,12,1.177,13,3.229,14,1.495,15,1.944,16,0.82,17,0.928,18,2.161,19,2.625,20,0.467,21,0.025,22,2.227,23,2.227,24,1.495,25,3.229,26,0.026,27,0.034,28,0.026]],["title/modules/AppModule.html",[29,1.16,30,1.689]],["body/modules/AppModule.html",[1,2.413,2,1.424,3,0.353,4,0.297,5,0.297,11,0.046,16,0.97,17,0.7,18,2.235,19,1.982,20,0.353,21,0.019,26,0.02,27,0.028,28,0.02,29,1.657,30,3.131,31,1.129,32,1.129,33,1.457,34,1.457,35,1.129,36,2.413,37,1.457,38,1.982,39,1.982,40,1.982,41,2.531,42,2.531,43,2.073,44,1.457,45,1.457,46,2.439,47,2.82,48,2.439,49,1.982,50,1.982,51,1.457,52,2.439,53,2.439,54,2.439,55,2.439,56,2.439,57,1.982,58,2.439]],["title/injectables/AppService.html",[18,1.308,59,1.16]],["body/injectables/AppService.html",[3,0.499,4,0.42,5,0.42,7,0.876,8,2.028,9,4.119,11,0.045,12,1.258,14,1.596,15,2.028,16,0.673,17,0.991,18,2.028,20,0.499,21,0.027,24,1.596,26,0.028,27,0.035,28,0.028,59,1.799,60,2.061,61,2.804,62,3.449,63,3.449,64,3.449]],["title/classes/CreateTodoDTO.html",[21,0.022,65,1.308]],["body/classes/CreateTodoDTO.html",[3,0.402,4,0.338,5,0.338,7,0.706,10,2.269,11,0.044,12,1.579,15,2.155,16,0.542,20,0.402,21,0.029,26,0.022,27,0.031,28,0.022,65,1.759,66,1.141,67,3.784,68,1.916,69,3.089,70,3.52,71,3.52,72,3.52,73,1.777,74,3.089,75,2.779,76,2.779,77,2.779,78,3.8,79,2.779,80,2.779,81,3.089,82,2.779,83,3.089,84,4.33,85,3.52,86,1.916,87,1.916,88,3.8]],["title/classes/CreateUserDto.html",[21,0.022,89,1.308]],["body/classes/CreateUserDto.html",[3,0.585,4,0.493,5,0.493,11,0.042,20,0.585,21,0.031,26,0.033,27,0.039,28,0.033,66,1.662,89,2.239,90,3.292,91,2.793]],["title/classes/Todo.html",[21,0.022,92,1.308]],["body/classes/Todo.html",[3,0.327,4,0.275,5,0.275,7,0.574,10,2.467,11,0.045,12,1.716,15,1.966,16,0.441,20,0.327,21,0.017,26,0.018,27,0.026,28,0.018,57,2.67,66,0.928,69,2.67,70,3.145,71,3.145,72,3.145,73,1.994,74,3.452,81,2.67,86,1.559,92,1.521,93,1.838,94,3.869,95,2.312,96,1.722,97,3.869,98,4.247,99,3.869,100,2.261,101,1.963,102,3.869,103,2.261,104,2.261,105,2.67,106,3.285,107,2.261,108,2.261,109,2.261,110,2.261,111,2.261,112,3.869,113,2.261,114,4.247,115,2.261,116,1.559,117,2.261,118,2.261]],["title/controllers/TodoController.html",[0,1.16,119,1.689]],["body/controllers/TodoController.html",[0,0.688,2,0.688,3,0.242,4,0.204,5,0.204,7,0.426,8,1.213,10,2.076,11,0.045,12,1.444,14,1.833,16,0.773,17,0.482,20,0.242,21,0.013,22,1.156,23,1.156,24,1.833,26,0.013,27,0.021,28,0.013,65,1.944,73,1.498,92,1.213,96,1.913,101,2.789,119,1.566,120,1.363,121,1.363,122,4.165,123,2.131,124,2.131,125,2.624,126,2.131,127,2.967,128,1.363,129,2.624,130,1.676,131,2.181,132,2.181,133,3.691,134,1.676,135,2.131,136,1.676,137,4.387,138,1.676,139,2.299,140,2.621,141,1.676,142,1.676,143,2.131,144,1.676,145,1.676,146,2.131,147,1.363,148,1.363,149,1.676,150,1.002,151,1.808,152,1.002,153,1.363,154,1.494,155,1.363,156,1.676,157,1.676,158,1.676,159,1.676,160,1.676,161,1.676,162,1.676,163,1.676,164,1.676,165,1.676]],["title/modules/TodoModule.html",[29,1.16,41,1.481]],["body/modules/TodoModule.html",[2,1.592,3,0.414,4,0.348,5,0.348,11,0.045,16,0.961,17,0.823,20,0.414,21,0.022,26,0.023,27,0.031,28,0.023,29,1.805,31,1.326,32,1.326,33,1.712,34,1.712,35,1.326,36,2.628,37,1.712,41,2.661,43,2.318,44,1.712,45,1.712,47,2.328,50,2.328,51,1.712,92,1.326,119,2.628,154,2.35,155,2.328,166,2.328,167,2.328,168,2.864,169,2.864,170,2.864,171,2.864]],["title/injectables/TodoService.html",[59,1.16,154,1.308]],["body/injectables/TodoService.html",[3,0.235,4,0.198,5,0.198,7,0.413,8,1.185,11,0.046,12,1.512,14,1.808,16,0.809,17,0.467,20,0.235,21,0.013,24,1.808,26,0.013,27,0.021,28,0.013,51,0.973,59,1.051,60,0.973,65,1.808,73,1.603,92,1.185,95,2.478,96,2.047,101,2.763,116,1.122,122,4.14,123,2.082,124,2.082,125,2.082,126,2.082,127,2.919,128,2.082,131,2.334,132,2.334,133,3.654,139,2.356,150,0.973,151,1.766,152,0.973,153,1.323,154,1.185,172,1.323,173,2.561,174,1.628,175,2.919,176,1.628,177,2.561,178,1.628,179,2.561,180,1.628,181,2.561,182,1.628,183,2.561,184,1.628,185,1.628,186,1.628,187,1.628,188,1.628,189,4.147,190,1.628,191,1.628,192,2.561,193,2.082,194,1.628,195,1.628,196,1.628,197,1.628,198,1.628]],["title/classes/UpdateTodoDTO.html",[21,0.022,139,1.481]],["body/classes/UpdateTodoDTO.html",[3,0.505,4,0.425,5,0.425,11,0.045,16,0.945,20,0.505,21,0.034,26,0.028,27,0.036,28,0.028,65,1.616,66,1.433,68,2.408,83,2.839,85,2.839,86,2.408,87,2.408,139,2.315,151,2.408,199,2.839,200,2.839,201,2.408,202,2.408,203,2.087,204,2.839,205,3.492]],["title/classes/UpdateUserDto.html",[21,0.022,206,1.481]],["body/classes/UpdateUserDto.html",[3,0.531,4,0.447,5,0.447,11,0.044,16,0.89,20,0.531,21,0.028,26,0.03,27,0.037,28,0.03,66,1.509,89,1.702,91,2.535,200,2.988,201,2.535,202,2.535,203,2.197,204,2.988,206,2.39,207,2.988,208,2.535,209,3.676]],["title/classes/User.html",[21,0.022,210,1.689]],["body/classes/User.html",[3,0.59,4,0.496,5,0.496,11,0.042,20,0.59,21,0.031,26,0.033,27,0.039,28,0.033,66,1.674,210,2.904,211,3.316]],["title/controllers/UsersController.html",[0,1.16,212,1.689]],["body/controllers/UsersController.html",[0,0.759,2,0.759,3,0.267,4,0.225,5,0.225,7,0.469,8,1.309,10,2.171,11,0.046,12,1.511,14,1.918,15,2.224,16,0.75,17,0.531,20,0.267,21,0.014,22,1.275,23,1.275,24,1.918,26,0.015,27,0.023,28,0.015,73,1.578,89,2.022,95,2.611,96,2.015,121,1.503,129,2.791,131,2.297,132,2.297,135,2.298,143,2.298,146,2.298,147,1.503,148,1.503,150,1.105,152,1.105,203,1.689,206,2.457,208,1.95,212,1.689,213,1.503,214,1.503,215,3.125,216,2.298,217,2.298,218,2.298,219,1.503,220,1.849,221,1.849,222,1.503,223,1.849,224,1.503,225,1.849,226,1.503,227,2.827,228,1.849,229,1.849,230,1.589,231,1.503,232,1.849,233,1.849,234,1.849,235,1.849,236,1.849,237,1.849,238,1.849,239,1.849,240,1.849,241,1.849]],["title/modules/UsersModule.html",[29,1.16,42,1.481]],["body/modules/UsersModule.html",[2,1.662,3,0.441,4,0.371,5,0.371,11,0.044,16,0.886,17,0.877,20,0.441,21,0.024,26,0.025,27,0.033,28,0.025,29,1.864,31,1.413,32,1.413,33,1.824,34,1.824,35,1.413,36,2.714,37,1.824,42,2.711,43,2.419,44,1.824,45,1.824,212,2.714,230,2.394,231,2.481,242,2.481,243,2.481,244,3.053,245,3.053]],["title/injectables/UsersService.html",[59,1.16,230,1.308]],["body/injectables/UsersService.html",[3,0.288,4,0.243,5,0.243,7,0.506,8,1.386,11,0.045,12,1.562,14,2.159,15,1.982,16,0.702,17,0.573,20,0.288,21,0.015,24,1.982,26,0.016,27,0.024,28,0.016,59,1.229,60,1.192,73,1.64,89,1.982,95,2.688,96,2.094,101,2.933,131,2.388,132,2.388,150,1.192,152,1.192,203,1.789,206,2.445,208,2.065,210,2.388,214,1.621,215,3.248,216,2.434,217,2.434,218,2.434,219,2.434,222,2.434,224,2.434,226,2.434,230,1.386,246,1.621,247,1.994,248,1.994,249,1.994,250,1.994,251,1.994,252,4.283,253,1.994,254,1.621,255,1.994,256,1.994]],["title/coverage.html",[257,2.651]],["body/coverage.html",[0,1.607,1,1.379,5,0.281,6,1.876,11,0.045,18,1.068,21,0.037,26,0.019,27,0.027,28,0.019,35,1.068,59,1.607,61,1.876,65,1.068,67,1.876,68,2.299,73,0.947,89,1.068,90,1.876,91,2.299,92,1.068,93,1.876,119,1.379,120,1.876,139,1.209,154,1.068,172,1.876,199,1.876,206,1.209,207,1.876,210,1.379,211,1.876,212,1.379,213,1.876,230,1.068,246,1.876,254,1.876,257,1.591,258,2.308,259,2.308,260,2.308,261,5.489,262,3.334,263,3.486,264,4.288,265,1.876,266,5.098,267,1.876,268,1.876,269,1.876,270,1.876,271,2.308,272,2.308,273,3.334,274,3.915,275,2.308,276,2.308]],["title/dependencies.html",[32,1.572,277,2.367]],["body/dependencies.html",[11,0.046,17,0.917,21,0.032,26,0.026,27,0.034,28,0.026,32,1.478,49,2.595,51,1.908,87,2.202,116,2.202,201,2.202,202,2.202,278,3.192,279,3.192,280,3.192,281,4.169,282,3.192,283,3.192,284,3.192,285,3.192,286,3.192,287,3.192,288,3.192,289,3.192,290,3.192,291,3.192,292,3.192,293,3.192,294,3.192,295,3.192,296,3.192,297,3.192,298,3.192,299,3.192,300,3.192]],["title/miscellaneous/functions.html",[301,1.414,302,2.76]],["body/miscellaneous/functions.html",[7,1.051,11,0.039,26,0.033,27,0.039,28,0.033,35,2.417,270,3.365,301,2.474,302,3.365,303,4.14]],["title/index.html",[7,0.601,304,2.367,305,2.367]],["body/index.html",[4,0.306,11,0.044,26,0.02,27,0.029,28,0.02,175,2.045,257,1.735,306,2.516,307,2.516,308,3.546,309,2.516,310,2.516,311,2.516,312,2.516,313,2.516,314,2.516,315,2.516,316,2.516,317,2.516,318,2.516,319,4.107,320,2.516,321,2.516,322,2.516,323,5.013,324,2.516,325,2.516,326,2.516,327,4.878,328,2.516,329,2.516,330,3.546,331,2.516,332,2.516,333,2.516,334,2.516,335,3.546,336,3.546,337,2.516,338,2.516,339,2.516,340,3.546,341,3.546,342,2.516,343,2.516,344,2.516,345,2.516,346,2.516,347,2.045,348,2.516,349,2.516,350,2.516,351,2.516,352,2.516,353,2.516,354,2.516,355,2.516,356,2.516,357,2.516,358,2.516,359,2.516,360,2.516,361,2.516,362,2.516,363,2.516,364,2.516,365,2.516]],["title/modules.html",[31,1.779]],["body/modules.html",[11,0.038,26,0.031,27,0.038,28,0.031,30,2.335,31,1.809,41,2.048,42,2.048,347,4.141,366,5.094,367,5.094,368,5.094]],["title/overview.html",[369,3.125]],["body/overview.html",[2,1.233,11,0.042,18,2.085,26,0.024,27,0.032,28,0.024,29,1.233,30,3.19,31,1.39,32,1.39,33,1.795,34,1.795,35,1.39,36,1.795,37,1.795,38,2.441,39,2.441,40,2.441,41,2.623,42,2.623,43,2.393,44,1.795,45,1.795,60,1.795,66,1.233,154,2.085,166,2.441,167,2.441,230,2.085,242,2.441,243,2.441,369,2.441,370,4.505,371,3.003]],["title/miscellaneous/variables.html",[301,1.414,372,2.76]],["body/miscellaneous/variables.html",[7,0.87,11,0.043,26,0.028,27,0.035,28,0.028,105,4.109,193,4.109,263,2.786,265,3.904,267,3.904,268,3.904,269,3.904,301,2.048,372,2.786,373,5.055,374,5.055]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateTodoDTO.html":{},"classes/CreateUserDto.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":261,"title":{},"body":{"coverage.html":{}}}],["0.1.1",{"_index":282,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":295,"title":{},"body":{"dependencies.html":{}}}],["0.13.0",{"_index":288,"title":{},"body":{"dependencies.html":{}}}],["0.2.30",{"_index":300,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":287,"title":{},"body":{"dependencies.html":{}}}],["0.6.1",{"_index":279,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":266,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":262,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":272,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":274,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":273,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":78,"title":{},"body":{"classes/CreateTodoDTO.html":{}}}],["2.18.1",{"_index":292,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":370,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":297,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":81,"title":{},"body":{"classes/CreateTodoDTO.html":{},"classes/Todo.html":{}}}],["6",{"_index":371,"title":{},"body":{"overview.html":{}}}],["6.5.4",{"_index":299,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":281,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":285,"title":{},"body":{"dependencies.html":{}}}],["7.6.5",{"_index":278,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":290,"title":{},"body":{"dependencies.html":{}}}],["action",{"_index":252,"title":{},"body":{"injectables/UsersService.html":{}}}],["adds",{"_index":253,"title":{},"body":{"injectables/UsersService.html":{}}}],["amazing",{"_index":348,"title":{},"body":{"index.html":{}}}],["angular",{"_index":317,"title":{},"body":{"index.html":{}}}],["app",{"_index":325,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":314,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":122,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["author",{"_index":358,"title":{},"body":{"index.html":{}}}],["await",{"_index":189,"title":{},"body":{"injectables/TodoService.html":{}}}],["backers",{"_index":349,"title":{},"body":{"index.html":{}}}],["body",{"_index":146,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":74,"title":{},"body":{"classes/CreateTodoDTO.html":{},"classes/Todo.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/TodoModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":368,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":366,"title":{},"body":{"modules.html":{}}}],["building",{"_index":309,"title":{},"body":{"index.html":{}}}],["class",{"_index":21,"title":{"classes/CreateTodoDTO.html":{},"classes/CreateUserDto.html":{},"classes/Todo.html":{},"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateTodoDTO.html":{},"classes/CreateUserDto.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":66,"title":{},"body":{"classes/CreateTodoDTO.html":{},"classes/CreateUserDto.html":{},"classes/Todo.html":{},"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_todomodule",{"_index":166,"title":{},"body":{"modules/TodoModule.html":{},"overview.html":{}}}],["cluster_todomodule_providers",{"_index":167,"title":{},"body":{"modules/TodoModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":242,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":243,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":114,"title":{},"body":{"classes/Todo.html":{}}}],["column({length",{"_index":110,"title":{},"body":{"classes/Todo.html":{}}}],["column({nullable",{"_index":108,"title":{},"body":{"classes/Todo.html":{}}}],["column({type",{"_index":104,"title":{},"body":{"classes/Todo.html":{}}}],["configmodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":193,"title":{},"body":{"injectables/TodoService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":173,"title":{},"body":{"injectables/TodoService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/TodoController.html":{},"controllers/UsersController.html":{}}}],["constructor(todorepository",{"_index":174,"title":{},"body":{"injectables/TodoService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/TodoController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/TodoController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('todo",{"_index":156,"title":{},"body":{"controllers/TodoController.html":{}}}],["controller('users",{"_index":232,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":257,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":203,"title":{},"body":{"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":233,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(createuserdto",{"_index":219,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createdat",{"_index":94,"title":{},"body":{"classes/Todo.html":{}}}],["createdatecolumn",{"_index":99,"title":{},"body":{"classes/Todo.html":{}}}],["createtodo",{"_index":123,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["createtodo(@body",{"_index":158,"title":{},"body":{"controllers/TodoController.html":{}}}],["createtodo(createtododto",{"_index":128,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["createtododto",{"_index":65,"title":{"classes/CreateTodoDTO.html":{}},"body":{"classes/CreateTodoDTO.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"classes/UpdateTodoDTO.html":{},"coverage.html":{}}}],["createuserdto",{"_index":89,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["database_connection_dev",{"_index":265,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["database_connection_prod",{"_index":267,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["database_connection_test",{"_index":268,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":98,"title":{},"body":{"classes/Todo.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/TodoModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateTodoDTO.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":105,"title":{},"body":{"classes/Todo.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateTodoDTO.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":147,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UsersController.html":{}}}],["delete(':id",{"_index":135,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UsersController.html":{}}}],["deletetodo",{"_index":124,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["deletetodo(@param('id",{"_index":164,"title":{},"body":{"controllers/TodoController.html":{}}}],["deletetodo(id",{"_index":179,"title":{},"body":{"injectables/TodoService.html":{}}}],["deletetodo(todoid",{"_index":134,"title":{},"body":{"controllers/TodoController.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/TodoModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":318,"title":{},"body":{"index.html":{}}}],["development",{"_index":326,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":258,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":289,"title":{},"body":{"dependencies.html":{}}}],["dto/create",{"_index":150,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":152,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":337,"title":{},"body":{"index.html":{}}}],["edittodo",{"_index":125,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["edittodo(id",{"_index":181,"title":{},"body":{"injectables/TodoService.html":{}}}],["edittodo(updatetododto",{"_index":138,"title":{},"body":{"controllers/TodoController.html":{}}}],["efficient",{"_index":310,"title":{},"body":{"index.html":{}}}],["entities/todo.entity",{"_index":153,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["entity",{"_index":115,"title":{},"body":{"classes/Todo.html":{}}}],["entity('todo",{"_index":117,"title":{},"body":{"classes/Todo.html":{}}}],["entity/todo.entity",{"_index":169,"title":{},"body":{"modules/TodoModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateTodoDTO.html":{},"classes/CreateUserDto.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/TodoModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":284,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":204,"title":{},"body":{"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{}}}],["false",{"_index":106,"title":{},"body":{"classes/Todo.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateTodoDTO.html":{},"classes/CreateUserDto.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":215,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findbyid",{"_index":126,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["findbyid(@param('id",{"_index":160,"title":{},"body":{"controllers/TodoController.html":{}}}],["findbyid(id",{"_index":183,"title":{},"body":{"injectables/TodoService.html":{}}}],["findbyid(todoid",{"_index":142,"title":{},"body":{"controllers/TodoController.html":{}}}],["findone",{"_index":216,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":236,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(id",{"_index":222,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":308,"title":{},"body":{"index.html":{}}}],["function",{"_index":271,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":302,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":143,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UsersController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":304,"title":{"index.html":{}},"body":{}}],["gettodolist",{"_index":127,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["grow",{"_index":344,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":315,"title":{},"body":{"index.html":{}}}],["hello",{"_index":63,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":355,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":362,"title":{},"body":{"index.html":{}}}],["id",{"_index":95,"title":{},"body":{"classes/Todo.html":{},"injectables/TodoService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":259,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateTodoDTO.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/TodoModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateTodoDTO.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateTodoDTO.html":{},"classes/CreateUserDto.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":59,"title":{"injectables/AppService.html":{},"injectables/TodoService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/TodoService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":60,"title":{},"body":{"injectables/AppService.html":{},"injectables/TodoService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":186,"title":{},"body":{"injectables/TodoService.html":{}}}],["injectrepository(todo",{"_index":187,"title":{},"body":{"injectables/TodoService.html":{}}}],["inspired",{"_index":316,"title":{},"body":{"index.html":{}}}],["installation",{"_index":322,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":324,"title":{},"body":{"index.html":{}}}],["isboolean",{"_index":83,"title":{},"body":{"classes/CreateTodoDTO.html":{},"classes/UpdateTodoDTO.html":{}}}],["isdone",{"_index":70,"title":{},"body":{"classes/CreateTodoDTO.html":{},"classes/Todo.html":{}}}],["isglobal",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["isoptional",{"_index":84,"title":{},"body":{"classes/CreateTodoDTO.html":{}}}],["isoptional()@isboolean",{"_index":75,"title":{},"body":{"classes/CreateTodoDTO.html":{}}}],["isstring",{"_index":85,"title":{},"body":{"classes/CreateTodoDTO.html":{},"classes/UpdateTodoDTO.html":{}}}],["isstring()@isoptional()@length(1",{"_index":77,"title":{},"body":{"classes/CreateTodoDTO.html":{}}}],["isstring()@length(1",{"_index":80,"title":{},"body":{"classes/CreateTodoDTO.html":{}}}],["join",{"_index":351,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":359,"title":{},"body":{"index.html":{}}}],["key",{"_index":194,"title":{},"body":{"injectables/TodoService.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/TodoModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":86,"title":{},"body":{"classes/CreateTodoDTO.html":{},"classes/Todo.html":{},"classes/UpdateTodoDTO.html":{}}}],["length(1",{"_index":88,"title":{},"body":{"classes/CreateTodoDTO.html":{}}}],["license",{"_index":365,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":341,"title":{},"body":{"index.html":{}}}],["longdesc",{"_index":71,"title":{},"body":{"classes/CreateTodoDTO.html":{},"classes/Todo.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateTodoDTO.html":{},"classes/CreateUserDto.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":294,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":301,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":340,"title":{},"body":{"index.html":{}}}],["mode",{"_index":330,"title":{},"body":{"index.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/TodoModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TodoModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/TodoModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":354,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":291,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":360,"title":{},"body":{"index.html":{}}}],["name",{"_index":132,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":319,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":364,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":280,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":201,"title":{},"body":{"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":283,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"dependencies.html":{}}}],["new",{"_index":254,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["node.js",{"_index":307,"title":{},"body":{"index.html":{}}}],["npm",{"_index":323,"title":{},"body":{"index.html":{}}}],["nullable",{"_index":118,"title":{},"body":{"classes/Todo.html":{}}}],["number",{"_index":101,"title":{},"body":{"classes/Todo.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"injectables/UsersService.html":{}}}],["open",{"_index":342,"title":{},"body":{"index.html":{}}}],["optional",{"_index":96,"title":{},"body":{"classes/Todo.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/TodoModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":369,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":277,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":148,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":162,"title":{},"body":{"controllers/TodoController.html":{}}}],["parameters",{"_index":131,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["partialtype",{"_index":200,"title":{},"body":{"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createtododto",{"_index":205,"title":{},"body":{"classes/UpdateTodoDTO.html":{}}}],["partialtype(createuserdto",{"_index":209,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["patch",{"_index":149,"title":{},"body":{"controllers/TodoController.html":{}}}],["patch(':id",{"_index":140,"title":{},"body":{"controllers/TodoController.html":{}}}],["photo_repository",{"_index":269,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":352,"title":{},"body":{"index.html":{}}}],["post",{"_index":129,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UsersController.html":{}}}],["prefix",{"_index":121,"title":{},"body":{"controllers/TodoController.html":{},"controllers/UsersController.html":{}}}],["primarygeneratedcolumn",{"_index":102,"title":{},"body":{"classes/Todo.html":{}}}],["private",{"_index":188,"title":{},"body":{"injectables/TodoService.html":{}}}],["production",{"_index":332,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":306,"title":{},"body":{"index.html":{}}}],["project",{"_index":343,"title":{},"body":{"index.html":{}}}],["promise",{"_index":133,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["properties",{"_index":69,"title":{},"body":{"classes/CreateTodoDTO.html":{},"classes/Todo.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/TodoModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["put",{"_index":229,"title":{},"body":{"controllers/UsersController.html":{}}}],["put(':id",{"_index":227,"title":{},"body":{"controllers/UsersController.html":{}}}],["read",{"_index":353,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/TodoController.html":{},"controllers/UsersController.html":{}}}],["reflect",{"_index":293,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":217,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":240,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove(id",{"_index":224,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":256,"title":{},"body":{"injectables/UsersService.html":{}}}],["repository",{"_index":175,"title":{},"body":{"injectables/TodoService.html":{},"index.html":{}}}],["reset",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/TodoModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateTodoDTO.html":{},"classes/CreateUserDto.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateTodoDTO.html":{},"classes/CreateUserDto.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":296,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":327,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":298,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":311,"title":{},"body":{"index.html":{}}}],["server",{"_index":312,"title":{},"body":{"index.html":{}}}],["shortdesc",{"_index":72,"title":{},"body":{"classes/CreateTodoDTO.html":{},"classes/Todo.html":{}}}],["side",{"_index":313,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateTodoDTO.html":{},"classes/CreateUserDto.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":346,"title":{},"body":{"index.html":{}}}],["src/.../constants.ts",{"_index":373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":303,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":61,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":62,"title":{},"body":{"injectables/AppService.html":{}}}],["src/constants.ts",{"_index":263,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":270,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/todo/dto/create",{"_index":67,"title":{},"body":{"classes/CreateTodoDTO.html":{},"coverage.html":{}}}],["src/todo/dto/update",{"_index":199,"title":{},"body":{"classes/UpdateTodoDTO.html":{},"coverage.html":{}}}],["src/todo/entities/todo.entity.ts",{"_index":93,"title":{},"body":{"classes/Todo.html":{},"coverage.html":{}}}],["src/todo/entities/todo.entity.ts:12",{"_index":103,"title":{},"body":{"classes/Todo.html":{}}}],["src/todo/entities/todo.entity.ts:15",{"_index":111,"title":{},"body":{"classes/Todo.html":{}}}],["src/todo/entities/todo.entity.ts:18",{"_index":109,"title":{},"body":{"classes/Todo.html":{}}}],["src/todo/entities/todo.entity.ts:21",{"_index":107,"title":{},"body":{"classes/Todo.html":{}}}],["src/todo/entities/todo.entity.ts:24",{"_index":100,"title":{},"body":{"classes/Todo.html":{}}}],["src/todo/entities/todo.entity.ts:27",{"_index":113,"title":{},"body":{"classes/Todo.html":{}}}],["src/todo/todo.controller.ts",{"_index":120,"title":{},"body":{"controllers/TodoController.html":{},"coverage.html":{}}}],["src/todo/todo.controller.ts:20",{"_index":145,"title":{},"body":{"controllers/TodoController.html":{}}}],["src/todo/todo.controller.ts:25",{"_index":130,"title":{},"body":{"controllers/TodoController.html":{}}}],["src/todo/todo.controller.ts:30",{"_index":144,"title":{},"body":{"controllers/TodoController.html":{}}}],["src/todo/todo.controller.ts:35",{"_index":141,"title":{},"body":{"controllers/TodoController.html":{}}}],["src/todo/todo.controller.ts:43",{"_index":136,"title":{},"body":{"controllers/TodoController.html":{}}}],["src/todo/todo.module.ts",{"_index":168,"title":{},"body":{"modules/TodoModule.html":{}}}],["src/todo/todo.service.ts",{"_index":172,"title":{},"body":{"injectables/TodoService.html":{},"coverage.html":{}}}],["src/todo/todo.service.ts:14",{"_index":185,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/todo/todo.service.ts:18",{"_index":178,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/todo/todo.service.ts:22",{"_index":184,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/todo/todo.service.ts:26",{"_index":182,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/todo/todo.service.ts:34",{"_index":180,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/todo/todo.service.ts:9",{"_index":176,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/users/dto/create",{"_index":90,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":207,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts",{"_index":211,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/users.controller.ts",{"_index":213,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:11",{"_index":220,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:16",{"_index":221,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:21",{"_index":223,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:26",{"_index":228,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:31",{"_index":225,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":244,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":246,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:11",{"_index":248,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:15",{"_index":249,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:19",{"_index":251,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:23",{"_index":250,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:7",{"_index":247,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":328,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":331,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":333,"title":{},"body":{"index.html":{}}}],["started",{"_index":305,"title":{"index.html":{}},"body":{}}],["starter",{"_index":321,"title":{},"body":{"index.html":{}}}],["statements",{"_index":260,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":356,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateTodoDTO.html":{},"classes/Todo.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["support",{"_index":347,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":367,"title":{},"body":{"modules.html":{}}}],["table",{"_index":276,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":275,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":336,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":339,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":338,"title":{},"body":{"index.html":{}}}],["tests",{"_index":335,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":345,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.todorepository.delete",{"_index":198,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.todorepository.find",{"_index":190,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.todorepository.findone",{"_index":192,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.todorepository.save(createtododto",{"_index":191,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.todorepository.save(todo",{"_index":197,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.todoservice.createtodo(createtododto",{"_index":159,"title":{},"body":{"controllers/TodoController.html":{}}}],["this.todoservice.deletetodo(todoid",{"_index":165,"title":{},"body":{"controllers/TodoController.html":{}}}],["this.todoservice.edittodo(todoid",{"_index":163,"title":{},"body":{"controllers/TodoController.html":{}}}],["this.todoservice.findbyid(todoid",{"_index":161,"title":{},"body":{"controllers/TodoController.html":{}}}],["this.todoservice.gettodolist",{"_index":157,"title":{},"body":{"controllers/TodoController.html":{}}}],["this.usersservice.create(createuserdto",{"_index":234,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":235,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(+id",{"_index":237,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(+id",{"_index":241,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(+id",{"_index":239,"title":{},"body":{"controllers/UsersController.html":{}}}],["todo",{"_index":92,"title":{"classes/Todo.html":{}},"body":{"classes/Todo.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"coverage.html":{}}}],["todo.controller",{"_index":170,"title":{},"body":{"modules/TodoModule.html":{}}}],["todo.dto",{"_index":151,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{},"classes/UpdateTodoDTO.html":{}}}],["todo.dto.ts",{"_index":68,"title":{},"body":{"classes/CreateTodoDTO.html":{},"classes/UpdateTodoDTO.html":{},"coverage.html":{}}}],["todo.dto.ts:11",{"_index":79,"title":{},"body":{"classes/CreateTodoDTO.html":{}}}],["todo.dto.ts:15",{"_index":76,"title":{},"body":{"classes/CreateTodoDTO.html":{}}}],["todo.dto.ts:6",{"_index":82,"title":{},"body":{"classes/CreateTodoDTO.html":{}}}],["todo.service",{"_index":155,"title":{},"body":{"controllers/TodoController.html":{},"modules/TodoModule.html":{}}}],["todo/todo.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["todo[key",{"_index":195,"title":{},"body":{"injectables/TodoService.html":{}}}],["todocontroller",{"_index":119,"title":{"controllers/TodoController.html":{}},"body":{"controllers/TodoController.html":{},"modules/TodoModule.html":{},"coverage.html":{}}}],["todoid",{"_index":137,"title":{},"body":{"controllers/TodoController.html":{}}}],["todomodule",{"_index":41,"title":{"modules/TodoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TodoModule.html":{},"modules.html":{},"overview.html":{}}}],["todorepository",{"_index":177,"title":{},"body":{"injectables/TodoService.html":{}}}],["todoservice",{"_index":154,"title":{"injectables/TodoService.html":{}},"body":{"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"coverage.html":{},"overview.html":{}}}],["touch",{"_index":357,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":286,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"classes/Todo.html":{}}}],["twitter",{"_index":363,"title":{},"body":{"index.html":{}}}],["type",{"_index":73,"title":{},"body":{"classes/CreateTodoDTO.html":{},"classes/Todo.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["typeorm",{"_index":116,"title":{},"body":{"classes/Todo.html":{},"injectables/TodoService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/TodoModule.html":{}}}],["typeormmodule.forfeature([todo",{"_index":171,"title":{},"body":{"modules/TodoModule.html":{}}}],["typeormmodule.forroot",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":202,"title":{},"body":{"classes/UpdateTodoDTO.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":320,"title":{},"body":{"index.html":{}}}],["unit",{"_index":334,"title":{},"body":{"index.html":{}}}],["update",{"_index":218,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@param('id",{"_index":238,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(id",{"_index":226,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatedat",{"_index":97,"title":{},"body":{"classes/Todo.html":{}}}],["updatedatecolumn",{"_index":112,"title":{},"body":{"classes/Todo.html":{}}}],["updates",{"_index":255,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatetododto",{"_index":139,"title":{"classes/UpdateTodoDTO.html":{}},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{},"classes/UpdateTodoDTO.html":{},"coverage.html":{}}}],["updatetododto[key",{"_index":196,"title":{},"body":{"injectables/TodoService.html":{}}}],["updateuserdto",{"_index":206,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user",{"_index":210,"title":{"classes/User.html":{}},"body":{"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.dto",{"_index":208,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":91,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["users",{"_index":214,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":245,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":231,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":212,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":42,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":230,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["validator",{"_index":87,"title":{},"body":{"classes/CreateTodoDTO.html":{},"classes/UpdateTodoDTO.html":{},"dependencies.html":{}}}],["value",{"_index":374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":264,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":372,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":329,"title":{},"body":{"index.html":{}}}],["website",{"_index":361,"title":{},"body":{"index.html":{}}}],["world",{"_index":64,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":350,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/TodoModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nTodoModule\n\nTodoModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTodoModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TodoModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TodoModule } from './todo/todo.module';\nimport { UsersModule } from './users/users.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ isGlobal: true }),\n    TypeOrmModule.forRoot(),\n    TodoModule,\n    UsersModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTodoDTO.html":{"url":"classes/CreateTodoDTO.html","title":"class - CreateTodoDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTodoDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/dto/create-todo.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isDone\n                            \n                            \n                                longDesc\n                            \n                            \n                                shortDesc\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/todo/dto/create-todo.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            longDesc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsOptional()@Length(1, 100)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/todo/dto/create-todo.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shortDesc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@Length(1, 50)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/todo/dto/create-todo.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsOptional, IsString, Length } from 'class-validator';\n\nexport class CreateTodoDTO {\n  @IsString()\n  @Length(1, 50)\n  shortDesc: string;\n\n  @IsString()\n  @IsOptional()\n  @Length(1, 100)\n  longDesc: string;\n\n  @IsOptional()\n  @IsBoolean()\n  isDone: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUserDto {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Todo.html":{"url":"classes/Todo.html","title":"class - Todo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Todo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/entities/todo.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                isDone\n                            \n                            \n                                    Optional\n                                longDesc\n                            \n                            \n                                shortDesc\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/todo/entities/todo.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/todo/entities/todo.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'boolean', default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/todo/entities/todo.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            longDesc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/todo/entities/todo.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shortDesc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/todo/entities/todo.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/todo/entities/todo.entity.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity('Todo')\nexport class Todo {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ length: 50 })\n  shortDesc: string;\n\n  @Column({ nullable: true })\n  longDesc?: string;\n\n  @Column({ type: 'boolean', default: false })\n  isDone: boolean;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TodoController.html":{"url":"controllers/TodoController.html","title":"controller - TodoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TodoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/todo.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                todo\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTodo\n                            \n                            \n                                    Async\n                                deleteTodo\n                            \n                            \n                                    Async\n                                editTodo\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                getTodolist\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createTodo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTodo(createTodoDTO: CreateTodoDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/todo/todo.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTodoDTO\n                                    \n                                                CreateTodoDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteTodo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTodo(todoId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/todo/todo.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    todoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editTodo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editTodo(updateTodoDTO: UpdateTodoDTO, todoId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/todo/todo.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateTodoDTO\n                                    \n                                                UpdateTodoDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    todoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(todoId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/todo/todo.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    todoId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTodolist\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTodolist()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/todo/todo.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n} from '@nestjs/common';\nimport { CreateTodoDTO } from './dto/create-todo.dto';\nimport { UpdateTodoDTO } from './dto/update-todo.dto';\nimport { Todo } from './entities/todo.entity';\nimport { TodoService } from './todo.service';\n\n@Controller('todo')\nexport class TodoController {\n  constructor(private readonly todoService: TodoService) {}\n\n  @Get()\n  async getTodolist(): Promise {\n    return this.todoService.getTodolist();\n  }\n\n  @Post()\n  async createTodo(@Body() createTodoDTO: CreateTodoDTO): Promise {\n    return this.todoService.createTodo(createTodoDTO);\n  }\n\n  @Get(':id')\n  async findById(@Param('id') todoId: number): Promise {\n    return this.todoService.findById(todoId);\n  }\n\n  @Patch(':id')\n  async editTodo(\n    @Body() updateTodoDTO: UpdateTodoDTO,\n    @Param('id') todoId: number,\n  ): Promise {\n    return this.todoService.editTodo(todoId, updateTodoDTO);\n  }\n\n  @Delete(':id')\n  async deleteTodo(@Param('id') todoId: number) {\n    return this.todoService.deleteTodo(todoId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TodoModule.html":{"url":"modules/TodoModule.html","title":"module - TodoModule","body":"\n                   \n\n\n\n\n    Modules\n    TodoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TodoModule\n\n\n\ncluster_TodoModule_providers\n\n\n\n\nTodoService\n\nTodoService\n\n\n\nTodoModule\n\nTodoModule\n\nTodoModule -->\n\nTodoService->TodoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/todo/todo.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TodoService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TodoController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Todo } from './entity/todo.entity';\nimport { TodoController } from './todo.controller';\nimport { TodoService } from './todo.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Todo])],\n  controllers: [TodoController],\n  providers: [TodoService],\n})\nexport class TodoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TodoService.html":{"url":"injectables/TodoService.html","title":"injectable - TodoService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TodoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/todo.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTodo\n                            \n                            \n                                    Async\n                                deleteTodo\n                            \n                            \n                                    Async\n                                editTodo\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                getTodolist\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(todoRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/todo/todo.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        todoRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createTodo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTodo(createTodoDTO: CreateTodoDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/todo/todo.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTodoDTO\n                                    \n                                                CreateTodoDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteTodo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTodo(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/todo/todo.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editTodo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editTodo(id: number, updateTodoDTO: UpdateTodoDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/todo/todo.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTodoDTO\n                                    \n                                                UpdateTodoDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/todo/todo.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTodolist\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTodolist()\n                \n            \n\n\n            \n                \n                    Defined in src/todo/todo.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateTodoDTO } from './dto/create-todo.dto';\nimport { UpdateTodoDTO } from './dto/update-todo.dto';\nimport { Todo } from './entities/todo.entity';\n\n@Injectable()\nexport class TodoService {\n  constructor(\n    @InjectRepository(Todo) private todoRepository: Repository,\n  ) {}\n\n  async getTodolist(): Promise {\n    return await this.todoRepository.find();\n  }\n\n  async createTodo(createTodoDTO: CreateTodoDTO): Promise {\n    return await this.todoRepository.save(createTodoDTO);\n  }\n\n  async findById(id: number): Promise {\n    return await this.todoRepository.findOne({ id });\n  }\n\n  async editTodo(id: number, updateTodoDTO: UpdateTodoDTO): Promise {\n    const todo = await this.todoRepository.findOne({ id });\n    for (const key in updateTodoDTO) {\n      todo[key] = updateTodoDTO[key];\n    }\n    return await this.todoRepository.save(todo);\n  }\n\n  async deleteTodo(id: number) {\n    return await this.todoRepository.delete({ id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTodoDTO.html":{"url":"classes/UpdateTodoDTO.html","title":"class - UpdateTodoDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTodoDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/dto/update-todo.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { IsBoolean, IsString, Length } from 'class-validator';\nimport { CreateTodoDTO } from './create-todo.dto';\n\nexport class UpdateTodoDTO extends PartialType(CreateTodoDTO) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Put, Param, Delete } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(+id);\n  }\n\n  @Put(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(+id, updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService\n\nUsersService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\n\n@Module({\n  controllers: [UsersController],\n  providers: [UsersService]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\n@Injectable()\nexport class UsersService {\n  create(createUserDto: CreateUserDto) {\n    return 'This action adds a new user';\n  }\n\n  findAll() {\n    return `This action returns all users`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} user`;\n  }\n\n  update(id: number, updateUserDto: UpdateUserDto) {\n    return `This action updates a #${id} user`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} user`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            DATABASE_CONNECTION_DEV\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            DATABASE_CONNECTION_PROD\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            DATABASE_CONNECTION_TEST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            PHOTO_REPOSITORY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/todo/dto/create-todo.dto.ts\n            \n            class\n            CreateTodoDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/todo/dto/update-todo.dto.ts\n            \n            class\n            UpdateTodoDTO\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/todo/entities/todo.entity.ts\n            \n            class\n            Todo\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/todo/todo.controller.ts\n            \n            controller\n            TodoController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/todo/todo.service.ts\n            \n            injectable\n            TodoService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.5\n        \n            @nestjs/config : ^0.6.1\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/mapped-types : ^0.1.1\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.13.0\n        \n            dotenv : ^8.2.0\n        \n            mysql : ^2.18.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            typeorm : ^0.2.30\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TodoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_TodoModule\n\n\n\ncluster_TodoModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nTodoModule\n\nTodoModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTodoModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nTodoService\n\nTodoService\n\nTodoModule -->\n\nTodoService->TodoModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DATABASE_CONNECTION_DEV   (src/.../constants.ts)\n                        \n                        \n                            DATABASE_CONNECTION_PROD   (src/.../constants.ts)\n                        \n                        \n                            DATABASE_CONNECTION_TEST   (src/.../constants.ts)\n                        \n                        \n                            PHOTO_REPOSITORY   (src/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DATABASE_CONNECTION_DEV\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'DATABASE_CONNECTION_DEV' as const\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DATABASE_CONNECTION_PROD\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'DATABASE_CONNECTION_PROD' as const\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DATABASE_CONNECTION_TEST\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'DATABASE_CONNECTION_TEST' as const\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PHOTO_REPOSITORY\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'PHOTO_REPOSITORY' as const\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
